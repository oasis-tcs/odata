[
  {
    "title": "Authorization vocabulary: discourage use of OAuth 2 implicit grant flow",
    "body": "Security note: OAuth2 implicit grant is considered to be not secure and should not be used by clients, see [OAuth 2.0 Security Best Current Practice](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-security-topics.html#name-implicit-grant).\n\n### Proposal\n\n[https://github.com/oasis-tcs/odata-vocabularies/pull/238] \n\nImported from [ODATA-1643](https://issues.oasis-open.org/browse/ODATA-1643)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify that content-id referencing for newly created entities also works for entities created by an action",
    "body": "Section [11.7.4 Referencing Returned Entities](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ReferencingReturnedEntities) explicitly mentions \"insert requests\".\n\nSection [11.5.5.1 Invoking an Action](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_InvokinganAction) states that\n> Actions that create and return a single entity follow the rules for [entity creation](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_CreateanEntity) and return a Location header that contains the edit URL or read URL of the created entity.\n> \n\nClarify that referencing returned entities also works for entities created via an action.\n\nAlso clarify whether that requires a bound action to specify an `EntitySetPath` and an action import to specify an `EntitySet`, or whether it is sufficient that the server knows how to identify the returned entity.\n\n### Proposal\n\nReferencing also works for actions that create an entity.\n\n`EntitySetPath` or `EntitySet` are not necessary, the server has to return a `Location` header and thus has to \"know\" how to identify the returned entity.\n\nOptional: action MAY/SHOULD be annotated as a constructor/factory action, see [ODATA-1214](https://issues.oasis-open.org/browse/ODATA-1214).\n\nImported from [ODATA-1637](https://issues.oasis-open.org/browse/ODATA-1637)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Referencing values from request bodies in batch requests: add examples",
    "body": "Section [11.7.6 Referencing Values from Response Bodies](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ReferencingValuesfromResponseBodies) doesn't have counterparts with examples for\n- Multipart requests - would be Protocol section 11.7.7.4\n- JSON Batch - would be JSON Format between current sections 19.3 and 19.4\n\n### Proposal\n\nAdd examples\n\nImported from [ODATA-1636](https://issues.oasis-open.org/browse/ODATA-1636)",
    "labels": [
      "JSON Format",
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Authorization: use consistent alias in vocabulary definition",
    "body": "The `Authorization` vocabulary uses the file-local alias `Auth`, whereas all the other vocabularies use a non-abbreviated alias.\n\nThis repeatedly leads to confusion around \"official\" vocabulary aliases, which can be avoided by being consistent with the other vocabularies.\n\nImported from [ODATA-1634](https://issues.oasis-open.org/browse/ODATA-1634)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 11.5.2 is about \"operations\", not only \"actions\"",
    "body": "Section [11.5.2 Applying an Action to Members of a Collection](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#_Toc31359007) applies to both actions and functions and Example 87 shows a function.\n\n### Proposal\n\nReplace \"Action\" with \"Operation\"\n\nImported from [ODATA-1632](https://issues.oasis-open.org/browse/ODATA-1632)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Validation.Constraint may also be applied to a navigation property",
    "body": "See summary\n\n### Proposal\n\nSee PR\n\nImported from [ODATA-1631](https://issues.oasis-open.org/browse/ODATA-1631)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Avoid homonym \"target path\"",
    "body": "The CSDL specs use \"target path\" with two rather different meanings:\n1. In [navigation property binding target](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_BindingTarget) and in [action import / function import entity set](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ActionImport) it identifies the entity set of related or returned entities.\n1. In [annotation target](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Target) it identifies the annotated model element.\n\nThe syntax of the first kind of target path is defined in section [15.4 Target Path.](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_TargetPath)\n\nThe syntax of the second kind of target path is defined in section [14.2.2 Target](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Target), and this section is the only place where \"target path\" is used for the second meaning, and only once. \n\n### Proposal\n\nConsistently use\n1. \"target path\" for  [navigation property binding target](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_BindingTarget) and[action import / function import entity set](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ActionImport)\n1. \"target expression\" for annotations with external targeting\n\nImported from [ODATA-1629](https://issues.oasis-open.org/browse/ODATA-1629)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "CSDL: correct examples for odata.concat to use two parameters",
    "body": "The CSDL specification claims that\n\nbq. the odata.concat client-side function takes two or more expressions as arguments\n\n and all examples for applying function `odata.concat` show three or more arguments.\n\nThe corresponding URL function however is defined with exactly two arguments.\n\n### Proposal\n\nAdjust examples to use nested calls with exactly two arguments per call.\n\nImported from [ODATA-1628](https://issues.oasis-open.org/browse/ODATA-1628)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Avoid \"MAY ... only if\"",
    "body": "Combining the RFC2119 term \"MAY\" with a negation or restrictions runs counter to what MAY wants to express.\n> Clients MAY do A only if B\n> \n\nsounds as if\n- the client may choose not to do A if B (which is not always implied)\n- there is no rule for the client if not B.\n\nInstead, write\n> Clients MUST NOT do A if (not B)\n> \n\n\n### Proposal\n\nhttps://github.com/oasis-tcs/odata-specs/pull/138\n\nImported from [ODATA-1622](https://issues.oasis-open.org/browse/ODATA-1622)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify context URL in JSON error response",
    "body": "[4.5.1 Control Information: context (odata.context)](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_ControlInformationcontextodatacontex) states that\n> The context control information is not returned if metadata=none is requested. Otherwise *it MUST be the first property of any JSON response*.\n> \n\n\nDoes this also include the [Error Response](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_ErrorResponse) which currently does not mention the `context` control information?\n\n### Proposal\n\nChange text to\n\n> The context control information is not returned if metadata=none is requested. Otherwise it MUST be the first property of any JSON response _that allows this control information_.\n> \n\n\nImported from [ODATA-1620](https://issues.oasis-open.org/browse/ODATA-1620)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Consistently use \"parameter\" instead of \"argument\"",
    "body": "Section [5.1.1.5.7 `substring`](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_substring) talks about \"arguments\", all other sections on canonical functions talk about \"parameters\".\n\n### Proposal\n\nUse \"parameters\" also in the section on \"substring\".\n\nImported from [ODATA-1619](https://issues.oasis-open.org/browse/ODATA-1619)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify matchespattern and regular expression flags",
    "body": "Does the URL function `matchespattern` support [regular expression flags](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_expressions#advanced_searching_with_flags), and if yes, how?\n\nAdd statement and if yes add an example.\n\n### Proposal\n\nAdd overload with third parameter for providing regular expression flags.\n\nAdd example showing its use.\n\nImported from [ODATA-1618](https://issues.oasis-open.org/browse/ODATA-1618)",
    "labels": [
      "URL Conventions",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Is ODATA-1472 an erratum or a new feature?",
    "body": "[ODATA-1472](https://issues.oasis-open.org/browse/ODATA-1472) was closed as part of V4.01_ERRATA01. But isn't it really a new feature, which\n- belongs to V4.02\n- must be mentioned in \"Changes from Earlier Versions\"\n- should be annotated with a Capabilities annotation?\n\n### Proposal\n\n* mention in \"Changes from Earlier Versions\"\n- no capability needed\n\nImported from [ODATA-1617](https://issues.oasis-open.org/browse/ODATA-1617)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Data Modification Request succeeds, but response body cannot be created",
    "body": "Consider a data modification request that requires a response body (for example, creation with `Prefer: return=representation` or `$expand`). Imagine that the data change is committed to the database, but the subsequent database `SELECT` statement fails for some reason.\n\nHow shall the server respond to indicate that the data are changed on the database, yet there is no response body?\n\n- 204 No Content plus `Location` header after an entity creation\n- 204 No Content without `Preference-Applied: representation` header after an update with `Prefer: return=representation`\n\n### Proposal\n\nOData-Protocol, section 11.4.2:\n\nUpon successful creation of the entity, the service MUST respond with either `201 Created` and a representation of the created entity, or `204 No Content` if the request included a Prefer header with a value of `return=minimal` and did not include the system query options `$select` and `$expand,` _or if a representation of the created entity could not be constructed_. In either case, the response MUST contain a `Location` header that contains the edit URL or read URL of the created entity. \n\n \n\nOData-Protocol, section 11.4.3:\n\nUpon successful completion _of the update,_ the service responds with either 200 OK and a representation of the updated entity, or 204 No Content, _for example, if the request did not specify a Prefer Header with a value of return=representation and did not include the system query options $select and $expand, or if a representation of the updated entity could not be constructed_.\n\nImported from [ODATA-1609](https://issues.oasis-open.org/browse/ODATA-1609)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Latest updates for Aggregation vocabulary use wrong-typed DefaultValue for Core.OptionalParameter",
    "body": "See for example:\n\n```xml\n<Parameter Name=\"MaxDistance\" Type=\"Edm.Int16\" Nullable=\"false\">\n  <Annotation Term=\"Core.OptionalParameter\">\n    <Record>\n      <PropertyValue Property=\"DefaultValue\" Int=\"32767\" />*\n    </Record>\n  </Annotation>\n  <Annotation Term=\"Validation.Minimum\" Int=\"1\" />\n</Parameter>\n```\n\nThe DefaultValue property in Core.OptionalParameterType is defined as a TypeDefinition with UnderlyingType Edm.String.  So using Int=\"...\" is not valid.\n\n### Proposal\n\nUse String=\"...\" in the offending PropertyValue elements.\n\nImported from [ODATA-1607](https://issues.oasis-open.org/browse/ODATA-1607)",
    "labels": [
      "Vocabularies",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "ABNF for key values is overly generous",
    "body": "ABNF rule [`keyPropertyValue`](https://github.com/oasis-tcs/odata-abnf/blob/24234aab174f16b73ab963f5b440644faadf06b5/abnf/odata-abnf-construction-rules.txt#L127) is too generous and just references rule `primitiveValue`.\n\nIt should explicitly list primitive values of the types allowed for key properties in  [6.5 Key](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Key)\n\n### Proposal\n\n* Restrict key property values to literals of allowed types\n- Consistently name rules for these types\n  - URL literals with suffix `Literal`\n  - body values with suffix `Value`\n  - no suffix where both representations are identical\n- Split rules for these types where differences exist, especially for representations with PLUS or COLON characters (no percent-encoding in values, allowed percent-encoding in literals)\n- Add test cases for full coverage\n\nImported from [ODATA-1605](https://issues.oasis-open.org/browse/ODATA-1605)",
    "labels": [
      "ABNF",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify meaning of trailing spaces in $search query option",
    "body": "An implementation team asks how to treat trailing spaces in a `$search` query option, for example\n```\nGET /Products?$search=blue%20\n```\n\nShould the trailing space be treated as part of the search \"word\", or should it be ignored?\n\n### Proposal\n\nThe ABNF already allows whitespace between `$search=` and the search expression which is not considered part of the search expression.\n\nAlso allow trailing whitespace after the search expression, and mention both leading and trailing whitespace in section [5.1.8.1 Search Expressions](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_SearchExpressions).\n\nImported from [ODATA-1604](https://issues.oasis-open.org/browse/ODATA-1604)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "CSDL example 39 applies to Term",
    "body": "https://github.com/oasis-tcs/odata-specs/pull/186\n\n### Proposal\n\nhttps://github.com/oasis-tcs/odata-specs/pull/186\n\nImported from [ODATA-1602](https://issues.oasis-open.org/browse/ODATA-1602)",
    "labels": [
      "CSDL JSON",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "concat: allow more than two arguments",
    "body": "The URL function [`concat`](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_concat) is currently defined with exactly two arguments.\n\nHowever all its example uses as a client-side function in annotations in the CSDL specs use three or more arguments, which is quite natural.\n\n### Proposal\n\nCorrect examples in CSDL specs via [ODATA-1628](https://issues.oasis-open.org/browse/ODATA-1628) and close this issue and its associated PRs\n- [https://github.com/oasis-tcs/odata-specs/pull/230]\n- [https://github.com/oasis-tcs/odata-abnf/pull/111] \n\nwithout action.\n\nImported from [ODATA-1601](https://issues.oasis-open.org/browse/ODATA-1601)",
    "labels": [
      "URL Conventions",
      "V4.02",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Functions and Actions as Interfaces",
    "body": "I would like to define an OData function or action outside of a service that serves as an interface. Such a function/action could then be invoked by a special client whenever a service implements it.\n\nThe functions `isancestor` and `isdescendant` defined in the Aggregation vocabulary would have been candidates for such treatment, if we had not assumed they are implemented by _every_ service that uses the `Aggregation.RecursiveHierarchy` annotation.\n\nIf the interface has a parameter or return type of an abstract type like `Edm.EntityType`, its implementations MAY (or MUST) replace this with a concrete entity type.\n\n### Proposal\n\n[https://github.com/oasis-tcs/odata-vocabularies/pull/228]\n\nThe proposed annotation\n```json\n\"ActionA\": [{\n  \"$Kind\": \"Action\",\n  \"@Core.ImplementsSignature\": \"ActionB\"\n}]\n```\nis not superior to currently used annotations like\n```json\n\"EntityType\": {\n  \"$Kind\": \"EntityType\",\n  \"@SAP.ActionB\": \"ActionA\"\n}\n```\nTherefore close this issue without further action.\n\nImported from [ODATA-1600](https://issues.oasis-open.org/browse/ODATA-1600)",
    "labels": [
      "Vocabularies",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Example number 21 is used 3 times in the JSON format document",
    "body": "The label \"21\" is used 3 times in the JSON format document:\n\n[https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_BindOperation]\n\n[https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_CollectionETag]\n\n[https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_StreamProperty]\n\nAlthough not a large issue, it sometimes makes it difficult to refer people to the correct example.\n\nImported from [ODATA-1598](https://issues.oasis-open.org/browse/ODATA-1598)",
    "labels": [
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow Scale=\"floating\" also in 4.0 responses",
    "body": "Section [7.2.4 Scale](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Scale) restricts use of `Scale=\"floating\"` to responses with `OData-Version: 4.01`.\n\nThis seems too hard given that the XML documents use the same XML namespace http://docs.oasis-open.org/odata/ns/edm, which references the combined 4.0 plus 4.01 XML schema.\n\n\n### Proposal\n\nRelax to\n> OData 4.0 responses SHOULD NOT specify the value `floating`.\n> \n\n\nImported from [ODATA-1596](https://issues.oasis-open.org/browse/ODATA-1596)",
    "labels": [
      "CSDL XML",
      "V4.02",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Replace references to RFC7230, RFC7231, and RFC7232 with RFC9110",
    "body": "[RFC9110](https://datatracker.ietf.org/doc/html/rfc9110) obsoletes [RFC 7230](https://datatracker.ietf.org/doc/html/rfc7230), [RFC 7231](https://datatracker.ietf.org/doc/html/rfc7231), [RFC 7232](https://datatracker.ietf.org/doc/html/rfc7232) (and others we don't reference)\n\n### Proposal\n\nSee description\n\nImported from [ODATA-1595](https://issues.oasis-open.org/browse/ODATA-1595)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.4.12 Update a Collection of Entities: add examples",
    "body": "\n\n### Proposal\n\nh2. JSON Format\n\nAdd JSON request and response examples using `Core.ContentID` and `Core.DataModificationException`, also in combination for a failed create.\n\nShow the different error handling for `continue-on-error=true/false`.\n\nShow that `Core.DataModificationException` records can be annotated by adding [`Common.additionalTargets`](https://github.com/SAP/odata-vocabularies/blob/main/vocabularies/Common.md#additionalTargets) to a `MessageType` record.\nh2. Protocol\n\nMake first occurrence of `continue-on-error` a section link,\n\nImported from [ODATA-1593](https://issues.oasis-open.org/browse/ODATA-1593)",
    "labels": [
      "JSON Format",
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "correct vocabulary URIs in CSDL XML examples",
    "body": "the section 4.2 Include Schema shows examples (example 4) how to include Vocabulary schemas but used non existing URIs like [http://vocabs.odata.org/capabilities/v1]\n\nproposal is to replace them with current URLs like \n[https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml]\n\n### Proposal\n\nhttps://github.com/oasis-tcs/odata-specs/pull/94\n\nImported from [ODATA-1592](https://issues.oasis-open.org/browse/ODATA-1592)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "OData-Protocol example 64 is syntactically wrong",
    "body": "[OData-Protocol, example 64](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#_Toc31358958) reads:\n```\nGET http://host/service/Suppliers(MainSupplier)/Addresses/0\n```\nBut the `MainSupplier` in parentheses is invalid syntax, and the ABNF does not accept this example:\n```\nOData-Protocol, example 64 fails at 55: http://host/service/Suppliers(MainSupplier)/Addresses/0\nodataUri: http://host/service/Suppliers(MainSupplier)/Addresses/\n.serviceRoot: http://host/service/Suppliers(MainSupplier)/Addresses/\n..host: host\n...reg-name: host\n..segment-nz: service\n..segment-nz: Suppliers(MainSupplier)\n..segment-nz: Addresses\n..segment-nz: 0\n```\n\n### Proposal\n\n```java\nGET http://host/service/MainSupplier/Addresses/0\n```\nhttps://github.com/oasis-tcs/odata-specs/pull/172\n\nImported from [ODATA-1591](https://issues.oasis-open.org/browse/ODATA-1591)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow creating and linking along a nullable single-valued navigation",
    "body": "[ODATA-1141](https://issues.oasis-open.org/browse/ODATA-1141) explicitly forbids creating a to-one related entity for non-containment navigation properties:\n> For a non-containment relationship, PUT or PATCH to a null single-valued navigation property returns an error.\n> \n\nThe only way currently to do this is multi-step:\n1. Create new entity in target set\n1. Bind to newly created entity\n\n### Proposal\n\nRemove restriction on \"containment\" and allow PUT/PATCH if\n- a NavigationPropertyBinding exists for the target navigation property, or\n- the payload includes a context specifying where the new entity is to be created\n\nThis affects the second paragraph of section [11.4.4 Upsert an Entity](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_UpsertanEntity).\n\nCurrent text:\n> Upserts are not supported against media entities, single-valued non-containment navigation properties, or entities whose keys values are generated by the service. Services MUST fail an update request to a URL that would identify such an entity and the entity does not yet exist.\n> \n\nNew text:\n> Upserts to single-valued navigation properties are possible for\n> - containment navigation properties,\n> - non-containment navigation properties with a navigation property binding, or\n> - payloads including a context URL specifying the entity set or contained collection of entities in which the new entity is to be created.\n> \n> Upserts are not supported against media entities or entities whose keys values are generated by the service. Services MUST fail an update request to a URL that would identify such an entity and the entity does not yet exist.\n> \n\n\nImported from [ODATA-1588](https://issues.oasis-open.org/browse/ODATA-1588)",
    "labels": [
      "Protocol",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove reference to obsolete GeoJSON document",
    "body": "Section [7.1 Primitive Value](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_PrimitiveValue) references an obsolete version of GeoJSON at [https://geojson.org/geojson-spec.html] that already looks a little \"frayed\".\n\n### Proposal\n\nRemove this informative reference.\n\nShorten the paragraph using this reference to\n> Geography and geometry values are represented as geometry types as defined in [RFC7946]+.+-, with the following modifications:-\n> - <del>Keys SHOULD be ordered with type first, then coordinates, then any other keys</del> - -If the optional CRS object is present, it MUST be of type name, where the value of the name member of the contained properties object is an EPSG SRID legacy identifier, see [GeoJSON-2008].-\n\nNote: [RFC7946](https://datatracker.ietf.org/doc/html/rfc7946#section-4) uses the World Geodetic System 1984 (WGS 84), which is a superset of the EPSG SRID 4326 that the CSDL specs define as the default SRID for `Edm.Geography` types.\n\nImported from [ODATA-1587](https://issues.oasis-open.org/browse/ODATA-1587)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Inconsistency regarding $select=@Namespace.Term",
    "body": "[https://docs.oasis-open.org/odata/odata/v4.01/os/part1-protocol/odata-v4.01-os-part1-protocol.html#_Toc31358942] does not mention the possibility to `$select` an annotation.\n\n[https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#_Toc31361040] allows that:\n\nbq. A path can end with the name of a property or non-entity-valued instance annotation of the identified structured instance,\n\n### Proposal\n\nhttps://github.com/oasis-tcs/odata-specs/pull/177\n\nImported from [ODATA-1584](https://issues.oasis-open.org/browse/ODATA-1584)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Mention use of ETag with bound function: only process if binding entity matches ETag",
    "body": "Section [11.5.5.1 Invoking an Action](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_InvokinganAction) explicitly mentions how `If-Match` can be used with bound action calls:\n\n> To request processing of the action only if the binding parameter value, an entity or collection of entities, is unmodified, the client includes the If-Match header with the latest known ETag value for the entity or collection of entities. The ETag value for a collection as a whole is transported in the ETag header of a collection response.\n\n\nThe same use case applies to bound functions.\n\n### Proposal\n\nEither also mention this in the corresponding section 11.5.4.1 on bound functions, or pull up the statement to section 11.5.1 Binding an Operation to a Resource.\n\nImported from [ODATA-1582](https://issues.oasis-open.org/browse/ODATA-1582)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify duplicate properties in JSON Batch payload",
    "body": "How should duplicate properties (i.e., id, method, url, headers, dependsOn, atomicityGroup, body, if) in a JSON Batch payload be handled?\n\nMost of these (id, method, url, atomicityGroup, body) should pretty clearly be errors as they are single-valued.  However, [RFC2616 ](https://www.rfc-editor.org/rfc/rfc2616#section-4.2)allows the same header to appear multiple times in a request only if the header value is a coma-separated list of values, and states that the multiple headers is equivalent to a single header with the values appended, in order, separated by comas. So, a service *could* allow the \"header\" property to appear multiple times and append the values. We could do the same thing with dependsOn, and even if.\n\nOr, we could keep it simple and say that a client must not specify any of these properties more than once.\n\n### Proposal\n\nClarify that clients MUST NOT specify any of these properties more than once; services SHOULD reject such a request as a bad request.\n\nSimilarly, clients MUST NOT specify multiple headers with the same (case-insensitive) key; services SHOULD reject such a request as a bad request.\n\nImported from [ODATA-1581](https://issues.oasis-open.org/browse/ODATA-1581)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Consistently use \"annotated with the term\" instead of \"annotated with term\"",
    "body": "\n\nImported from [ODATA-1578](https://issues.oasis-open.org/browse/ODATA-1578)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Consistently use \"entity-id\" instead of \"entity id\"",
    "body": "\n\n### Proposal\n\nUse dash as this is \"one word\".\n\nCan be changed in Data Aggregation as a non-material change without additional public review\n\nImported from [ODATA-1577](https://issues.oasis-open.org/browse/ODATA-1577)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "Data Aggregation",
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Consistently use \"instances of structured types\" instead of \"structured instances\"",
    "body": "\n\nImported from [ODATA-1576](https://issues.oasis-open.org/browse/ODATA-1576)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "2023 Virtual Face-to-Face Agenda",
    "body": "Walldorf rooms and times\n|| ||Tue, May 2||Wed, May 3||Thu, May 4||Fri, May 5||\n|*morning*|WDF53 B1.01|WDF53 B1.01| |WDF53 B1.02|\n| |Work time| |Hiking event| |\n|*room switch*|1pm|2pm|3:30pm| |\n|*afternoon*|WDF53 B1.02|WDF53 B1.02|WDF53 B1.02|WDF53 B1.02|\n| |Work time| | | |\n|*4-6pm*|4-4:30 Refine Agenda\n 4-6: Aggregation (Heiko/Gerald)|4-5: 4.01 Triage (Ralf)\n 5-6: Aggregation (Heiko/Gerald)|RSDL Open Items (Mike/Christof)\n RSDL Wrap-up (Mike/Christof)|4-5: RAPID inventory/next steps (Mike)\n 5-6: Aggregation (Heiko/Gerald)|\n|*6-6:15pm*|Break|Break|Break|Break|\n|*6:15-7pm*|RSDL Capabilities (Mike/Christof)|Aggregation (Heiko/Gerald)|RSDL Wrap-up (Mike/Christof)|Aggregation (Heiko/Gerald)|\n|*7-8pm*|4.01 Triage (Ralf)|Aggregation (Heiko/Gerald)|Aggregation (Heiko/Gerald)|Revisit Timeline, Wrap-up|\n\n \n\nImported from [ODATA-1572](https://issues.oasis-open.org/browse/ODATA-1572)",
    "labels": [],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow empty entity containers",
    "body": "CSDL currently requires that\n> \n> h1. 13    [Entity Container](https://docs.oasis-open.org/odata/odata-csdl-json/v4.01/odata-csdl-json-v4.01.html#sec_EntityContainer)\n> \n> Each metadata document used to describe an OData service MUST define exactly one entity container.\n> \n\nand then for CSDL XML only\n> *Element* edm:EntityContainer\n> \n> The edm:EntityContainer MUST contain one or more [edm:EntitySet](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_EntitySet), [edm:Singleton](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Singleton), [edm:ActionImport](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ActionImport), or [edm:FunctionImport](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_FunctionImport) elements.\n> \n\nThis disallows \"empty\" services without any resources except the service document and the metadata document, or requires such services to not support metadata in CSDL XML\n\nWhile this restriction may make \"business sense\", from a technical and tools perspective it is an unnecessary hurdle, requiring special handling in tools.\n\n### Proposal\n\nRemove restriction from CSDL XML, allow services that only serve a service document (with an empty list of root resources) and a metadata document in XML or JSON.\nAdjust XSD to allow zero elements.\n\nImported from [ODATA-1571](https://issues.oasis-open.org/browse/ODATA-1571)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "CSDL XML is defined with reference to XML 1.1 but none of the examples use XML version 1.1 documents",
    "body": "(Refer to https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-prolog-dtd)\n\nCSDL XML Section numbers below are from 4.01 but the issue is present in CSDL 4.0 spec as well.\n\nNow see CSDL XML spec Section 2     XML Representation\n\n> OData CSDL XML is a full representation of the OData Common Schema Definition Language in the Extensible Markup Language (XML) 1.1 (Second Edition) [XML‑1.1]  ...\"\n\nNone of the examples show an XML version 1.1 document (The XML 1.1 spec indicates that without an XML version in the XML declaration, the XML version is 1.0).\n\nExample 2 shows a CSDL example without an XML declaration (so it is XML 1.0, per the XML 1.1 spec).\n\nExample 3 shows a CSDL example with an XML declaration that specifies version=1.0.\n\nNow per section 1.3, all examples in the CSDL XML document are non-normative and informative only.\n\nHowever, none of them show a valid XML 1.1 document.\n\nAccepting that some of the examples could be considered as partial documents (for brevity), it could be accepted that they can omit the XML declaration. But example 2 is the first example and the section title indicates it is the \"CSDL XML Document\", so it should not omit the XML declaration.\n\n### Proposal\n\nConsistently use XML 1.0, change normative reference and check prose texts and examples to not use 1.1 anywhere.\n\nImported from [ODATA-1570](https://issues.oasis-open.org/browse/ODATA-1570)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow CSDL JSON also for OData versions 2.0 and 3.0",
    "body": "As a first step relax the JSON Schema to also allow these two values for the `$Version` field in CSDL JSON files.\n\n### Proposal\n\nClose without further action.\n1. CSDL XML also doesn't cover v1, v2, or v3\n1. CSDL JSON can't represent constructs from earlier versions that were not taken over into v4\n\nImported from [ODATA-1569](https://issues.oasis-open.org/browse/ODATA-1569)",
    "labels": [
      "CSDL JSON",
      "V4.02",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Allow handling of in-stream errors on protocol level",
    "body": "[OData-Protocol, section 9.5](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_InStreamErrors) says\n> In the case that the service encounters an error after sending a success status to the client, the service MUST leave the response malformed according to its content-type. Clients MUST treat the entire response as being in error.\n> \n\nBut certain content types, for example `text/plain` in a response of type `Edm.Stream`, cannot be malformed. Suggest to allow abortion of the response on HTTP protocol level.\n\n### Proposal\n\nthe service MUST leave the response malformed according to its content-type _or abort the response by causing an error on transport protocol level_.\n\nImported from [ODATA-1568](https://issues.oasis-open.org/browse/ODATA-1568)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify: Is Open on a derived type required or implied",
    "body": "I have always assumed that any type derived from an open type was, by definition, open.\n\nHowever, I recently read the rule for this in [CSDL-XML 6.3, Open Entity Type](http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_OpenEntityType) which states:\n \"An entity type derived from an open entity type MUST indicate that it is also open.\"\n\nWhich *could* be read as requiring that the XML explicitly specifies OpenType=\"true\" in any type derived from an open type.\n\nThe same wording exists in Section 6.9, Open Complex Type, as well as the corresponding sections of the JSON CSDL specification.\n\nWhile it should always be valid to specify OpenType=\"true\", I would think it would be implied, and not required to be explicitly stated, since the base type is open.\n\nIt should be invalid to specify OpenType=\"false\" if the base type is open.\n\n### Proposal\n\nClose with no action.\n\nImported from [ODATA-1566](https://issues.oasis-open.org/browse/ODATA-1566)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Document that Measures terms can also apply to parameters",
    "body": "Currently AppliesTo only lists Property, makes sense to also document Parameter.\n\nImported from [ODATA-1565](https://issues.oasis-open.org/browse/ODATA-1565)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Protocol 11.7.7.1 misleading text on request formats",
    "body": "Section [11.7.7.1 Multipart Batch Request Body](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_MultipartBatchRequestBody) gives three examples for request URL formats that implementations must support:\n> The request URL of individual requests within a batch request or change set can use one of the following three formats:\n> \n\nUnfortunately all three examples use the `GET` method, which can mislead readers to assume that `GET` requests are allowed within a change set, which is not the case according to the preceding section [11.7.2 Request Dependencies](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_RequestDependencies).\n\n### Proposal\n\nUse `POST` or `PATCH` or `DELETE` method in the examples because these can be both within and outside of change sets.\n\nImported from [ODATA-1564](https://issues.oasis-open.org/browse/ODATA-1564)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "URL 4.11, paragraph 2: clarify restriction \"that is part of a Boolean expression\"",
    "body": "Section [4.11 Addressing Derived Types](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingDerivedTypes) states in the second paragraph \n\n> \n> If used in a path expression *that is part of a Boolean expression*, the type cast will evaluate to null. \n> \n\n\nWhy the restriction \"that is part of a Boolean expression\"?\n\n### Proposal\n\nRemove restriction, shorten sentence to\n\n> \n> If used in a path expression, the type cast will evaluate to null. \n> \n\n\nImported from [ODATA-1563](https://issues.oasis-open.org/browse/ODATA-1563)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify uniqueness of bound action and function names",
    "body": "Can an action bound to entity type `A` have the same name as a function bound to entity type `B`?\n\nOr more general: can an action (import) have the same name as a function (import)?\n\nTaking the request method and URL into account, it can be unambiguously decided whether the action or function is called.\n\n### Proposal\n\nAllow this and add to chapter 5 the following rule right after the sentence on non-colliding type names:\n\n\"Services SHOULD NOT have actions and functions with the same name, and MUST NOT have actions and functions with the same name bound to the same type.\"\n\nImported from [ODATA-1562](https://issues.oasis-open.org/browse/ODATA-1562)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify format of AsyncResult response header value",
    "body": "Clarify that the AsyncResult response header contains the three-digit HTTP response code of the asynchronously processed request, for example\n- `AsyncResult:200` for a successfully processed request\n- `AsyncResult:500` for a failed asynchronous request\n\n \n\n### Proposal\n\nAdd text (and example?) to Protocol\n\nAdd rule to ABNF\n\nImported from [ODATA-1561](https://issues.oasis-open.org/browse/ODATA-1561)",
    "labels": [
      "ABNF",
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify definition of transient",
    "body": "We define transient entities as instances of an entity type that exist within a payload.  However, after query transformations, the resulting payload is not constrained to conform to the entity type definition.  Also, it may be possible to re-derive the transient entity, so the read URL may be appropriate for that purpose.\n\n \n\n### Proposal\n\nh2. 4.3 [Transient Entities](#sec_TransientEntities)\n\nTransient entities are {color:#4c9aff}*derived* *from* {color}instances of an entity type that are “calculated on the fly” and only exist within a single payload. They cannot be -*reread or*- updated and consequently possess neither a stable entity-id nor -*{color:#FF0000}a read UR{color:#de350b}L{color}{color}{color:#de350b} or{color}*- an update URL.  {color:#4c9aff}*A transient entity may have a read URL, which may be used to re-derive the transient entity from the current state of the underlying entity.*{color}\n\nImported from [ODATA-1559](https://issues.oasis-open.org/browse/ODATA-1559)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Collection-valued Aggregation.RecursiveHierarchy/ParentNavigationProperty",
    "body": "The Aggregation vocabulary currently specifies that `RecursiveHierarchy/ParentNavigationProperty` is single-valued, but hierarchies can also be defined with multiple parents of a node.\n\n### Proposal\n\nAllow a collection-valued `RecursiveHierarchy/ParentNavigationProperty` in the [Aggregation vocabulary](https://github.com/oasis-tcs/odata-vocabularies/blob/13de8f242e505761940cff7e2f5c22eb614b7ae5/vocabularies/Org.OData.Aggregation.V1.xml#L208). Nodes can then have null and non-null parents simultaneously, meaning that they occur as a root and as a child.\n\nSee material appended to sections 6.2.2 and 6.3 in [https://www.oasis-open.org/apps/org/workgroup/odata/download.php/70988/odata-data-aggregation-ext-v4.0-csd04.docx].\n\nImported from [ODATA-1557](https://issues.oasis-open.org/browse/ODATA-1557)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD04"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Entities with ambiguous property values",
    "body": "The output set of a transformation has a context URL of the form [Collection of Entities](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_CollectionofEntities), but it can contain the same entity multiple times, even with conflicting properties:\n```java\nGET /service/Products?$apply=\n  concat(compute(0.1 as Discount),\n         compute(0.2 as Discount))\n```\nThe OData-Aggr specification is not always prepared for such situations.\nh2. groupby\n\nWhat does grouping by such an ambiguous entity mean? How many items does the response to the following request contain?\n```java\nGET /service/Sales?$apply=\n  concat(transformnested(Product,compute(0.1 as Discount)),\n         transformnested(Product,compute(0.2 as Discount)))\n  /groupby((Product/Discount))\n```\nWhat is the `Discount` in the response to the following request?\n```java\nGET /service/Sales?$apply=\n  concat(transformnested(Product,compute(0.1 as Discount)),\n         transformnested(Product,compute(0.2 as Discount)))\n  /groupby((Product))\n  &$expand=Product($select=Discount)\n```\nh2. aggregate\n\nAggregation considers only distinct entities, but which `Discount` is used in the following request?\n```java\nGET /service/Sales?$apply=\n  concat(transformnested(Product,compute(0.1 as Discount)),\n         transformnested(Product,compute(0.2 as Discount)))\n  /aggregate(Product/Discount with max as MaxDiscount)\n```\n\n### Proposal\n\nSee [https://www.oasis-open.org/apps/org/workgroup/odata/download.php/70631/odata-data-aggregation-ext-v4.0-csd04.docx]\n- section 3.1.2\n- section 3.2.1.1, first bullet point in \"Determination of U\"\n- section 3.2.3.1, step 2.\n\n \n\nImported from [ODATA-1556](https://issues.oasis-open.org/browse/ODATA-1556)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD04"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Strengthen definitions for $orderby, $top and $skip",
    "body": "h2. Total or partial order?\n\n[OData-Protocol, section 11.2.6.2](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby) speaks of \"the order\" in which items are returned. Must this be a total order, or only a partial order? A partial order would not allow paging with `$top` and `$skip`. But not all services may be able to produce a total order.\n\nThis should be clarified.\n\nh2. Further implications of partial ordering\n\n[OData-Protocol, section 11.2.6.3](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop) seems to allow n _arbitrary_ items to be returned:\n> a non-negative integer n that limits the number of items returned from a collection.\n> \n\nThe next sentence sounds as if a number was returned:\n> The service returns the number of available items up to but not greater than the specified value n.\n> \n\n[OData-Protocol, section 11.2.6.4](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip) is clearer:\n> excludes the first n items of the queried collection from the result. The service returns items starting at position n+1.\n> \n\nBoth definitions assume that \"the first n items\" always exist. But in general the result set is neither totally ordered (in which case \"the first n\" would be well-defined) nor totally unordered (in which case n arbitrary items could be returned or skipped). After an `$orderby`, the result set may be only partially ordered.\n\nThe definitions of `$top` and `$skip` should make clearer what freedom to choose n items the server has.\n\n### Proposal\n\nAligned with the wording in [OData-Data-Aggregation-Ext-4.0](https://oasis-tcs.github.io/odata-specs/odata-data-aggregation-ext/odata-data-aggregation-ext.html#Transformationtop):\n\n11.2.6.3. Let A be a copy of the result set with a total order that extends any existing order of the result set but is otherwise chosen by the service. The total order MUST be stable across requests.\n\nIf A contains more than n instances, the result of `$top=n` consists of the first n occurrences in A. Otherwise, the output set equals A. The instances in the result are in the same order as they occur in A.\n\n11.2.6.4. Let A be a copy of the result set with a total order that extends any existing order of the result set but is otherwise chosen by the service. The total order MUST be stable across requests.\n\n`$skip=n` excludes from the result set the first n occurrences in A. It keeps all remaining instances in the same order as they occur in A.\n\nSomewhere in 11.2.6. The order of the result MUST be respected during serialization to the response payload.\n\nImported from [ODATA-1555](https://issues.oasis-open.org/browse/ODATA-1555)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify the algorithm for evaluating the compute transformation",
    "body": "It seems warranted that compute expressions can use dynamic properties that were computed by previous compute expressions, as in `compute(A add B as C, C mul 2 as D)`.\n\nAnd the sequence of the compute expressions should not matter, therefore `compute(C mul 2 as D, A add B as C)` should produce the same result. The server must determine an appropriate sequence in which to evaluate the compute expressions, or fail if a cycle is detected.\n\n### Proposal\n\nThe output set is constructed by copying the instances of the input set and adding one dynamic property per compute expression to each instance of the <del>input</del> _output_ set. The name of the added property is the alias following the as keyword. The value of the property is the value of the <del>compute</del> expression evaluated relative to that instance. _Services MAY support expressions that address dynamic properties added by other expressions within the same compute transformation, provided that the service can determine an evaluation sequence._\n\nImported from [ODATA-1554](https://issues.oasis-open.org/browse/ODATA-1554)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD04"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify the algorithm for evaluating $compute",
    "body": "It seems warranted that compute expressions can use dynamic properties that were computed by previous compute expressions, as in `$compute=A add B as C, C mul 2 as D`.\n\nAnd the sequence of the compute expressions should not matter, therefore `$compute=C mul 2 as D, A add B as C` should produce the same result. The server must determine an appropriate sequence in which to evaluate the compute expressions, or fail if a cycle is detected.\n\n### Proposal\n\nThe value of $compute is a comma-separated list of compute instructions, each consisting of a common expression followed by the keyword as, followed by the name for the computed dynamic property. This name MUST differ from the names of declared or dynamic properties of the identified resources. _Services MAY support compute instructions that address dynamic properties added by other compute instructions within the same `$compute` system query option, provided that the service can determine an evaluation sequence._\n\nImported from [ODATA-1553](https://issues.oasis-open.org/browse/ODATA-1553)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "edm.xsd permits primitive Type for NavigationProperty",
    "body": "https://github.com/oasis-tcs/odata-csdl-schemas/blob/main/schemas/edm.xsd#L147\n\n <xs:attribute name=\"Type\" type=\"edm:TTypeName\" use=\"required\" />\n\nand then:\n\n<xs:simpleType name=\"TTypeName\">\n    <xs:union memberTypes=\"edm:TPrimitiveType edm:TAbstractType edm:TQualifiedName\">\n\nSchema-assisted editing (e.g. VS Code with \"XML Language Support by Red Hat\") will consider a primitive Type to be valid for a NavigationProperty.\n\n\n### Proposal\n\nRefine the edm.xsd to disallow obvious inappropriate types for NavigationProperty elements, perhaps by the introduction of a \"TNavigationTypeName\".\n\nhttps://github.com/oasis-tcs/odata-csdl-schemas/pull/71\n\nImported from [ODATA-1552](https://issues.oasis-open.org/browse/ODATA-1552)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Recursive complex types must be nullable",
    "body": "We have rules around a partner navigation property in a recursive containment relationship (it must be single valued and nullable) but we don't call out the fact that the child of a single-valued recursive containment must also be nullable (or the recursion would never end). \n\nSimilarly, we say nothing about the child of a recursive complex-typed property. For example, we don't have a rule against the following definition, although the model it describes results in an endless recursion:\n\n \n```java\n<ComplexType Name=\"myType\">\n    <Property Name=\"nested\" Type=\"myType\" Nullable=\"false\">\n</ComplexType> ```\n \n\n### Proposal\n\nClarify that a recursive single-valued navigation and complex typed property must be nullable.  This rule is implied today, so calling it out to make it more apparent should not be a breaking change.\n\nImported from [ODATA-1547](https://issues.oasis-open.org/browse/ODATA-1547)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify /$value segment appended to function returning a primitive value",
    "body": "Protocol and URL Conventions only mention appending the `/$value` segment to primitive properties.\n\nABNF however also allows this segment appended to functions returning a primitive value: https://github.com/oasis-tcs/odata-abnf/blob/27ae38545f44cd0f5373abb7262c6176d4eec144/abnf/odata-abnf-testcases.yaml#L1178-L1180\n\n### Proposal\n\nExplicitly mention this in\n- Protocol section [11.2.4.1 Requesting a Property's Raw Value using $value](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_RequestingaPropertysRawValueusingval) and/or\n- URL Conventions section [4.7 Addressing a Property Value](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingaPropertyValue).\n\nMaybe change text and headlines to \"address a raw primitive value\".\n\nImported from [ODATA-1546](https://issues.oasis-open.org/browse/ODATA-1546)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Conflicting information about presence of read-only properties on update",
    "body": "[OData Version 4.01. Part 1: Protocol/Section 14.3.1/7th Paragraph](https://docs.oasis-open.org/odata/odata/v4.01/os/part1-protocol/odata-v4.01-os-part1-protocol.html#sec_UpdateanEntity) states\n \n_Key and other properties marked as read-only in metadata (including computed properties), […] , can be omitted from the request. If the request contains a value for one of these properties, the service MUST ignore that value when applying the update._ \n\n [OData core vocabulary / UpdateRestrictionsType/ NonUpdatableProperties](https://github.com/oasis-tcs/odata-vocabularies/blob/f6818f02e7cb4eb5a63e96e75ea986104fa4a42d/vocabularies/Org.OData.Core.V1.xml#L384) states\n \n _These structural properties cannot be specified on update_\nThese two statements contradict each other. The vocabulary term description should reflect that what section 14.3.1 describes.\n\n### Proposal\n\nSee https://github.com/oasis-tcs/odata-vocabularies/pull/200\n\nImported from [ODATA-1543](https://issues.oasis-open.org/browse/ODATA-1543)",
    "labels": [
      "Vocabularies",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Forward slashes in /$filter segments",
    "body": "[OData-URL, section 4.12](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingaSubsetofaCollection) says:\nbq. If the filter path segment appears in the resource path and the parentheses contain a filter expression, that expression MUST NOT use forward slashes.\n\nCan an offending forward slash be replaced by `%2f` (the ABNF does not accept this at the moment)? Or must an alias be used to avoid forward slashes in paths? Clarify if necessary.\n\nOn the other hand, the rule is too strict, because forward slashes are not a problem if the `/$filter` segment occurs in a URL query option, as in [this test case](https://github.com/oasis-tcs/odata-abnf/blob/ad7fc9b1f391b84bcccb5fd7080b863c77d516c6/abnf/odata-aggregation-testcases.yaml#L560-L572).\n\n### Proposal\n\nRephrase:\n> If the filter path segment appears in the resource path, the filter expression in parentheses MUST NOT use forward slashes, it must be specified with a parameter alias [link to 5.3] instead.\n> \n\n\n\nImported from [ODATA-1541](https://issues.oasis-open.org/browse/ODATA-1541)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Require decoding of plus as space in query part of URL",
    "body": "The [WhatWG URL](https://url.spec.whatwg.org/) specification defines an API for manipulating URLs that uses `application/x-www-form-urlencoded` for parsing and serializing query options.\n\nThis API encodes space (octet 0x20) as \"\\+\" (octet 0x2B), and consequently decodes \"\\+\" (octet 0x2B) as space (octet 0x20).\n\n This is a follow-up to [ODATA-1539](https://issues.oasis-open.org/browse/ODATA-1539).\n\n### Proposal\n\nLeave it as an option for servers to make moving to V4.02 as easy as possible.\n\nMake it a requirement for conforming clients, and add to section [13.3 Interoperable OData Clients](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_InteroperableODataClients) between current rules 9 and 10:\n\n> \n> 10. MUST encode the plus character (octet 0x2B) as %2B in URLs to avoid servers mis-interpreting the plus character as an encoded space\n> \n\n\nImported from [ODATA-1540](https://issues.oasis-open.org/browse/ODATA-1540)",
    "labels": [
      "Protocol",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify decoding of plus character in URLs",
    "body": "OData URL is based on [RFC3986](https://www.rfc-editor.org/rfc/rfc3986.html), which in [Section 2.1 Percent-Encoding](https://www.rfc-editor.org/rfc/rfc3986.html#section-2.1) explicitly defines `%20` as the encoding for space.\n\nUnfortunately RFC3986 is less clear on the encoding of the plus (`+`) character: [Section 2.2 Reserved Characters](https://www.rfc-editor.org/rfc/rfc3986.html#section-2.2) recommends `%2B` as the encoding for plus “unless […] specifically allowed by the URI scheme to represent data in that component”.\n\nAs a consequence, many URL-encoding tools, and the most commonly used browsers (Chrome, Edge, Firefox) do not percent-encode the plus character and retain it as a plus character.\n\nTo make matters really confusing the [WhatWG URL](https://url.spec.whatwg.org/) specification defines an API for manipulating URLs that - depending on how it is used - will encode space as the the plus (`+`) character:\n```js\nvar x = new URL(\"http://foo?bar=a+b c\")\nx.href // --> http://foo/?bar=a+b%20c\n\nvar y = new URL(\"http://foo\")\ny.searchParams.append(\"bar\",\"a+b c\")\ny.href // --> http://foo/?bar=a%2Bb+c\n```\n \nThis raises the question on how an OData service SHOULD / MUST interpret the plus (`+`) character in a URL:\n- does it mean plus,\n- or does it mean space?\n\nNote: the percent-encoded variants are unambiguous:\n- `%20` means space\n- `%2B` means plus\n \n\n \n\n \n\n### Proposal\n\nRephrase second part of [2.1 URL Parsing](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_URLParsing):\n> After applying these steps defined by {color:#00875a}[{color}RFC3986{color:#00875a}]{color} the following steps MUST be performed:\n> - Split undecoded query at \"&\" {color:#00875a}(octet 0x26){color} into query options, and each query option at the first \"=\" {color:#00875a}(octet 0x3D){color} into query option name and query option value\n> - Percent-decode path segments, query option names, and query option values exactly once\n> - Interpret path segments, query option names, and query option values according to OData rules\n> \n> {color:#00875a}Note: neither [RFC3986] nor this specification assign special meaning to \"\\+\" (octet 0x2B). Some implementations decode \"\\+\" (octet 0x2B) as space (octet 0x20), others take it literally. Clients are advised to percent-encode space (octet 0x20) as %20 and \"\\+\" (octet 0x2B) as %2B and avoid the ambiguous \"\\+\" (octet 0x2B) in URLs.{color}\n> \n\n \n\nThis is all we can do in Errata, follow-up action is [ODATA-1540](https://issues.oasis-open.org/browse/ODATA-1540).\n\nImported from [ODATA-1539](https://issues.oasis-open.org/browse/ODATA-1539)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "edm.xml: types TSimpleIdentifier, TNamespaceName, and TQualifiedName too restrictive",
    "body": "The simple types TSimpleIdentifier, TNamespaceName, and TQualifiedName are currently based on `xs:NCName` which adds restricitions beyond what CSDL defines.\n\nBase these simple types on `xs:string` instead, with `minLength=\"1\"`.\n\nAlso check other simple types that are currently based on `xs:token` whether they should better also be based on `xs:string`, and maybe just to be consistent.\n\nImported from [ODATA-1537](https://issues.oasis-open.org/browse/ODATA-1537)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "ODATA 4.01. 16.1 Example CSDL has missing alias",
    "body": "Example 89 under  [16.1 Products and Categories Example](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ProductsandCategoriesExample) uses the schema alias \"self\" when referring to \"Supplier\" in the \"MainSupplier\" singleton but the alias is not defined.\n\nImported from [ODATA-1536](https://issues.oasis-open.org/browse/ODATA-1536)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow more methods to qualify start nodes of transformation ancestors and descendants",
    "body": "At present, ancestors and descendants accept a filter expression as parameter to qualify instances of the input set as start nodes for the transformation.\n\nWe found that there are interesting use cases with further methods to identify such start nodes, including a free-text search. Supporting only filter expressions seems too limited and should be generalized.\n\n### Proposal\n\nProposal is to replace the filter expression parameter by a parameter accepting a transformation sequence returning a result that preserves the structure of the input set. This approach covers filter expressions and search via the filter and search transformations and leaves room for further applications.\n\n(detailed text proposal to follow)\n\nImported from [ODATA-1533](https://issues.oasis-open.org/browse/ODATA-1533)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD04"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Align usages of recursive hierarchies",
    "body": "The signature and behavior of hierarchy-related transformations descendants and ancestors was changed in [ODATA-1384](https://issues.oasis-open.org/browse/ODATA-1384).\n\nGrouping with rollup of recursive hierarchies makes use of these transformations and hasn't been adapted to these changes yet. Also transformation traverse needs to be updated to consider a separate hierarchy collection specified as parameter. This mainly relates to sections 3.1.3.2.2 and 3.4.3 of the document.\n\n### Proposal\n\nDecisions:\n - Align references to recursive hierarchies in the definition of `traverse` and `groupby` with `rollup`\n - Introduce operator `rolluprecursive` to distinguish it from `rollup` of leveled hierarchies.\n - Remove operator `rollupall`, because not needed; it can be represented as a combination of `concat` with `groupby`/`rollup`\n\nSee links under resolution for details.\n\nImported from [ODATA-1532](https://issues.oasis-open.org/browse/ODATA-1532)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD04"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "14.1.2 Applicability: clarify that \"Property\" means \"structural property\" and excludes navigation properties",
    "body": "Section [14.1.2 Applicability](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Applicability) says\n||Symbolic Value||Model Element||\n|Property|Property of a structured type|\n\nIt should instead say \"structural property\" because now it seems to be a superset of structural and navigation properties, which does not make sense.\n\nDefining a term that applies to both structural and navigation properties should be done by listing both: `AppliesTo=\"Property NavigationProperty\"`.\n\nOtherwise we would lose the ability to define terms that only apply to structural properties.\n\n### Proposal\n\nChange text to \"Structural Property\"\n\nImported from [ODATA-1531](https://issues.oasis-open.org/browse/ODATA-1531)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Specify when and how stream valued properties are included",
    "body": "Section 11.4.8 Managing Stream Properties states that \n `The values for stream properties do not usually appear in the entity payload.`\n\nThe standard does not specify when they are included, how the client controls it, and how the stream properties value is represented in the payload if this property is one of many of a structural type.\n\n \n\n### Proposal\n\nProtocol section 11.4.8: add reference to $expand:\n> The values for stream properties do not usually appear in the entity payload *unless explicitly requested with [`$expand`](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)*.\n> \n\n\nImported from [ODATA-1530](https://issues.oasis-open.org/browse/ODATA-1530)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify context URL for response to $expand=*",
    "body": "What is the correct or preferred context URL for responses to requests with `$expand=*`?\n\n[Protocol 10.10 Expanded Entity](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ExpandedEntity) talks about \"explicitly expanded\", which can be interpreted in two ways for `$expand=*`:\n1. Explicitly list all expanded properties because this is a shortcut for explicitly expanding all navigation properties\n1. Do not list expanded properties because they are not explicitly expanded\n\n### Proposal\n\n#1: explicitly list all expanded navigation properties\n\nImported from [ODATA-1525](https://issues.oasis-open.org/browse/ODATA-1525)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify key-as-segment representation for Duration and EnumValue",
    "body": "Explicitly state in section [4.3.6 Key-as-Segment Convention](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_KeyasSegmentConvention) that duration and enumeration values as key segments are both without prefix and without surrounding single-quotes, for example\n```java\n/TimeThing/P13DT13H13M13.13S\n/EnumThing/blue```\n\n### Proposal\n\nNo quotes, no prefixes allowed or required\n\nImported from [ODATA-1524](https://issues.oasis-open.org/browse/ODATA-1524)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Can Validation.DerivedTypeConstraint specify collection-valued types?",
    "body": "The term [DerivedTypeConstraint](https://github.com/oasis-tcs/odata-vocabularies/blob/main/vocabularies/Org.OData.Validation.V1.xml#L147:~:text=%3CTerm%20Name=%22-,DerivedTypeConstraint,-%22) takes a collection of [QualifiedTypeName](https://github.com/oasis-tcs/odata-vocabularies/blob/main/vocabularies/Org.OData.Core.V1.md#QualifiedTypeName)s. Can these also contain collection-valued types, as in\n```xml\n<Annotation Term=\"Validation.DerivedTypeConstraint\">\n <Collection>\n  <String>Edm.PrimitiveType</String>\n  <String>Collection(Edm.PrimitiveType)</String>\n </Collection>\n </Annotation>\n```\n?\n\nIf the declared type is single-valued, derivations cannot be collection-valued.\n\nIf the declared type is `Collection(ns.T1)`, which is correct: `\"@Validation.DerivedTypeConstaint\": [\"ns.T2\"]` or `\"@Validation.DerivedTypeConstaint\": [\"Collection(ns.T2)\"]`?\n\nIf the declared type is `Edm.Untyped`, both single- and collection-valued derived types are possible.\n\n### Proposal\n\nInclude two statements in the term definition:\n\nAllow `Validation.DerivedTypeConstraint` to specify `Collection(...)`, but only if the declared type is `Edm.Untyped`, because that is the only case where the property can be collection-valued or not.\n\nIf the declared type of a property is `Collection(ns.T1)`, then `\"@Validation.DerivedTypeConstaint\": [\"ns.T2\"]` means that  instances of `ns.T2` are allowed in the collection.\n\nPROPOSED WORDING:\nIf the element being annotated is collection-valued, the DerivedTypeConstraint specifies the types allowed for members of the collection; it does not specify the Collection() wrapper.  The QualifiedTypeName may only include the Collection() wrapper if the declared type of the element being annotated is Edm.Untyped. \n\nImported from [ODATA-1523](https://issues.oasis-open.org/browse/ODATA-1523)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define behavior for partial /$count",
    "body": "We define the $count=true query option as returning an estimate of the number of records matching the request. In OData-1516 we introduced control information that a service could return in order to convey the accuracy of the inline count, and specifically to enabling returning a partial count where counting all of the items was too expensive.\n\n/$count in the resource path is defined to be an exact count. If an implementation can't return an exact count it is required to fail the request. However, in the case that the implementation has reached a limit in counting matching records there is no way for the service to convey to the implementation the partial count reached.\n\nFor backward compatibility I think we need to continue returning an error, and /$count used within an expression definitely must error if an exact count cannot be returned, but it would be nice to have a way to return the fact that an error was being returned because a certain threshold had been reached.\n\nWe could return this information as an annotation within the returned error, or as a header.  Alternatively, we could define a preference header that the client could specify to say that they were willing to accept an incomplete count, and a preference-applied header that the service could return in the response to specify the accuracy of the count.\n\n \n\n \n\nImported from [ODATA-1522](https://issues.oasis-open.org/browse/ODATA-1522)",
    "labels": [
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Case statement ambiguous with timeOfDay values",
    "body": "Our rules for the Case statement use colons to separate the condition from the value-if-true and value-if-false:\n```java\ncaseMethodCallExpr = \"case\" OPEN BWS boolCommonExpr BWS COLON BWS commonExpr BWS \n                        *( COMMA BWS boolCommonExpr BWS COLON BWS commonExpr BWS ) CLOSE\n```\nHowever, timeOfDay also uses colons to separate the parts of a time of day value, including optional seconds:\n```java\ntimeOfDayValueInUrl = hour COLON minute [ COLON second [ \".\" fractionalSeconds ] ]```\nThat means that, for certain time of day values, the case statement could be ambiguous. i.e.;\n\n`case(CreatedTime eq 10:20:15:10:10,15:20)`\n\n`which could legally be parsed any of the following ways:`\n `  if CreatedTime eq 10:20 then 15:10:10 otherwise 15:20`\n `  if CreatedTime eq 10:20:15 then 10:10 otherwise 15:20`\n\n`Note that the user *could* differentiate between these by inserting whitespace before/after the separators separating the case parameters:`\n `  case(CreatedTime eq 10:20 : 15:10:10 : 15:20)`\n `  case(CreatedTime eq 10:20:15 : 10:10 : 15:20)`\n \n\n### Proposal\n\nThe use of the case statement without the optional whitespace and with timeofday values could be ambiguous. Clients should use whitespace or parens to disambiguate. \n\nImported from [ODATA-1521](https://issues.oasis-open.org/browse/ODATA-1521)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Central definition for type-cast and term-cast segments",
    "body": "The terms \"type-cast segment\" and \"term-cast segment\" are defined adhoc in several places throughout the specification. Specify them _once_ in a central place instead.\n\n### Proposal\n\nDefine \"type-cast segment\" in section [4.11 Addressing Derived Types](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingDerivedTypes).\n\nTurn all occurrences of \"type-cast segment\" into hyperlinks to section 4.11 (some already are), and remove all ad-hoc definitions.\n\nImported from [ODATA-1520](https://issues.oasis-open.org/browse/ODATA-1520)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify: Clients should ignore unknown control information in a json response",
    "body": "\n\nImported from [ODATA-1519](https://issues.oasis-open.org/browse/ODATA-1519)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Extend [OData-Protocol, example 18] with properties from derived types",
    "body": "[OData-Protocol, example 18](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_CollectionofProjectedEntities) shall be extended with a context URL that contains properties from derived types.\n\n### Proposal\n\nAdd example:\n```java\nhttp://host/service/Customers?$select=Address,Orders,Model.VipCustomer/PreferredContact\nhttp://host/service/$metadata#Customers(Address,Orders,Model.VipCustomer/PreferredContact)\n```\n\nImported from [ODATA-1518](https://issues.oasis-open.org/browse/ODATA-1518)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "[OData-CSDL, example 64] annotating a navigation property or its addressed resource?",
    "body": "[OData-CSDL](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_PathSyntax) contains\n> Example 64: model path addressing an annotation on a navigation property\n> ```java\n> …/Items@Capabilities.InsertRestrictions/Insertable\n> ```\n> \n\nwhich claims to be\n> addressing annotations on the navigation property itself\n> \n\nBut according to the [capabilities vocabulary](https://github.com/oasis-tcs/odata-vocabularies/blob/27967a1cef3e737b8ab3d787581664aa5dcb921b/vocabularies/Org.OData.Capabilities.V1.xml#L600), this annotation applies only to entity sets and collections, not to navigation properties.\n\nHowever, external [annotation targets](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Target) that start with a container make no distinction between a navigation property and the resource addressed by it. Is the distinction between\n```java\n…/Items@Capabilities.InsertRestrictions/Insertable\n```\nand\n```java\n…/Items/@Capabilities.InsertRestrictions/Insertable\n```\nperhaps entirely artificial?\n\n### Proposal\n\nExtend example with a second line:\n> Example 64: model path _segment_ addressing an annotation on a navigation property _vs. term cast addressing an annotation on the resource_ _addressed by the navigation property_\n> ```java\n> …/Items@Core.Description\n> …/Items/@Core.Description\n> ```\n> \n\n\nImported from [ODATA-1517](https://issues.oasis-open.org/browse/ODATA-1517)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow $value as the last path segment of an annotation target - no, annotate the media entity type",
    "body": "The media stream of a media entity can be addressed as a pseudo-property `$value` both in the [path part of the URL](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_RequestingtheMediaStreamofaMediaEnti) and in the [system query option $expand](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_SystemQueryOptionexpand).\n\nWhat's missing is the possibility to [target this pseudo-property with an annotation.](https://docs.oasis-open.org/odata/odata-csdl-json/v4.01/odata-csdl-json-v4.01.html#sec_Target)\n\n### Proposal\n\nAnnotate the media entity type, check all terms that apply to stream properties and add \"EntityType\" to the AppliesTo list\n\nImported from [ODATA-1515](https://issues.oasis-open.org/browse/ODATA-1515)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Dynamic properties are not allowed as function parameters",
    "body": "[OData-URL, section 5.1.1.15](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_PathExpressions) allows as function parameters properties of the entity addressed by the resource path. But this does not work for dynamic properties, because ABNF disallows\n```\n$compute=concat(year(Date),'-05-01') as MayDay\n&$filter=Special.IsSunday(Date=MayDay)\n```\nSee [this failed test case](https://github.com/oasis-tcs/odata-abnf/runs/5127416747?check_suite_focus=true).\n\nImported from [ODATA-1511](https://issues.oasis-open.org/browse/ODATA-1511)",
    "labels": [
      "ABNF"
    ],
    "assignees": [],
    "state": "closed"
  },
  {
    "title": "$root/EntitySet is not allowed by ABNF",
    "body": "[OData-URL, 5.1.1.14.5](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_root) seems to allows `$root` only in a single-valued expression or within complex or collection literals. The ABNF allows also some collection-valued expressions, but not entity sets.\n\n### Proposal\n\nMerge [PR #64](https://github.com/oasis-tcs/odata-abnf/pull/64).\n Remove second sentence from [OData-URL, section 5.1.1.14.5](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_root) and add another example.\nh5. 5.1.1.14.5 [$root](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_root)\n\nThe `$root` literal can be used in expressions to refer to resources of the same service.\n\nAdditional Example: function call returning the average rating of a given employee by their peers (employees in the same department)\n```java\nhttp://host/service/Employees('A1245')\n/self.AvgRating(RatedBy=@peers)\n?@peers=$root/Employees/$filter(Department eq $it/Department)\n```\n\nImported from [ODATA-1510](https://issues.oasis-open.org/browse/ODATA-1510)",
    "labels": [
      "ABNF",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Core.MediaType for media resources",
    "body": "Term `Core.MediaType` allows specifying the media type of a binary or stream data. \n\nThe term cannot currently applied to media resources.\n\n### Proposal\n\nAllow applying the term to media entity types for the corresponding media resource, similar to [ODATA-1471](https://issues.oasis-open.org/browse/ODATA-1471) for `Core.ContentDisposition`.\n\nImported from [ODATA-1509](https://issues.oasis-open.org/browse/ODATA-1509)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Missing annotation namespace in example 8",
    "body": "[OData-JSON, example 8](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_ControlInformationcollectionAnnotati) contains an annotation\n```java\n\"@emailType\":\"Personal\"\n```\nwithout a namespace. Is this example also meant to illustrate the concept of default namespaces, or was it simply forgotten?\n\n### Proposal\n\nReplace `\"@emailType\"` with `\"@OfficeCommunication.emailType\"`.\n\nImported from [ODATA-1508](https://issues.oasis-open.org/browse/ODATA-1508)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Does a filter segment followed by a key predicate make sense?",
    "body": "ABNF rules allow the production\n```java\ncollectionNavNoCastExpr = filterExpr keyPredicate\n```\nwhich enables things like\n```java\nOrder('A')/Items/$filter(Product eq 'Sugar')(ItemNumber=2)\n```\nIs the `$filter` redundant since a key predicate follows anyway? Or does this ensure that item #2 is returned only if its product is sugar?\n\n### Proposal\n\n[PR #62](https://github.com/oasis-tcs/odata-abnf/pull/62)\n\nImported from [ODATA-1507](https://issues.oasis-open.org/browse/ODATA-1507)",
    "labels": [
      "ABNF",
      "V4.01_ERRATA01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Instance annotations of absent complex properties",
    "body": "According to [OData-JSON](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_InstanceAnnotations) section 20, a complex property has its instance annotations embedded into the JSON object:\n```json\n{\n \"ComplexProperty\": {\n  \"@ns.term\": ...\n  \"SubProperty\": ...\n }\n}\n```\nHowever, if the property is null, it looks different:\n```json\n{\n \"ComplexProperty\": null,\n \"ComplexProperty@ns.term\": ...\n}\n```\nHow shall the instance annotation look if the property is absent? So\n```json\n{\n \"ComplexProperty@ns.term\": ...\n}\n```\nor so?\n```json\n{\n \"ComplexProperty\": {\n  \"@ns.term\": ...\n }\n}\n```\nSection 20 does not cover the case \"When annotating a name/value pair for which the value is absent\".\n\n### Proposal\n\nAnnotations are always expressed as name/value pairs. For entity data model constructs represented as JSON objects the annotation name/value pairs are placed within the object; for constructs represented as JSON arrays or primitives, _including null,_ they are placed next to the annotated model construct _and have the name of the annotated property before the `@`. An annotation in the latter format can also take the place of an absent property._\n\nImported from [ODATA-1503](https://issues.oasis-open.org/browse/ODATA-1503)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Annotations targeting contained singletons",
    "body": "The combination `AppliesTo=\"EntitySet Collection\"` occurs very often and the `EntitySet` could even be omitted, because an entity set is also a collection. This combination allows targeting contained entity sets with `Target=\"ns.Schema/EntitySet/collectionValuedNavProp\"`.\n\nHowever, `AppliesTo=\"Singleton\"` does not allow `Target=\"ns.Schema/EntitySet/singleValuedNavProp\"`. In order to treat \"contained singletons\" like named singletons, a new value for applicability is needed:\nh3. 14.1.2 Applicability\n||Symbolic Value||Model Element||\n|Instance|Singleton or complex-valued Property or Navigation Property|\n\n### Proposal\n\nAdd a new value depending on the restrictions we want on the single instance\n1. `Single` Singleton or single-valued Property or Navigation Property\n1. `Object` Singleton or single-valued complex Property or Navigation Property\n1. `Entity` Singleton or single-valued Navigation Property\n\nWe can argue that this is a compatible change as the specification calls out that\n> clients SHOULD be prepared for any term to be applied to any model element and SHOULD be prepared to handle unknown values within the `AppliesTo` attribute\n> \n\nTC agrees to extend `AppliesTo=\"Singleton\"` to mean also single-valued Property or Navigation Property.\n\nImported from [ODATA-1501](https://issues.oasis-open.org/browse/ODATA-1501)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Why is function \"matchesPattern\" written in camelCase?",
    "body": "\n\n### Proposal\n\nWrite it \"matchespattern\" to be consistent with the other functions.\n\nThe function names are now case-insensitive, so it really doesn't matter from a functionality perspective.\n\nImported from [ODATA-1500](https://issues.oasis-open.org/browse/ODATA-1500)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify where collection of primitive type can be used",
    "body": "Section 3.4 Built-In Abstract Types states that\n\n> \n> - Collection(Edm.PrimitiveType)\n>   - cannot be used as the type of a property or term.\n>   - cannot be used as the type of a parameter or the return type of an action or function.\n> \n\n\nWhere can it be actually used?\n\n### Proposal\n\nChange to\n>  * Collection(Edm.PrimitiveType)\n>   - cannot be used.\n\nAfter reopening:\n\nAdd note to [OData-JSON]: A collection of primitive values that occurs in a property of type `Edm.Untyped` is interpreted as a collection of `Edm.Boolean`, `Edm.String` and `Edm.Decimal`, depending on the Javascript type.\n\nClarify that `Validation.DerivedTypeConstraint` can contain only types that would be allowed as type of the constrained member.\n\nImported from [ODATA-1498](https://issues.oasis-open.org/browse/ODATA-1498)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "13.6 Function Import: annotations allowed but not mentioned",
    "body": "Function imports can be annotated, same as action imports, but the corresponding sentence is missing. \n\nThe sentence is there for action imports (section 13.5), and annotations are explicitly allowed in the XML schema.\n\nImported from [ODATA-1497](https://issues.oasis-open.org/browse/ODATA-1497)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "clarify the relationship of the various path expression types",
    "body": "The section [14.4.1 Path Expressions](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_PathExpressions) lists various different path exptessions\n\nThe sections 14.4.1.4 to 6 mention the relationship between the built-in types Edm.PropertyPath, Edm.AnyPropertyPath, or Edm.ModelElementPath but never makes it explicit what the relationship is. \nUnder ModelElementPath is states \n    \"specify the built-in types Edm.ModelElementPath\"\nUnder Navigation Property Path it states \n     \"specify the built-in types Edm.NavigationPropertyPath, Edm.AnyPropertyPath, or Edm.ModelElementPath.\n\nWhich seems to indicate the ModelElementPath is more specific. \nCan this be explained in a more comprehensive way ?\n\n### Proposal\n\nhttps://github.com/oasis-tcs/odata-specs/pull/228\n\nImported from [ODATA-1496](https://issues.oasis-open.org/browse/ODATA-1496)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove statement about format of media streams",
    "body": "The Protocol spec describes in section [11.4.3 Update an Entity](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#_Toc31358979) how media entities can be updated with OData V4.01. It contains a statement about the format how the media stream should be represented.\n\nStatements about data representation should only be made in the corresponding format specs.\n\n### Proposal\n\nThe JSON format spec includes the same definition in section [JSON Format 10 Media Entity.](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_MediaEntity)\n\n \n\nTherefore, proposal is to simply remove the statement about the format in the fifth paragraph: \"For requests with an OData-Version header with a value of 4.01 or greater, the media stream of a media entity can be updated by specifying the <del>base64url-encoded</del> _format-specific representation_ of the media stream as a virtual property $value.\"\n\nImported from [ODATA-1495](https://issues.oasis-open.org/browse/ODATA-1495)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "edm.xsd doesn't allow Edmx Version=\"4.01\", and there doesn't seem to be a 4.01 version of the xsd",
    "body": "XSD-based validation of a CSDL XML file fails if Edmx Version=\"4.01\".\n\n\n### Proposal\n\nEither we need to have a 4.01 version of the xsd, or the 4.0 version needs to allow Edmx Version=\"4.01\".\n\n\nImported from [ODATA-1494](https://issues.oasis-open.org/browse/ODATA-1494)",
    "labels": [],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "OData-URL 5.1.1.15 does not explain example 106 in 5.1.1.14.4",
    "body": "Example 106 in [OData-URL](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_it)\n```java\nhttp://host/service/Customers?$expand=Orders($filter=$it/Address/City eq ShipTo/City)\n```\nuses the navigation property `ShipTo` of the `Orders` navigation target. According to section 5.1.1.15, however, `ShipTo` should be equivalent to `$it/ShipTo`, a property of the addressed resource `Customers`:\n> Properties and navigation properties of the _entity type of the set of resources that are addressed by the request URL_ can be used as operands or function parameters, as shown in the preceding examples.\n> \n\n\n### Proposal\n\nRephrase section 5.1.1.15:\n> Properties and navigation properties of the _structured type_ _on which a common expression is evaluated_ can be used as operands or function parameters, as shown in the preceding examples.\n> \n\nAdd note to 5.1.1.14.6 that example could use `$this/ShipTo/City`, which would be equivalent and longer.\n\nImported from [ODATA-1493](https://issues.oasis-open.org/browse/ODATA-1493)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Inconsistency in example 16.1, entity type Product",
    "body": "[CSDL Example 16.1](https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ProductsandCategoriesExample) has an entity type `Product` which is a media entity (`HasStream=\"true\"`) and a non-nullable navigation property `Category`. \n\nIt would be rather hard to create such an entity because the POST body must be the media resource, and the server would have to guess the Category from that media (a picture or movie).\n\n### Proposal\n\nRemove `HasStream=\"true\"` resp. `$HasStream:true` from the example.\n\nImported from [ODATA-1491](https://issues.oasis-open.org/browse/ODATA-1491)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Point out that additional rules for stream properties were introduced with V4.01",
    "body": "# The current JSON spec for V4.01 describes in section [9 Stream Properties](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#_Toc38457765) that stream properties can be returned expanded in the response and can be represented as native JSON, if they are of media type application/json. These are two statement that are not included in the [corresponding section ](http://docs.oasis-open.org/odata/odata-json-format/v4.0/errata03/os/odata-json-format-v4.0-errata03-os-complete.html#_Toc453766652) in the last Errata 3 of the same JSON spec of V4.0.\n1. The current URL conventions spec for V4.01 describes in section [5.1.3 System Query Option $expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#_Toc31361039) in the paragraph starting with \"A path can end with\" as the first point that stream properties can be included. This statement is not included in the [corresponding section](http://docs.oasis-open.org/odata/odata/v4.0/errata03/os/complete/part2-url-conventions/odata-v4.0-errata03-os-part2-url-conventions-complete.html#_Toc453752359) in the last Errata 3 of the same URL conventions spec of V4.0.\n\n### Proposal\n\nRe 1: Make an explicit note about the rules added with V4.01 in section [9 Stream Properties](http://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#_Toc38457765)\n\nRe 2: Make an explicit note about the rules added with V4.01 in section [5.1.3 System Query Option $expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#_Toc31361039)\n\nImported from [ODATA-1490](https://issues.oasis-open.org/browse/ODATA-1490)",
    "labels": [
      "JSON Format",
      "URL Conventions",
      "V4.01_ERRATA01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Core.ContentDisposition: add Disposition Type",
    "body": "\n\n### Proposal\n\nAdd property `Type` to term `Core.ContentDisposition`.\n\nImported from [ODATA-1489](https://issues.oasis-open.org/browse/ODATA-1489)",
    "labels": [
      "Vocabularies"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Inconsistencies for Annotation between CSDL XML spec and edm.xsd",
    "body": "Sections 12.2 and 12.4 mention that Action and Function MAY contain edm:Annotation elements (no constraints on ordering are stated relative to other child elements), but edm.xsd doesn't permit Annotation to appear within the Action/Function after ReturnType.\n\n13.6 Function Import doesn't mention that FunctionImport MAY contain edm:Annotation elements, but the edm.xsd allows it.\n\n### Proposal\n\nFix edm.xsd so that edm:Annotation may appear after ReturnType.\n\nFix CSDL XML section 13.6 to mention that FunctionImport MAY contain edm:Annotation elements.\n\n\nImported from [ODATA-1488](https://issues.oasis-open.org/browse/ODATA-1488)",
    "labels": [
      "CSDL XML",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "broken link in \"References\" section",
    "body": "The references to IETF RFCs are using http:// which does not seem to be supported\n\nbroken: http://tools.ietf.org/html/rfc6570\nworks: https://tools.ietf.org/html/rfc6570\n\nRFC https://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#BMRFC6570\n\n### Proposal\n\nChange all IETF RFC references to the preferred format, see http://docs.oasis-open.org/templates/ietf-rfc-list/ietf-rfc-list.html\n\n\nImported from [ODATA-1487](https://issues.oasis-open.org/browse/ODATA-1487)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 4.3: Correct references to ABNF rules",
    "body": "Section 4.3 uses outdated ABNF rule names:\n- `entityColFunctionCall` --> `entityColFunctionImportCall`\n- `entityFunctionCall` --> `entityFunctionImportCall`\n- `actionCall` --> `actionImportCall`\n\nImported from [ODATA-1486](https://issues.oasis-open.org/browse/ODATA-1486)",
    "labels": [
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify canonical URLs for stream properties",
    "body": "Feedback:\n- It would help if JSON Format 4.5.12 would not simply generically refer to _OData Version 4.01 Part 2: URL Conventions_ and explicitly state that the stream property URL conventions are the same as for other properties. I see that [4.7 Addressing a Property Value](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part2-url-conventions.html#sec_AddressingaPropertyValue) actually implicitly makes such a statement but a more explicit statement would still help.\n- Since examples speak more than 1000 words I would most appreciate if in [11.2.4 Requesting Individual Properties](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_RequestingIndividualProperties) or in [11.4.8 Managing Stream Properties](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ManagingStreamProperties), an example could be added. In 11.4.8, one could then add one example with the canonical URL and one with a different mediaReadLink.\n\n \n\n### Proposal\n\nJSON Format 4.5.12:\n- First paragraph: explicitly reference URL Conventions [4.14 Addressing the Media Stream of a Media Entity](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingtheMediaStreamofaMediaEnti) and [4.6 Addressing a Property](https://docs.oasis-open.org/odata/odata/v4.01/os/part2-url-conventions/odata-v4.01-os-part2-url-conventions.html#sec_AddressingaProperty)\n\nProtocol\n- 11.4.8: add example `GET http://host/service/Products(1)?$select=Thumbnail` with a response (excerpt) cloned from [JSON Format chapter 9 Stream Property](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_StreamProperty)\n- 11.4.8.2: add example `DELETE http://server/uploads/Thumbnail546.jpg` using the response from 11.4.8\n\n\nImported from [ODATA-1485](https://issues.oasis-open.org/browse/ODATA-1485)",
    "labels": [
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify response to batch request that fails before \"OData processing\"",
    "body": "The specification does not spell out that it is allowed for a server to fail before \"OData processing\", and even before digesting a multipart request body.\n\nIn that case the (error) response can have any content type and response shape, including application/json and an OData error response.\n\n### Proposal\n\nChange [Part 1: Protocol, Section 9.4 Error Response Body](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_ErrorResponseBody) to:\n> The representation of an error response body is format-specific.\n>  <ins>An OData-specific error response</ins> +(which can be recognized by the presence of the OData-Version header)+-it- consists at least of the following information:\n> \n\n\nImported from [ODATA-1482](https://issues.oasis-open.org/browse/ODATA-1482)",
    "labels": [
      "Protocol",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow Edm.Stream for non-binding action and function parameters",
    "body": "The CSDL specifications currently restrict the use of `Edm.Stream` to _binding_ parameters and return types of actions and functions.\n\nEspecially for stream values of media types `application/json` and `text/plain` this is an unnecessary limitation.\n\n### Proposal\n\nCSDL:\n- Allow use of `Edm.Stream` also for _non_-binding parameters of actions and functions.\n\nJSON Format\n- 18 Action Invocation: mention Edm.Stream for values of non-binding parameters, reference chapter 9 for their representation\n- (do not rename chapter 9)\n\nURL Conventions\n- Only allow path expressions that evaluate to Edm.Stream to be passed as non-binding function parameters\n- No literal representation for Edm.Stream values in URLs\n\nImported from [ODATA-1481](https://issues.oasis-open.org/browse/ODATA-1481)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "JSON Format",
      "V4.02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "7.2.3 Precision: clarify absence of $Precision for DateTimeOffset",
    "body": "CSDL XML defines different meaning for the absence of the Precision attribute depending on the type (Decimal versus DateTimeOffset).\n\nCSDL JSON does not define a different meaning for absence of the $Precision member. This is intentional, see [ODATA-1115](https://issues.oasis-open.org/browse/ODATA-1115).\n\n### Proposal\n\nClarify that this is intentional. In CSDL JSON write\n> Absence of `$Precision` means unspecified precision +both for decimal and temporal properties+.\n> \n\nin CSDL XML write:\n> If not specified for a decimal property, the decimal property has <ins>unspecified</ins> precision.\n> \n\n\nImported from [ODATA-1478](https://issues.oasis-open.org/browse/ODATA-1478)",
    "labels": [
      "CSDL JSON",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Aggregation on different levels",
    "body": "Use case: Display top 4 countries by number of sales, with aggregate sales amount and number of account responsibles per country.\n\nThis requires aggregation on two different levels:\n- per distinct account responsible per country\n- per country\n\nThis can be achieved with a `concat` transformation inside `groupby`\n```java\n$apply=groupby((Country),concat(\n  groupby((AccountResponsible))/aggregate($count as number_of_leaves),\n  aggregate(SalesNumber,SalesAmount)\n))\n/orderby(SalesNumber desc)/top(4)\n```\nthat returns two rows per country\n||Country||number_of_leaves||SalesNumber||SalesAmount||\n|DE|2000| | |\n|DE| |500|5000|\n|UK|1500| | |\n|UK| |400|5500|\n\nBut then the subsequent `orderby` cannot sort the countries, because each country occupies two rows. Before the `orderby`, the table would need to be compressed into\n||Country||number_of_leaves||SalesNumber||SalesAmount||\n|DE|2000|500|5000|\n|UK|1500|400|5500|\n\nOne way to achieve this is\n```java\n$apply=groupby((Country),concat(\n  groupby((AccountResponsible))/aggregate($count as number_of_leaves),\n  aggregate(SalesNumber,SalesAmount)\n)/aggregate(\n  number_of_leaves with max as number_of_leaves2,\n  SalesNumber with max as SalesNumber2,\n  SalesAmount with max as SalesAmount2\n))\n/orderby(SalesNumber2 desc)/top(4)\n```\nBut this is cumbersome and requires renaming the properties.\n\nCan [OData-Aggr] offer a more elegant solution?\n\nImported from [ODATA-1477](https://issues.oasis-open.org/browse/ODATA-1477)",
    "labels": [
      "Data Aggregation"
    ],
    "assignees": [],
    "state": "closed"
  },
  {
    "title": "JSON batch body encoding for \"text\" content types may cause conversion errors or data loss",
    "body": "OData 4.01 JSON Format Section 19.1 Batch Request states:\n\n... \"For media types of top-level type text, for example text/plain, the value of body is a string containing the value of the request body.\"\n\nThis is fine if there is an explicit charset=utf-8 parameter in the Content-Type, otherwise is highly problematic for two reasons:\n\n1. See https://www.w3.org/International/articles/http-charset/index \"It is very important to always label Web documents explicitly. HTTP 1.1 says that the default charset is ISO-8859-1. But there are too many unlabeled documents in other encodings, so browsers use the reader's preferred encoding when there is no explicit charset parameter.\"\n\nWith no explicit charset, we may assume that media/stream content is utf-8 when it isn't, and risk transmitting invalid UTF-8 sequences or failing conversions.\n\n2. If charset is not us-ascii (a strict subset of utf-8) or utf-8, then the agent (client or server) attempting to encode a body as a JSON string may be unable (or even likely) to fail the conversion as it may not have a suitable conversion library for arbitrary charset conversion.\n\nContrast with multipart batches, where media/stream content (within a batch request/response) would be treated as binary with no conversion. If we cannot reliably use JSON batches for arbitrary \"text\" media/stream types without fear of conversion error or lossy conversion, then we will need to use multipart batches for reliable media/stream batch processing.\n\n### Proposal\n\nPossibility: only encode \"text\" content as a JSON string if `charset=utf-8` or `charset=us-ascii` is explicitly present or the defined default of the \"text\" sub-type, which is the case for `text/plain`. Otherwise encode as a string in base64url format.\n\nThis proposal isn't backwards compatible with the current spec in all cases, we need to compile a list of \"text\" sub-types and their defined default charset to see where this might cause problems.\n\nOn the other hand the current spec doesn't give instructions for encoding charsets other than UTF-8 and its true subsets as JSON strings, so a recipient of `text/<something>;charset=iso-8859-16` now does not really know how to decode the stream value.\n\nChange fourth paragraph of [9 Stream Property](https://docs.oasis-open.org/odata/odata-json-format/v4.01/odata-json-format-v4.01.html#sec_StreamProperty) to (inserted text in *{color:#00875a}green{color}*)\n> If the actual stream data is included inline, the control information mediaContentType MUST be present to indicate how the included stream property value is represented. Stream property values of media type `application/json` or one of its subtypes, optionally with format parameters, are represented as native JSON. Values of top-level type `text` *{color:#00875a}with an explicit or default `charset` of `utf-8` or `us-ascii`, for example `text/plain`{color}*, are represented as a string, with JSON string escaping rules applied. Included stream data of other media types is represented as a base64url-encoded string value, see [RFC4648], section 5.\n> \n\n\nImported from [ODATA-1476](https://issues.oasis-open.org/browse/ODATA-1476)",
    "labels": [
      "JSON Format",
      "V4.01_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  }
]