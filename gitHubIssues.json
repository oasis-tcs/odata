[
  {
    "title": "Allow omitting namespaces for unambiguous functions/actions",
    "body": "I hear a lot of pushback on having to qualify functions/actions when invoking.\n\nWe can support unqualified function/actions as long as they don't conflict with any properties.\n\n### Proposal\n\n-introduce a vocabulary element for services to declare one or more default namespaces, as per simplified url proposal (https://www.oasis-open.org/apps/org/workgroup/odata/email/archives/201511/msg00007.html)\n\n-4.01 services need to support invoking unqualified actions/functions defined within a default namespace\n-State that bound actions/functions SHOULD NOT conflict with any properties on the type they are bound to\n-Define a precedence for resolving possible conflicts as per simplified url proposal:\n   -declared property=>function/action=>open property \n-Services must also allow qualified invocation\n\n-make sure that docs are clear that services must not require clients to understand custom annotations, but OData annotations may imply semantics that a client reporting support for that version of the specification would need to understand in order to work correctly with the service. \n\nImported from [ODATA-812](https://issues.oasis-open.org/browse/ODATA-812)",
    "labels": [
      "Protocol",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define propagation and overriding of annotations",
    "body": "We regularly face situations where we want to \"propagate\" annotations on a model element to all places where this model element is used/referenced, e.g. annotate an entity type and then have that annotation apply to all entity sets, or annotate a type definition and have that annotation apply to all properties or action parameters of that type.\n\nAn explicit annotation on one of the usage/reference points would then overrule/modify the annotation on the used/referenced construct.\n\nThe current specification text seems to implicitly assume this behavior, but doesn't explicitly state rules on\n- where do annotations propagate to?\n- how are structured annotations modified? PATCH semantics if only partially specified?\n\n### Proposal\n\nPropagation along inheritance hierarchies:\n- Annotations on structured types and their properties also propagate down from the base type to the derived types\n- Annotations can be overridden at the derived type or its properties with replace (PUT) semantics for all types of annotations: primitive, structured, collection-valued.\n\nPropagation along \"uses\" dependencies\n- It is up to the definition of the term to specify whether and how annotations with this term propagate to places where the annotated model element is used, and whether they can be overridden. E.g. a \"Label\" annotation for a UI can propagate from a type definition to all properties using that type, and may be overridden it in some cases with a more specific label, whereas an annotation marking a property as containing a phone number will propagate but may not be overridden.\n\nImported from [ODATA-811](https://issues.oasis-open.org/browse/ODATA-811)",
    "labels": [
      "CSDL XML",
      "Vocabularies",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Part 3, 14.1.5 uses IsURI instead of IsURL",
    "body": "Example 37 misspells the term IsURL as IsURI\n\n### Proposal\n\nFix, this is non-normative example text.\n\nImported from [ODATA-810](https://issues.oasis-open.org/browse/ODATA-810)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define non-message format for final response of async request",
    "body": "Today we define that, once an async result completes, polling the previously returned location header returns an HTTP-Message response that wraps the response (status, headers and body) that would have been returned if the request had processed synchronously:\n\n\"A GET request to the status monitor resource returns 200 OK once the asynchronous processing has completed. This response MUST include a Content-Type header with value application/http and a Content-Transfer-Encoding header with value binary as described in [HTTP-Message]. The response body MUST enclose a single HTTP response which is the response to the initial Data Service Request.\"\n\nWe did this in order to distinguish between the case that the request for status returned an error and the case where the response to the initial asynchronously request was an error.\n\nEveryone understands this once explained to them, but nobody likes it.\n\nOriginal proposal:\nDefine a new json representation for an asynchronous response which is the response of the initial data service request, if successful. In this case the response headers are the headers that would have been returned had the response returned successfully. In the case that the asynchronously executing operation resulted in an error, define an error code and recommended message for \"The asynchronous request resulted in an error.\" with an inner-error containing the status code and error text of the asynchronous operation.\n\nFor backward compatibility, clients that specify an Accept Header of \"application/http\" would still get back the message format, but clients that don't specify an Accept Header that allows \"application/http\" but do specify \"application/json\" (with or without format parameters) for non-batch requests would get this JSON response instead of the response wrapped \n\n### Proposal\n\nRevised Proposal:\n -For 4.01 clients, or 4.0 clients that do not specify application/http, the final results are not wrapped. \n -Add a new response header, \"AsyncResult\", whose value is the HTTP Status result code of the asynchronous operation and whose presence signals that the response has completed and the payload and headers represent the outcome of the asynchronous request. Services should always return this header value on the final result (whether wrapped or not).\n\n==>Hubert will check with James to see if there was ever a Response header field defined for returning additional information about the outcome of the request (i.e., a status code of an asynchronously executed operation).\n\nImported from [ODATA-809](https://issues.oasis-open.org/browse/ODATA-809)",
    "labels": [
      "Protocol",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Minor changes to new OnlyDeclaredProperties annotation",
    "body": "The new \"OnlyDeclaredProperties\" should apply to complex types as well as entity types, since both can be open and both can have dynamic properties unless otherwise annotated.\n\nAlso, the resolution suggested one of two alternatives; either calling the term \"AdditionalProperties\", consistent with the JSON Schema spec, or coming up with a name that meant dynamic properties wouldn't exist, so we could define a default and use it as a tagging term. We left it to the editors in the hopes that we could find a better name than \"OnlyDeclaredProperties\" for the tagging option, but since this should be the exception to what clients should be prepared to accept, I would prefer to go with the (more intuitive) option of using \"AdditionalProperties\" and require the service to provide the value \"false\" for cases where additional properties were not allowed: \n <Annotation Term=\"Core.AdditionalProperties\" Bool=\"false\"/> \n\nFinally, we should define what happens if this annotation specifies that additional properties are not allowed, but the type is marked as open. A type may be defined as open in a common definition, but restricted in a particular usage, so it probably makes sense for the annotation to override the attribute.\n\n### Proposal\n\nRename \"OnlyDeclaredProperties\" to \"AdditionalProperties\".\nMake apply to ComplexTypes as well as EntityTypes\nClarify that, if the type has the OpenType=true attribute, and the annotation specifying that additional properties are not allowed, that this usage of the type is closed and does not support additional properties. \n\nApplied:\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Core.V1.xml?rev=682\n\nImported from [ODATA-808](https://issues.oasis-open.org/browse/ODATA-808)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Don't need TargetId in a deleted link for a to 0..1 relationship",
    "body": "The JSON format spec provides specific ruled about when deleted links must be rendered:\n\nDelta responses MUST contain a deleted-link object for each deleted link that corresponds to a $expand path in the initial request, unless either of the following is true:\n•\tThe source or target entity has been deleted \n•\tThe maximum cardinality of the related entity is one and there is a subsequent link object that specifies the same source and relationship.\n\nThis makes sense, because with a single valued navigation property, the source and the relationship in the required link object uniquely identify the navigation property that is having it’s value replaced.\n\nThere is a similar case of when a single-valued navigation property has it’s link removed.  In that case, the only data needed to identify the link that should be removed is the source and the relationship. \n\nToday, however, the spec says that the target for the link being removed must also be provided:\n\nThe deleted-link object MUST include the following properties, regardless of the specified odata.metadata value\n•\todata.context – the context URL fragment MUST be #{entity-set}/$deletedLink, where {entity-set} is the entity set containing the source entity\n•\tsource – The id of the entity from which the relationship is defined, which may be absolute or relative\n•\trelationship – The name of the relationship property on the parent object\n•\ttarget – The id of the related entity, which may be absolute or relative\n\nThe requirement to include the target in this scenario raises the complexity and cost for the service to do “field level” tracking as this kind of relationship is typically implemented with a foreign key column.\n\n\n### Proposal\n\nProvide guidance to clients that they should not require targetid for deleted link for a to 0..1 relationship.\n\nApplied: https://www.oasis-open.org/committees/download.php/55883/odata-json-format-v4.0-wd08-2015-06-15.docx\n\nImported from [ODATA-807](https://issues.oasis-open.org/browse/ODATA-807)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Wrong description in capabilities vocabulary in term SearchRestrictions",
    "body": "In the Term \"SearchRestrictions\" we defined in the complex type \"SearchRestrictionsType\" a property \"UnsupportedExpressions\" with the description \"Expressions supported in $search\". The description is wrong, it should read \"Expressions not supported in $search\".\n\n<Term Name=\"SearchRestrictions\" Type=\"Capabilities.SearchRestrictionsType\" AppliesTo=\"EntitySet\">\n        <Annotation Term=\"Core.Description\" String=\"Restrictions on $search expressions\" />\n      </Term>\n      <ComplexType Name=\"SearchRestrictionsType\">\n        <Property Name=\"Searchable\" Type=\"Edm.Boolean\" DefaultValue=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"$search is supported\" />\n        </Property>\n        <Property Name=\"UnsupportedExpressions\" Type=\"Capabilities.SearchExpressions\" DefaultValue=\"none\">\n          <Annotation Term=\"Core.Description\" String=\"Expressions supported in $search\" />\n        </Property>\n      </ComplexType>\n      <EnumType Name=\"SearchExpressions\" IsFlags=\"true\">\n        <Member Name=\"none\" Value=\"0\" />\n        <Member Name=\"AND\" Value=\"1\" />\n        <Member Name=\"OR\" Value=\"2\" />\n        <Member Name=\"NOT\" Value=\"4\" />\n        <Member Name=\"phrase\" Value=\"8\" />\n        <Member Name=\"group\" Value=\"16\" />\n      </EnumType>\n\n### Proposal\n\nSee description.\n\nApplied: https://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Capabilities.V1.xml?op=diff&rev=665&sc=0\n\nImported from [ODATA-806](https://issues.oasis-open.org/browse/ODATA-806)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add term to Capabilities vocabulary for supported metadata formats",
    "body": "Similar to term SupportedFormats we should define an annotation that describes which formats are supported for $metadata, e.g. SupportedMetadataFormats.\n\n### Proposal\n\nAdd new term\n\n      <Term Name=\"SupportedMetadataFormats\" Type=\"Collection(Edm.String)\" AppliesTo=\"EntityContainer\">\n        <Annotation Term=\"Core.Description\" String=\"Media types of supported formats for $metadata, including format parameters\" />\n        <Annotation Term=\"Core.IsMediaType\" />\n      </Term>\n\nImported from [ODATA-805](https://issues.oasis-open.org/browse/ODATA-805)",
    "labels": [
      "CSDL JSON",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "If we allow Edm.Decimal to be used with IEEE decimal floating point, will we then support NaNn and +/-Infinity?",
    "body": "In other issues, e.g. [ODATA-789](https://issues.oasis-open.org/browse/ODATA-789), we have discussed extending the definition of Edm.Decimal to accomodate exponential form, to permit its use with IEEE decimal floating point values. This raises the issue of what to do with regard to the representation of NaN and +/- Infinity for floating point Edm.Decimal values in:\n\n- URL Conventions (ABNF)\n- ATOM Format\n- JSON Format\n\n\nImported from [ODATA-804](https://issues.oasis-open.org/browse/ODATA-804)",
    "labels": [
      "JSON Format",
      "URL Conventions",
      "V4.01_WD01",
      "duplicate"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Collection-valued property: Define default value for nullable facet",
    "body": "We missed to spell out the default value for the Nullable facet. For single valued properties we defined the default value as true.\n\n### Proposal\n\nProposal:\nAbsence of nullable facet on collection means it's unknown if  you can insert nulls. You can try, but it may fail.\nNullable=true means that the collection *may* contain null values (although attempting to insert a null value may still fail for a variety of reasons)\nNullable=false means that the collection can not contain null values\n\nImported from [ODATA-803](https://issues.oasis-open.org/browse/ODATA-803)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define a vocabulary for odata.* annotations",
    "body": "We need to define a vocabulary for odata.* annotations.\n\nImported from [ODATA-802](https://issues.oasis-open.org/browse/ODATA-802)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Consider supporting negative scale for decimal type",
    "body": "(Relates to [ODATA-771](https://issues.oasis-open.org/browse/ODATA-771))\n\n[ODATA-789](https://issues.oasis-open.org/browse/ODATA-789) attempted to address a number of questions around the use of Edm.Decimal. Part of that was clarifying/correcting current semantics of Edm.Decimal, and was accepted at part of [ODATA-789](https://issues.oasis-open.org/browse/ODATA-789). Part of the issue discussed the addition of an exponential notation, which was already the topic of [ODATA-771](https://issues.oasis-open.org/browse/ODATA-771) and will be tracked there.\n\nThis issue tracks the remaining issue from [ODATA-789](https://issues.oasis-open.org/browse/ODATA-789), the proposal to expand Edm.Decimal to support negative scale.\n\nDecimal data types in programming languages and databases\n===============================================\nCommon terminology is\n\nValue = Mantissa * 10**(-Scale)\nPrecision = length of Mantissa\n\nPositive Scale means fractional digits, negative scale avoids representing \"trailing zeroes\" for large integers, e.g. one million has mantissa = 1, scale = -6\n\nType\t\t\t\t\t\t\tPrecision = length of mantissa\tScale = -Exponent\n--------------------------------------------------------------------------------------------------------------------\nC# decimal\t\t\t\t\t\t96 bit ~ 28-29 decimal digits\t\tInstance, 0...28\nObjective-C NSDecimalNumber\t\t38 decimal digits\t\t\t\tInstance, -128...127\nJava BigDecimal\t\t\t\t\tunlimited no of decimal digits\t\tInstance, -2,147,483,648...2,147,483,647 (32 bit)\nDECFLOAT34\t\t\t\t\t\t34 decimal digits\t\t\t\tInstance, -384...383\nDECFLOAT16\t\t\t\t\t\t16 decimal digits\t\t\t\tInstance, -6144...6143\nDB2 DECIMAL\t\t\t\t\t1...31 decimal digits\t\t\t\tColumn, 0...Precision\nSybase ASE DECIMAL\t\t\t\t1...38 decimal digits\t\t\t\tColumn, 0...Precision\nSybase IQ DECIMAL\t\t\t\t1...126 decimal digits\t\t\tColumn, 0...Precision\nPostgres DECIMAL\t\t\t\t\t1...1000 decimal digits\t\t\tColumn, 0...Precision\nOracle NUMBER\t\t\t\t\t1...38 decimal digits\t\t\t\tColumn, -84...127\n\nProblem when mapping NUMBER to Edm.Decimal\n- Scale cannot be negative or larger than Precision\n\n### Proposal\n\nApplied: https://www.oasis-open.org/committees/download.php/55611/odata-v4.0-wd08-part3-csdl-2015-05-07.docx\n\n\nImported from [ODATA-801](https://issues.oasis-open.org/browse/ODATA-801)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Media streams section does not reference the AtomPub spec",
    "body": "The section about managing media entities (11.4.7) does not reference the AtomPub spec.\n\nThere is also no mention of the Slug header which was explicitly mentioned in previous versions of the spec in the sections about media resources.\n\nImported from [ODATA-800](https://issues.oasis-open.org/browse/ODATA-800)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Define Key-As-Segment URL convention for resource paths",
    "body": "Typical web APIs use path segments for key access to collection elements:\n\n~/Users\n~/Users/42\n\nSpecify how such a URL convention would look like, considering\n- multi-part keys\n- the Edm primitive type system\n- bound actions/functions on entity-set level\n- context URLs for contained entities which include the key\n- relative context URLs\n\nConsider notation that allows context URLs to be relative to the service root.\n\n### Proposal\n\nKey-as-Segment uses the (primary) key of an entity type. Primitive types are represented in path key segments without \"single quote decoration\" or \"double single quotes within\" and use standard percent-encoding to map them into the lexical space of URL path segments.\n\n4.01 Services that support key-as-segment syntax (for single-part keys only) should support the following precedence rules:\n\nFollowing an entity collection segment: \ni.\tTry to match an OData segment (starting with “$”)\nii.\tTry to match an alias-qualified bound action name, bound function overload, or type name\niii.\tTry to match a namespace-qualified bound action name, bound function overload, or type name\niv.\tTry to match an unqualified bound action name, bound function overload, or type name in a default namespace\nv.\tTreat as a key\n\nNotes:\n1. For maximum interoperability, services SHOULD also support parens format, to avoid ambiguity, and to support multi-part keys. Note that, if they do not support the parens format, they must (continue to) include the @odata.id, @odata.editlink, or @odata.readlink, as appropriate.\n2. The syntax of ContextUrl always uses parens syntax\n3. Forward slashes in key values must be percent-encoded  \n4. Single quotes within key values do not need to be percent-encoded or doubled\n\nExample 3 with key-as-segment syntax and current syntax\nsingle quote can be literal within string or percent-encoded and isn't doubled (using ~/ as a shortcut for the service root)\n\n~/People/O'Neil\n~/People/O%27Neil\n~/People('O''Neil')\n~/People(%27O%27%27Neil%27) \n~/People%28%27O%27%27Neil%27%29\n\nForward-slash within string must be percent-encoded just as in paren syntax\n~/Categories/Smartphone%2FTablet\n~/Categories('Smartphone%2FTablet')\n\n\n\nImported from [ODATA-799](https://issues.oasis-open.org/browse/ODATA-799)",
    "labels": [
      "URL Conventions",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Semantic Key or Alternate Key for entity types",
    "body": "Sometimes an entity type has a technical unique key, e.g. a sequence number or a guid, as well as one or more \"semantic\" or \"alternate\" keys, e.g. a User could be identified via a UserID or alternatively via an EmailAddress, or a Person could be identified via a Country+PassportNumber combination or a Country+SSN combination.\n\nThese \"semantic\" or \"alternate\" keys may include nullable properties (you may not know a person's SSN, but if you know it, it identifies the person), and there could be more than one of them, each consisting of a different set of properties.\n\n### Proposal\n\nAdopt the following community vocabulary by adding the term to the OData Core vocabulary and describing the behavior in [URL Conventions]:\nhttps://github.com/OData/vocabularies/blob/master/OData.Community.Keys.V1.md \nhttps://github.com/OData/vocabularies/blob/master/OData.Community.Keys.V1.xml \n\nAppliesTo should be EntityType and EntiySet. NavigationProperty would be an exception, is somewhat implied by entity set, and AppliesTo does not prohibit other uses.\n\nContact the existing community vocabulary owners to say that the term has been adopted by the OData Core vocabulary and should be used moving forward.\n\nImported from [ODATA-798](https://issues.oasis-open.org/browse/ODATA-798)",
    "labels": [
      "CSDL XML",
      "URL Conventions",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Org.OData.Capabilities.V1 term property FilterRestrictions/RequiresFilter has wrong facets",
    "body": "Type of term FilterRestrictions is defined as:\n      <ComplexType Name=\"FilterRestrictionsType\">\n        <Property Name=\"Filterable\" Type=\"Edm.Boolean\" DefaultValue=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"$filter is supported\" />\n        </Property>\n        <Property Name=\"RequiresFilter\" Type=\"Edm.Boolean\" Nullable=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"$filter is required\" />\n        </Property>\n        <Property Name=\"RequiredProperties\" Type=\"Collection(Edm.PropertyPath)\">\n          <Annotation Term=\"Core.Description\"\n            String=\"These properties must be specified in the $filter clause (properties of derived types are not allowed here)\" />\n        </Property>\n        <Property Name=\"NonFilterableProperties\" Type=\"Collection(Edm.PropertyPath)\">\n          <Annotation Term=\"Core.Description\" String=\"These properties cannot be used in $filter expressions\" />\n        </Property>\n      </ComplexType>\n\nThe term lacks the intended default of \"false\" for property RequiresFilter. On the other hand, it has a Nullable=\"true\" facet, which is the default anyway and can be omitted therefore.\n\n### Proposal\n\nAdd facet DefaultValue=\"false\" and remove facet Nullable from property RequiresFilter.\n\nApplied: https://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Capabilities.V1.xml?rev=670\n\nImported from [ODATA-797](https://issues.oasis-open.org/browse/ODATA-797)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add annotation to specify whether additional properties may be returned for an entity",
    "body": "In OData V3 only opentypes were allowed to return properties not advertised in $metadata.\n\nIn OData V4, for increased resiliency, we said that clients should be prepared to handle additional properties on any resource, and the introduction of PATCH as the preferred method for updating allows that to happen without loss.\n\nHowever, we lost the ability for a service to say that they will never return additional properties (which is probably the default case). Since clients are required to support additional properties we didn't think this was important, but as we look to a json-schema format it becomes interesting for telling clients (i.e., for validation) whether or not additional properties are allowed.\n\n### Proposal\n\nAdd a new tagging annotation \"OnlyDeclaredProperties\" that applies to entity types and specifies that the service will not return dynamic properties not specified in $metadata.\n\nThis only refers to properties. Services are still allowed to return instance annotations. JSON-Schema representation would include patternproperties for annotations.\n\nApplied: https://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Core.V1.xml?rev=673\n\nImported from [ODATA-796](https://issues.oasis-open.org/browse/ODATA-796)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Support annotations for expanded references",
    "body": "In OData V4 we have added the concept of fetching related references through appending /$ref to the navigation. This returns a result semantically more similar to RDF, which returns ids of related elements.\n\nSome services, particularly in constrained environments, may be only be able to return the keys of related references. These services push the burden of the work on the client to build the graph from the individual pieces.\n\nIn other cases, especially for small nested/contained results, the service might only be able to represent the related elements as expanded relationships. \n\nWe already support both of these representations, and having services return them in this format (even without an expand) is legal, but we don't have a way to tell the client that the service does this by default and may not support expand.\n\nWe should recognize such services exist and provide a way to tell clients of this behavior.\n\n### Proposal\n\nAdd two new annotations, applied to navigation link elements: \"AutoExpandReferences\" and \"AutoExpand\".\n\nAutoExpandReferences says that the default behavior of the service is to expand just the references of the related resources, and AutoExpand says the default behavior of the service is to expand the related resources.\n\nSuch services may or may not support expand on those navigation properties\n\nApplied: https://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Core.V1.xml?rev=674\n\nImported from [ODATA-795](https://issues.oasis-open.org/browse/ODATA-795)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.4.2.2: Create Related Entities When Creating an Entity",
    "body": "Paragraph 3 states that\n\nOn success, the service MUST create all entities and relate them. If the request included a return Prefer header with a value of return=representation and is applied by the service, the response MUST be expanded to at least the level that was present in the deep-insert request.\n\nThis raised the question whether the service has to expand the response if no \"return\" preference is present.\n\nThe intention was: if something is returned, it has to be expanded.\n\n### Proposal\n\nDo not partially restate the 201/204 rule from section 11.4.2.2 and shorten paragraph 3 to:\n\nOn success, the service MUST create all entities and relate them. If the service responds with 201 Created, the response MUST be expanded to at least the level that was present in the deep-insert request.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-794](https://issues.oasis-open.org/browse/ODATA-794)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Expand * on complex type",
    "body": "Currently we can use a * on the expand to ask the service to expand all available navigation properties of an entity type. However, it is currently not possible to express the same intend for all navigation properties of a complex type.\n\nFor further clarification we might want to document if a $expand=* is intended to expand all the navigation properties of complex types as well and/or if this is recursive, i.o.w. is it to be expected that a navigation property of a complex type in a complex type is to be expanded in that case too.\n\nOur current ABNF doesn't allow us to expand all the navigation properties of a particular sub type either, something one might expect to be able to do too.\n\nSo IMHO the following examples should be supported as well:\n\n$expand=ComplexProp/*\n$expand=ComplexProp/ComplexProp/*\n$expand=ComplexProp/model.type/ComplexProp/*\n$expand=model.type/ComplexProp/*\n$expand=model.type/ComplexProp/model.type/ComplexProp/*\n\nAs with the existing use cases of *, each of these could be followed by either the /$ref or ($levels=max) segments.\n\n\n### Proposal\n\n1. * should include nav props on complex types (arbitrarily deep)\n2. Allow for the * expand to be used on complex type properties as well as specific sub types as well. The new ABNF for $expand would look something like:\n\nexpand               = '$expand' EQ expandItem *( COMMA expandItem )\nexpandItem           = expandStar\n                     / expandPath \n                       ( expandNavigationProperty\n                       / expandStar\n                       )\nexpandPath           = [ ( qualifiedEntityTypeName / qualifiedComplexTypeName ) \"/\" ] \n                       *( ( complexProperty / complexColProperty ) \"/\" [ qualifiedComplexTypeName \"/\" ] )\nexpandNavigationProp = navigationProperty \n                       [ \"/\" qualifiedEntityTypeName ]\n                       [ ref   [ OPEN expandRefOption   *( SEMI expandRefOption   ) CLOSE ]\n                       / count [ OPEN expandCountOption *( SEMI expandCountOption ) CLOSE ]\n                       /         OPEN expandOption      *( SEMI expandOption      ) CLOSE \n                       ]\nexpandStar           = [ STAR [ ref / OPEN levels CLOSE ] ]\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55614/odata-v4.0-wd08-part2-url-conventions-2015-05-07.docx\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-construction-rules.txt?rev=678\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-testcases.xml?rev=678\n\n\nImported from [ODATA-793](https://issues.oasis-open.org/browse/ODATA-793)",
    "labels": [
      "ABNF",
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.2.5.2 System Query Option $orderby: specify order of Edm.Boolean and Edm.Geo",
    "body": "We allow ordering by primitive values, and don't tell how true and false are ordered. We also don't explicitly exclude Edm.Geo and Edm.Stream.\n\n### Proposal\n\n* Edm.Boolean: null < false < true\n\n(which is already specified in part 2, section 5.1.1.1.3, http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part2-url-conventions/odata-v4.0-errata02-os-part2-url-conventions-complete.html#_Toc406398098 )\n\n- Edm.Geo*, Edm.Stream: no sorting possible \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-791](https://issues.oasis-open.org/browse/ODATA-791)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Bug in example 70",
    "body": "Example 70 reads:\n<Function Name=\"MostRecentOrder\" ReturnType=\"SampleModel.Order\"        \n                IsBound=\"true\"> \n  <Parameter Name=\"customer\" Type=\"SampleModel.Customer\" /> </Function>\n\nReturnType is used as an Attribute of the Function element. This is wrong.\nReturnType is an element.\n\n### Proposal\n\nchange example 70 to:\n<Function Name=\"MostRecentOrder\"  IsBound=\"true\"> \n  <Parameter Name=\"customer\" Type=\"SampleModel.Customer\" /> \n  <ReturnType=\"SampleModel.Order\" />\n</Function> \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-790](https://issues.oasis-open.org/browse/ODATA-790)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Primitive type Edm.Decimal is ill-defined in regard to Precision",
    "body": "(Relates to [ODATA-771](https://issues.oasis-open.org/browse/ODATA-771))\n\nA quick recap of relevant text from the spec:\n\n  4.4 Primitive Types ... Edm.Decimal ... Numeric values with fixed precision and scale\n  \n  6.2.3 Attribute Precision ... For a decimal property the value of this attribute specifies the maximum number of digits allowed in the property’s value; it MUST be a positive integer. If no value is specified, the decimal property has unspecified precision.\n\n  ... Note: service designers SHOULD be aware that some clients are unable to support a precision greater than 29 for decimal properties and 7 for temporal properties. Client developers MUST be aware of the potential for data loss when round-tripping values of greater precision. Updating via PATCH and exclusively specifying modified properties will reduce the risk for unintended data loss.\n\nFirst problem\n=============\n\nPROBLEM: By section 4.4, Edm.Decimal values have \"fixed\" precision. But later we allow that it may be \"unspecified\", so it is not \"fixed\". We might interpret this as: the precision can be \"fixed\" in a CSDL Property facet, or it may be \"fixed\" at runtime, i.e. in a sent or received value (according to the number of significant digits in the runtime value). But perhaps it indicates the wording in section 4.4 is inappropriate.\n\nSecond problem\n==============\n\nThe section 6.2.3 text suggests that precision greater than 29 could result in \"data loss during round-tripping\".\n\nFor temporal properties that is reasonable, because it is suggestive that precision greater than 7 in the fractional seconds may result in truncation/rounding (losing some significant digits in the fraction, but not preventing receipt/storage of the value by the client).\n\nHowever for decimal values, it could result in the inability of the client to even represent the value, let alone retain significant digits.\n\nTry this out (C#):\n\n  decimal x = decimal.Parse(\"123456789012345678901234567890\");\n\nPROBLEM: You don't get a loss of significant digits - the value just cannot be represented. Furthermore, even a precision of 29 is too much for C# decimal type, consider \"99999999999999999999999999999\" (28 9 digits). That particular type has a binary mantissa, so the maximum representable value is between 28 and 29 decimal digits (about 7.8*10^28).\n\nThird problem\n=============\n\nOne might expect that when we talk about Precision in the CSDL spec, we are talking about the type akin to defining its Value Space (see http://www.w3.org/TR/xmlschema11-2/#value-space), not about its Lexical Space (since we have ATOM/JSON/ABNF docs to cover lexical representation).\n\nFrom Wikipedia: http://en.wikipedia.org/wiki/Significant_figures#Identifying_significant_figures\n\n  The significant figures of a number are those digits that carry meaning contributing to its precision. This includes all digits except:\n  • All leading zeros;\n  • Trailing zeros when they are merely placeholders to indicate the scale of the number (exact rules are explained at identifying significant figures); and\n  • Spurious digits introduced, for example, by calculations carried out to greater precision than that of the original data, or measurements reported to a greater precision than the equipment supports.\n\nFrom Computational Mathematics (by T.R.F. Nonweiler): http://www.jstor.org/discover/10.2307/2008016?sid=21105465034221&uid=2&uid=4&uid=3738776\n\n  • The maximum number of digits available to the mantissa is called the precision, or number of significant digits.\n\nSo you will see that both references equate precision with significant digits. (Not to be confused with the notion of precision as it applies to positions after the decimal point, which for Edm.Decimal is the Scale).\n\nNow CSDL 6.2.3 allows for \"unspecified precision\". We might then reasonably assume that Edm.Decimal can thus accommodate values with arbitrary precision, i.e. an arbitrary number of significant digits. For example, as with java.math.BigDecimal.\n\nPROBLEM: Folks seem happy to accept that IEEE decimal floating point (64-bit and 128-bit) is compatible with CSDL Precision greater than 16 (64-bit) or 34 (128-bit). That indicates that we are not in agreement that CSDL Precision (as it relates to Edm.Decimal) is to do with significant digits. (The alternative is to allow that DECFLOAT in Edm.Decimal can have negative scale, but that is prohibited by the CSDL spec in section 6.2.4).\n\n\nDecimal data types in programming languages and databases\n===============================================\nCommon terminology is\n\nValue = Mantissa * 10**(-Scale)\nPrecision = length of Mantissa\n\nPositive Scale means fractional digits, negative scale avoids representing \"trailing zeroes\" for large integers, e.g. one million has mantissa = 1, scale = -6\n\nType                                                 Precision = length of mantissa     Scale = -Exponent\n--------------------------------------------------------------------------------------------------------------------\nC# decimal                                       96 bit ~ 28-29 decimal digits        Instance, 0..28\nObjective-C NSDecimalNumber      38 decimal digits                           Instance, -128…127\nJava BigDecimal                              unlimited no of decimal digits       Instance, -2,147,483,648…2,147,483,647\u000b(32 bit)\nDECFLOAT34                                  34 decimal digits                          Instance, -384…383\nDECFLOAT16                                  16 decimal digits                          Instance, -6144…6143\nDB2 DECIMAL                                  1…31 decimal digits                   Column, 0…Precision\nSybase ASE DECIMAL                     1…38 decimal digits                   Column, 0…Precision\nSybase IQ DECIMAL                        1…126 decimal digits                 Column, 0…Precision\nPostgres DECIMAL                           1…1000 decimal digits               Column, 0…Precision\nOracle NUMBER                               1..38 decimal digits                    Column, -84…127\n\nProblems when mapping these to Edm.Decimal\n - missing exponential notation: the \"floating-point decimals\" can be declared as Scale=\"variable\", but\n -- with Precision=internal precision not all internal values can be represented in OData\n -- with Precision=unspecified all internal values can be represented, using lots of zeroes, but not all OData values can be stored\n - OData representation doesn't allow leading decimal point, numeric Scale has to be lower than precision\n -- DECIMAL/NUMBER columns with 0 <= scale < precision fit perfectly\n -- scale = precision runs into problems:\n --- with Precision=internal precision not all DECIMAL values can be represented in OData\n --- with Precision=internal precision plus 1 not all OData values can be stored as DECIMAL values\n- Scale cannot be negative or larger than Precision minus 1\n-- NUMBER columns with negative scale or scale larger than precision minus 1 run into the same problems as \"floating-point decimals\"\n\nPossible solutions\n - define Precision to be the number of significant digits\n - allow exponential notation\n -- floating-point decimals can be minimally represented\n -- Precision can be used to exactly express the number of significant digits\n -- an annotation (or in future protocol versions a new facet) can indicate the presence of exponents and their value range\n - allow Precision=Scale\n -- DECIMAL precision and scale can be exactly expressed in all cases\n -- number representation could be relaxed to allow .123, or we don't count the \"0.\" into the Precision in this special case\n - allow negative Scale\n -- NUMBER precision and scale can be exactly expressed in all cases\n\n### Proposal\n\nClarify that CSDL Precision for Edm.Decimal is the number of significant decimal digits.\n\nAllow Precision=Scale and don't count the \"0.\" into the Precision in this special case.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55611/odata-v4.0-wd08-part3-csdl-2015-05-07.docx\n\n\nImported from [ODATA-789](https://issues.oasis-open.org/browse/ODATA-789)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify precidence rules for odata.include-annotations preference",
    "body": "In the description for precedence of terms in the odata.include-annotations preference we say \"The most specific identifier always takes precedence.\"\n\nThis was intended to imply that, if you have two rules (Foo.* and Foo.Bar.*)that can match a particular annotation (Foo.Bar.blah), the most specific match wins (Foo.Bar).\n\nI recently got a question whether the wording implies that, if you have \"Foo.*\" and \"Foo.Bar.*\", then it's the same as \"Foo.Bar.*\" -- i.e., that adding the more specific identifier makes it as if the former was not specified.\n\nI don't think this will be a common misinterpretation, but perhaps we should clarify just in case.\n\n### Proposal\n\nclarify that the identifier that takes precedence is the one that most closely matches the term being considered (wording left to editors) \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-788](https://issues.oasis-open.org/browse/ODATA-788)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify how odata.Include-annotations preference affects odata.* markup",
    "body": "In the JSON format we use annotations in the OData namespace in order to convey certain control information necessary for the client to understand the response. In the ATOM format this information was conveyed through other means (for example, using the <id> element).\n\nSo it's unclear if, or how, the odata.include-annotations preference affects the control information that happens to be conveyed through the same annotation mechanism in the JSON format, and it's relationship to the odata.metadata media type parameters.\n\nThe odata.metadata media type parameter is not very granular, and there are certainly cases where it would be nice to say \"I want minimal plus type information\" or \"I want minimal plus navigation links\", so it's tempting to say that you can additively request additional odata annotations beyond the specified metadata level. but:\n1) This would be specific to format(s) that encoded the odata control information as annotations.\n2) Would we ever do subtractive? Could a service request not to get ids (even if they didn't follow convention), or type information (even for derived types), or next links (even for paging)? What would client libraries or apps do, that assume absence of annotations in these cases has meaning (like the missing information follows convention, or the result is not paged).\n\n### Proposal\n\nPut in the JSON document:\n-It's okay to use include-annotations to add additional odata annotations beyond those prescribed by the odata.metadata type parameter\n-Services MUST not subtract from odata.metadata level.\n-Services MUST always not exclude nextlink, delta link and count as appropriate\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\nImported from [ODATA-787](https://issues.oasis-open.org/browse/ODATA-787)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Extend definition of edm:Path expression",
    "body": "Some model elements can only be annotated via inline annotations but not targeted via the edm:Annotations element. As annotation documents and service metadata may have different owners or life-cycles this restricts authors of annotation documents.\n\nIn the edm:Path expression definition we had specified how a path expression is evaluated, if the annotation targets a entity container, entity set, entity type, complex type, navigation property of a structured type, or a property of a structured type.\n\nWe should check for all other CSDL elements how the path expression could be extended to allow external targeting, e.g. if we target an edm:FunctionImport we can use the parameter names as path segments (which would be consistent with the syntax of the EntitySetPath attribute), and have a special path segment to address the ReturnType, e.g. $ReturnType or $out, treating it as an implicitly named \"return parameter\".\n\nWith the extension of the edm:Path we will automatically extend the definitions of the CSDL elements based on edm:Path like edm:PropertyPath.\n\n\n### Proposal\n\nAllow external targeting for\n\n- Annotation via MyTargetPath/@MySchema.MyTerm#MyQualifier\n- Action/Function Parameter via MySchema.MyContainer/MyActionImportOrFunctionImport/MyParameter, annotation applies to parameter of this name across all overloads for requests via the Import, overrides annotations on the Action/Function Parameter\n- ReturnType via MySchema.MyActionOrFunction/$ReturnType, applies to all overloads\n- ReturnType via MyContainer/MyActionImportOrFunctionImport/$ReturnType, applies to all overloads, overrides annotations on the Action/Function Parameter\n\nDefine how path expressions are to be evaluated relative to the external or enclosing target, e.g. how to address properties of the binding parameter type for bound actions\n\nImported from [ODATA-786](https://issues.oasis-open.org/browse/ODATA-786)",
    "labels": [
      "CSDL XML",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Numeric promotion (on overflow) across \"number type families\" is undesirable.",
    "body": "URL Conventions spec section 5.1.1.10 \"Numeric Promotion\" states:\n\n  \"If the result of an arithmetic operation does not fit into the type determined by the above rules, the next-wider type is used in the above order, with Edm.Double considered widest.\"\n\nWe may group OData numeric types into three families:\n\n  integer types: Byte, SByte, Int16, Int32, Int64\n  decimal types: Decimal\n  floating types: Single, Double\n\nNumeric promotion as a result of overflow is undesirable when it results in promotion between number type families. The semantics of arithmetic operators can therefore not be determined by static analysis. For example:\n\nFirst issue:\n----------------\n\nIf A, B and C integer values, then \"(A add B) div C\" is an integer unless \"A add B\" overflows Int64, in which case \"(A add B) div C\" will be decimal.\n\nNow consider \"((A add B) div C) mod D\". If \"(A add B) div C\" is decimal due to overflow, then \"((A add B) div C) mod D\" is an invalid expression since the \"mod\" operator is only defined for integral types.\n\nSecond issue:\n----------------\n\nNow consider that X and Y are decimal values. If (X add Y) overflows the range for decimal values, then according to the spec, (X add Y) is promoted to type Single. Two issues then arise:\n\n(1) Type Single has much less precision than either Decimal or Double. The implicit promotion on overflow should (if we permit promotion across number type familes) arguably be to type Double, to avoid unnecessary loss of precision.\n\n(2) \"(X add Y)\" div 0 is an error if \"X add Y\" does not overflow, but is positive or negative infinity if \"X add Y\" overflows and is promoted to a floating type. So the semantics of division are not statically determinable.\n\nThird issue:\n----------------\n\nConsider (E add F) where E and F are type Single.\n\nPromotion of the result from Single to Double (on overflow, say if the result exponent is outside the range of type Single) is not in accordance with IEEE floating point rules, which specify positive or negative infinity in this case.\n\n\n\n### Proposal\n\nIn errata 3:\n1) specify that, within comparison expressions, services should promote as necessary to perform comparison operations – should not be unnecessarily restricted by types of operands. (expressions may be calculated and compared using more precision than the operands) \n\nOpen issues for 4.01:\n1) Add divideby that always results in a decimal (as if both operands were promoted to decimal) \n2) Specify the result type for each operation based on operator types\n     a) Don't promote outside of type families \n     b) Do not promote Single->Double \n3) Specify overflow of int (would need to add +inf/-inf/nan to int) \n    a) Push for, in JSON Schema 5, that the strings \"-inf\", \"+inf\", \"nan\" are valid for numbers \n\n[original: \n-Expressly disallow numeric promotion (on overflow) across number type families.\n-Expressly disallow numeric promotion (on overflow) between Single and Double.\n-The remaining legal option would be numeric promotion on overflow only for integer types.]\n\nImported from [ODATA-785](https://issues.oasis-open.org/browse/ODATA-785)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Need to specify the behaviour of arithmetic operators on Decimal type",
    "body": "The rules for scale of results of decimal arithmetic operators are not specified.\n\n### Proposal\n\nIf A and B are values of type decimal, with scales scaleof(A) and scaleof(B), then:\n\nscaleof(A add B) = max(scaleof(A), scaleof(B))\nscaleof(A sub B) = max(scaleof(A), scaleof(B))\nscaleof(A mul B) = scaleof(A) + scaleof(B)\nscaleof(A mod B) = max(scaleof(A), scaleof(B))\nscaleof(A div B) = computed with max decimal scale; how this is reported is service defined. client can cast to force scale.\n\nFor decimal values with \"floating\" scale, result is decimal with floating scale.\n\nImported from [ODATA-784](https://issues.oasis-open.org/browse/ODATA-784)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Is it intentional that mindatetime/maxdatetime/now don't permit %-encoded parentheses in ABNF?",
    "body": "See ABNF for year:\n\n  yearMethodCallExpr               = 'year'               OPEN BWS commonExpr BWS CLOSE\n\nThen see ABNF for mindatetime/maxdatetime/now:\n\n  minDateTimeMethodCallExpr = 'mindatetime(' BWS ')'\n  maxDateTimeMethodCallExpr = 'maxdatetime(' BWS ')'\n  nowMethodCallExpr         = 'now(' BWS ')'\n\nNow OPEN and CLOSE are defined as:\n\n  OPEN  = \"(\" / \"%28\"\n  CLOSE = \")\" / \"%29\"\n\nThus permitting %-encoded parentheses for most functions except mindatetime/maxdatetime/now.\n\nIf this is intentional, we should explain the rationale.\n\nIf not intentional, then we should fix the ABNF construction rules.\n\n\nApplied:\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-construction-rules.txt?rev=671\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-testcases.xml?rev=671\n\n\n### Proposal\n\nRedefine the maxdatetime/mindatetime/now rules to use OPEN and CLOSE thus permitting %-encoded parentheses.\n\n\nImported from [ODATA-783](https://issues.oasis-open.org/browse/ODATA-783)",
    "labels": [
      "ABNF",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example 57: choose better example",
    "body": "The example is misleading as it places a percent-encoded string into a URL template that looks like an OData URL (parentheses and single quotes around the genreName), yet this would not result in a correct OData URL if the genreName would contain a single quote.\n\nBetter use a URL template with non-OData URL syntax, e.g. \n\nhttp://host/someAPI/Genres/{genreName}/LongDescription\n\n\n### Proposal\n\nApplied: https://www.oasis-open.org/committees/download.php/55611/odata-v4.0-wd08-part3-csdl-2015-05-07.docx\n\n\nImported from [ODATA-782](https://issues.oasis-open.org/browse/ODATA-782)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "substring: what to return if the start index is outside the first argument string, or the desired length exceeds the remaining string length",
    "body": "This could be a \"bad request\" returning no results at all, or it could evaluate to null, which may just lead to excluding the offending instance from the result.\n\nOr a mix of both: negative start index is \"bad request\", start index or desired length beyond the end of the first argument is \"null\".\n\n### Proposal\n\n-Empty string should be returned for an index larger than the length of the string.\n-Length too long should be allowed and return as many characters up to the specified length.\n-The behavior for a negative index is undefined.\n-A negative length is a bad request.\n\nBecause negative index is undefined, interoperable clients should not use negative indexes. \n\nIn 4.01, negative indexes mean count from the end, see [ODATA-901](https://issues.oasis-open.org/browse/ODATA-901)\n\nImported from [ODATA-781](https://issues.oasis-open.org/browse/ODATA-781)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "indexof: what to return if the second argument does not appear in the first argument",
    "body": "\n\n### Proposal\n\nindexof('ABC','D') is -1\n\nApplied: https://www.oasis-open.org/committees/download.php/55614/odata-v4.0-wd08-part2-url-conventions-2015-05-07.docx\n\n\nImported from [ODATA-780](https://issues.oasis-open.org/browse/ODATA-780)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Org.OData.Core.V1 defines Term IsURL but references it as IsUrl",
    "body": "Term IsURL is defined as:\n\n      <Term Name=\"IsURL\" Type=\"Core.Tag\" DefaultValue=\"true\" AppliesTo=\"Property Term\">\n        <Annotation Term=\"Core.Description\" String=\"Properties and terms annotated with this term MUST contain a valid URL\" />\n        <Annotation Term=\"Core.RequiresType\" String=\"Edm.String\" />\n      </Term>\n\nbut it is referenced with the incorrect case as 'IsUrl':\n\n      <Term Name=\"ResourcePath\" Type=\"Edm.String\" AppliesTo=\"EntitySet Singleton ActionImport FunctionImport\">\n        <Annotation Term=\"Core.Description\"\n          String=\"Resource path for entity container child, can be relative to xml:base and the request URL\" />\n        <Annotation Term=\"Core.IsUrl\" />\n      </Term>\n\nThe CSDL doesn't seem to refer to case-sensitivity, but note the precedent set by:\n\nhttps://issues.oasis-open.org/browse/[ODATA-77](https://issues.oasis-open.org/browse/ODATA-77)\n\n### Proposal\n\nFix the reference to refer to \"Core.IsURL\".\n\nApplied: https://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/vocabularies/Org.OData.Core.V1.xml?rev=659\n\n\nImported from [ODATA-779](https://issues.oasis-open.org/browse/ODATA-779)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example in section 11.7.3.1, \"Referencing Requests in a Change Set\", should use JSON, not ATOM",
    "body": "The example in section 11.7.3.1., Referencing Requests in a Change Set, refers to \"content in ATOM format\".  We should update the example (and description) to be JSON. Also be sure to update content type.\n\n### Proposal\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-778](https://issues.oasis-open.org/browse/ODATA-778)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify multiply/divide duration by number",
    "body": "In URL conventions we spell out the type of adding/subtracting different datetime/duration combinations, but we don't say anything about multiplication and division.\n\n### Proposal\n\nAdd to sections 5.1.1.2.4, Multiplication:\nThe mul operator is also valid for multiplying a Duration value with a numeric value. \n\nAdd to Section 5.1.1.2.5, Division\nThe div operator is also valid for dividing a Duration value by a numeric value.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55614/odata-v4.0-wd08-part2-url-conventions-2015-05-07.docx\n\n\nImported from [ODATA-777](https://issues.oasis-open.org/browse/ODATA-777)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify function invocation",
    "body": "Clarify description of function (import) invocation, especially\n- non-composable functions only support GET, function must be last path segment\n- composable functions allow additional path segments, last path segment determines allowed HTTP verbs, e.g. POST if last segment is multi-valued navigation property etc.\n\nSee discussion on https://groups.google.com/forum/#!topic/odata-discussion/djoPGQK3ZsE \n\n### Proposal\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\n\nImported from [ODATA-776](https://issues.oasis-open.org/browse/ODATA-776)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Should allow use of parameter aliases for key lookup",
    "body": "The ABNF currently allows the use of parameter aliases for function parameters and literals in filter and orderby expressions, but does not allow the use of parameter aliases in key predicates.  So the following would not be allowed:\nCustomers(@custID)?@custID='Alfki'\n\n\n### Proposal\n\nSupport the use of parameter aliases in key predicates in both the short form and the long form.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\nhttps://www.oasis-open.org/committees/download.php/55614/odata-v4.0-wd08-part2-url-conventions-2015-05-07.docx\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-construction-rules.txt?rev=677\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-testcases.xml?rev=677\n\n\nImported from [ODATA-775](https://issues.oasis-open.org/browse/ODATA-775)",
    "labels": [
      "ABNF",
      "Protocol",
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Qualifiers for annotations:  Preference odata.include-annotations",
    "body": "Qualifiers are not supported by the preference odata.include-annotations, which is a kind of omission. \nIf a consumer is only interested in annotations with a specific qualifier like #mobile, he can't express this today. \nCurrently we can express:\n  ns.term\n  ns.*\n  *\nand combined with the excludeoperator -\n  -ns.term\n  -ns.*\n  -*\nAny existing qualifiers are ignored by the matching operator. E.g. if you use odata.description#mobile and odata.description#desktop as annotations, you can only include or exclude all qualifiers together.\n\n### Proposal\n\nAdapt the definition of  the Preference odata.include-annotations:\nAllow in addition to the current definition\n  ns.term#qualifier\n  ns.*#qualifier\n  *#qualifier\nand combined with the excludeoperator -\n  -ns.term#qualifier\n  -ns.*#qualifier\n  -*#qualifier\n\nomission of #qualifier means all, regardless of qualifier\nNo way to specify unqualified only.\n\nABNF needs to be updated to explicitly show a single hash followed by an identifier. This would preclude ## or #(nothing)\n\nNew ABNF:\nannotationIdentifier = [ excludeOperator ]\n                       ( STAR \n                       / namespace \".\" ( termName / STAR ) \n                       ) \n                       [ '#' simpleIdentifier ]\n\n\nApplied: \nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-construction-rules.txt?rev=671\nhttps://tools.oasis-open.org/version-control/browse/wsvn/odata/trunk/spec/ABNF/odata-abnf-testcases.xml?rev=671\n\nImported from [ODATA-774](https://issues.oasis-open.org/browse/ODATA-774)",
    "labels": [
      "ABNF",
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Qualifiers for instance annotations: JSON Format",
    "body": "The CSDL specification states in http://docs.oasis-open.org/odata/odata/v4.0/errata02/os/complete/part3-csdl/odata-v4.0-errata02-os-part3-csdl-complete.html#_Toc406009991 that:\n\"Metadata annotations can be used to define additional characteristics or capabilities of a metadata element (...). Instance annotations can be used to define additional information (...). Where the same annotation is defined at both the metadata and instance level, the instance-level annotation overrides the annotation specified at the metadata level.\"\nThe JSON format specification is incomplete because it does not allow overriding metadata-level annotations <b>that use a qualifier</b>, because qualifiers in instance annotations are not supported by the JSON format.\nSee also Jira Ticket [ODATA-772](https://issues.oasis-open.org/browse/ODATA-772).\n\n### Proposal\n\nExtend the JSON rules for instance annotations in 18.1 and 18.2 (see http://docs.oasis-open.org/odata/odata-json-format/v4.0/errata02/os/odata-json-format-v4.0-errata02-os-complete.html#_Toc403940652) by “optionally followed by a hash (#) character and a qualifier for the term”.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\n\nImported from [ODATA-773](https://issues.oasis-open.org/browse/ODATA-773)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Exponential notation for Edm.Decimal values in JSON payloads",
    "body": "IEEE754 defines the DECFLOAT data type for high-precision decimal arithmetic. They have 16 or 34 decimal digit mantissas and exponents between -383 and +384 or -6143 and +6144.\n\nThe OData JSON Format represents Edm.Decimal values as JSON numbers, and JSON numbers allow exponential notation, so \n\n\"VeryLittle\":1.4e-6143\n\nshould be valid in JSON payloads.\n\n### Proposal\n\nIntroduce a format parameter, named \"ExponentialDecimals\", that tells the service that the client is able to receive decimals using exponential notation. In presence of this format parameter, services MAY (but are not required to) serialize decimal values in exponential notation.\n\nClients should verify in Capabilities.SupportedFormats whether or not service supports this before sending decimal values in exponential notation.\n\nSender MUST specify this format parameter in the Content-Type header if it sends decimal values in exponential notation\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\nImported from [ODATA-771](https://issues.oasis-open.org/browse/ODATA-771)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "18.2: incomplete description of annotation name format",
    "body": "The current description of how to form an annotation name is incomplete; apparently a sentence fragment got lost.\n\n### Proposal\n\nOld text:\n\nThe name is the same as the name of the name/value pair being annotated, followed by the “at” sign (@), followed by the namespace- or alias-qualified name of the annotation, followed by a dot (.), followed by the name of the term. The namespace or alias MUST be defined in the metadata document, see [OData-CSDL].\n\n\nNew text:\n\nThe name is the same as the name of the property or name/value pair being annotated, followed by the “at” sign (@), followed by the namespace- or alias-qualified name of the term. The namespace or alias MUST be defined in the metadata document, see [OData-CSDL].\n\n\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\nImported from [ODATA-770](https://issues.oasis-open.org/browse/ODATA-770)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "5.2 Model Versioning: allow adding a new term to the model",
    "body": "We allow adding new types and new annotations, but somehow forgot to allow adding new terms\n\n### Proposal\n\nSee summary\n\nAccepted: https://www.oasis-open.org/committees/download.php/54951/odata-meeting-89_on-20150115-minutes.html \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-769](https://issues.oasis-open.org/browse/ODATA-769)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove superfluous text after references",
    "body": "Sections 6.6 and 7 contain superfluous text after the references to [OData-JSON] and [OData-Atom]. This is a remainder of the attempt to repair broken text references that made parts of Errata01 unreadable. Some errors escaped our attention.\n\n### Proposal\n\nSee summary \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-768](https://issues.oasis-open.org/browse/ODATA-768)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Adapt Acknowledgements",
    "body": "Appendix A reflects the TC members as of June 2013. We should add people who have joined since then\n\n### Proposal\n\nAccepted: https://www.oasis-open.org/committees/download.php/54951/odata-meeting-89_on-20150115-minutes.html \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-767](https://issues.oasis-open.org/browse/ODATA-767)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "8.2.4 and 8.2.5 should refer to RFC7232 (public comment c201501e00001)",
    "body": "Public comment [c201501e00001] (https://lists.oasis-open.org/archives/odata-comment/201501/msg00001.html) points out an incorrect reference to RFC7230 that needs to be replaced with a reference to RFC7232\n\n### Proposal\n\nCheck all references to RFC7230 whether they are really refering the correct part\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-766](https://issues.oasis-open.org/browse/ODATA-766)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example 77 (invoking an action): show complex parameters",
    "body": "Change example to use a more complicated parameter structure, e.g. an array of objects with product id and quantity for that product\n\n### Proposal\n\nPOST http://host/service/Customers('ALFKI')/SampleEntities.CreateOrder\n\n{\n   \"items\":[\n      {\"product\":4001, \"quantity\":2},\n      {\"product\":7062, \"quantity\":1}\n   ],\n   \"discountCode\": \"BLACKFRIDAY\"\n}\n\nAlso modify description of example appropriately:\nExample 77: invoke the SampleEntities.CreateOrder action using /Customers('ALFKI') as the customer (or binding parameter). The values for the items and and discountCode parameters are passed in the body of the request. The items parameter value is an array of complex type instances, the discountCode parameter value is a string.\n \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-765](https://issues.oasis-open.org/browse/ODATA-765)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allowing implicit aliasing of parameters (public comment c201412e00001)",
    "body": "The public comment [c201412e00001] (https://lists.oasis-open.org/archives/odata-comment/201412/msg00001.html) with title \"Parameter implicit aliasing\" suggests to add a short-hand notation for parameter aliases, e.g. \n\nGET http://<serviceroot>/Add()?a=1&b=1 \n\ninstead of the currently necessary\n\nGET http://<serviceroot>/Add(a=@a,b=@b)?@a=1&@b=1.\n\n### Proposal\n\nSupport only when the function/action is the last segment:\n\nA service may support invoking a function as the last segment in a path by omitting the parens and supplying the named parameters as query options prefixed with the \"@\" sign ([ODATA-763](https://issues.oasis-open.org/browse/ODATA-763) and [ODATA-644](https://issues.oasis-open.org/browse/ODATA-644)). For maximum interoperability, services must continue to support the parens syntax as well.\n\nPrecedence rules apply for cases where the function name conflicts with a property name. In particular, the declared property wins over a function, and a function would win over a dynamic property.\n\nImported from [ODATA-763](https://issues.oasis-open.org/browse/ODATA-763)",
    "labels": [
      "Protocol",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 8.5: clarify that @odata.bind:null is valid for updating of 0..1 navigation properties",
    "body": "\n\n### Proposal\n\nSee summary\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\nImported from [ODATA-762](https://issues.oasis-open.org/browse/ODATA-762)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.5.4.1 Invoking an Action: Location header for 201 Created responses",
    "body": "Section \"11.5.4.1 Invoking an Action\" specifies that actions creating entities respond with 201 Created. Nothing is mentioned about the location header.\n\nFor consistency with section \"11.4.2 Create an Entity\" actions that create and return a single entity MUST also send a Location header to allow referencing the newly created entity with a content-id within batch requests.\n\nSection \"11.7.3.1 Referencing New Entities in a Change Set\" has to be reformulated to also cover new entities created by actions.\n\n### Proposal\n\nActions that create and return a single entity follow the rules for entity creation - must return a location header, should return 201 created unless the return-minimal preference has been specified, in which case the service may return 204 and no content, but still include the location header. \n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55616/odata-v4.0-wd08-part1-protocol-2015-05-07.docx\n\nImported from [ODATA-761](https://issues.oasis-open.org/browse/ODATA-761)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add to depth restrictions to Capabilities Vocabulary",
    "body": "Services will likely have different limits in the number of levels of depth they support in queries.  For example:\n\n•\tFilter on far navigation (e.g. Manager/Manager/Title eq ‘Director’ )\n•\tNested Any (e.g. Reports/any(Reports: Reports/any … )\n•\tDeep expansion 1:M  (e.g. $expand=Reports, Reports/Reports)\n\nAll those filters are syntactically correct, but create undue server-side load, so services are likely to impose limits on the number of levels of depth for such expressions.\n\nIs this something services should be able to report in Capabilities?\n\n\n### Proposal\n\nAdd MaxLevels property to FilterRestrictionsType, ExpandRestrictionsType, InsertRestrictionsType, UpdateRestrictionsType and DeleteRestrictionsType\n\n<ComplexType Name=\"FilterRestrictionsType\">\n   ...\n   <Property Name=MaxLevels\" Type=\"Edm.Int32\" DefaultValue=\"-1\">\n      <Annotation Term=\"Core.Description\" String=\"The maximum number \n          of levels (including recursion) that can be traversed in a $filter \n          expression.  A value of -1 indicates there is no restriction\"/>\n   </Property>\n</ComplexType>\n\n<ComplexType Name=\"ExpandRestrictionsType\">\n    ...\n   <Property Name=\"MaxLevels\" Type=\"Edm.Int32\" DefaultValue=\"-1\">\n      <Annotation Term=\"Core.Description\" String=\"The maximum number \n            of levels that can be can be expanded in a $expand expression. \n            A value of -1 indicates there is no restriction\"/>\n   </Property>\n</ComplexType>\n\n<ComplexType Name=\"InsertRestrictionsType\">\n   ...\n   <Property Name=\"MaxLevels\" Type=\"Edm.Int32\" DefaultValue=\"-1\">\n      <Annotation Term=\"Core.Description\" String=\"The maximum number \n          of navigation properties that can be traversed when addressing \n          the collection to insert into. A value of -1 indicates there is no \n          restriction\"/>\n   </Property>\n</ComplexType>\n\n<ComplexType Name=\"UpdateRestrictionsType\">\n   ...\n   <Property Name=\"MaxLevels\" Type=\"Edm.Int32\" DefaultValue=\"-1\">\n      <Annotation Term=\"Core.Description\" String=\"The maximum number \n          of navigation properties that can be traversed when addressing \n          the collection or entity to update. A value of -1 indicates there is no \n          restriction\"/>\n   </Property>\n</ComplexType>\n\n<ComplexType Name=\"DeleteRestrictionsType\">\n   ...\n   <Property Name=\"MaxLevels\" Type=\"Edm.Int32\" DefaultValue=\"-1\">\n     <Annotation Term=\"Core.Description\" String=\"The maximum number of \n          navigation properties that can be traversed when addressing the \n          collection to delete from or the entity to delete. A value of -1 \n          indicates there is no restriction\"/>\n   </Property>\n</ComplexType>\n\n\nImported from [ODATA-760](https://issues.oasis-open.org/browse/ODATA-760)",
    "labels": [
      "Vocabularies",
      "V4.01_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "6.2.3 Custom Aggregates: unprecise formulation",
    "body": "Paragraph 5, sentence 2 does not match the term definition\n\n### Proposal\n\nChange sentence from\n\nIn this case, the value of the Type property MUST have the same value as the Type attribute of the declared property.\n\nto\n\nIn this case, the value of the annotation MUST have the same value as the Type attribute of the declared property. \n\nApplied: https://www.oasis-open.org/committees/document.php?document_id=56041&wg_abbrev=odata\n\nImported from [ODATA-759](https://issues.oasis-open.org/browse/ODATA-759)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example 81: wrong parameter style",
    "body": "The function import call in Example 81 still uses the V2/V3 parameter style:\n\nhttp://host/service/ProductsByColor?colors=[\"red\",\"green\"]\n\n### Proposal\n\nChange to\n\nhttp://host/service/ProductsByColors(colors=@c)?@c=[\"red\",\"green\"]\n\nImported from [ODATA-758](https://issues.oasis-open.org/browse/ODATA-758)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add an OData specific header If-Metadata-Match",
    "body": "We should discuss adding an OData specific header (such as If-Metadata-Match) that can be used to conditionally control response/requests based on the Metadata ETag.  Two examples:\n\n1) Only perform a POST if the metadata for the inserted entity type has not changed.\n\n2) Only return a delta response if the metadata has not changed.\n\n### Proposal\n\nClose without action as this is partially covered by [ODATA-928](https://issues.oasis-open.org/browse/ODATA-928)\n\nImported from [ODATA-757](https://issues.oasis-open.org/browse/ODATA-757)",
    "labels": [
      "Protocol",
      "V4.01_WD01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Clarify when odata.metadataEtag will be returned",
    "body": "In the JSON format doc, section 4.5.2, there is this partial statement about odata.metadataEtag:\n\n\"The odata.metadataEtag annotation MAY appear in a response in order to specify...\"\n\nThe \"MAY\" in this statement needs to be clarified so it is clear when the metadata ETag will be returned.\n\n### Proposal\n\nIf an ETag is returned when requesting the metadata document, then the service SHOULD set the odata.metadataEtag annotation to the metadata document's ETag in all responses when using odata.metadata=minimal or full.  If no ETag is returned when requesting the metadata document, then the service SHOULD NOT set the odata.metadataEtag annotation in any responses.\n\nImported from [ODATA-756](https://issues.oasis-open.org/browse/ODATA-756)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Construction rule for canonical URL is incomplete",
    "body": "JSON Format 4.5.7 allows omitting the odata.id if it is identical to the canonical URL of the entity.\n\nURL Conventions 4.3.1 defines how the canonical URL is constructed BUT does not specify how the key predicate is to be constructed canonically.\n\nABNF allows \"synonyms\" for the key predicate\n- for a single key property the key predicate may contain or omit the key property name\n- for multiple key properties no order is required for the key properties\n\nAs a consequence a client cannot know how to construct the canonical URL from the entity set and key properties.\n\n### Proposal\n\nFor single-part keys the canonical key predicate does not contain the key property name.\n\nFor multi-part keys the canonical key predicate lists the key properties in the order they appear in the CSDL.\n\nFix JSON Schema so that there is an ordering of key properties (i.e., through an array of key/value pairs).\n\nImported from [ODATA-755](https://issues.oasis-open.org/browse/ODATA-755)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify that numeric enum values are serialized as strings",
    "body": "Section 7.1 states that\n\n    Values of type enumValue are represented as JSON strings using the\n    enumerationMember, defined in [OData-ABNF], where available.\n\nUnfortunately it does not state explicitly how the numeric alternative values for enumeration members are to be serialized.\n\nThe original intent stated in https://issues.oasis-open.org/browse/[ODATA-96](https://issues.oasis-open.org/browse/ODATA-96) and the referenced revised proposal https://www.oasis-open.org/apps/org/workgroup/odata/download.php/47997/Supporting%20Enumeration%20Types%20in%20OData.docx was to \n\n    support the alternate representation of an enumeration value as the\n    underlying integer value as a string.\n\nwith an explicit example for JSON\n\n    \"color\":\"32\"\n\n\n### Proposal\n\nAdd example for numeric value to section 7.1\n\nRephrase sentence to\n\n    Enumeration values are represented as JSON strings whose content satisfies the rule\n    enumValue in [OData-ABNF]. \n    The preferred representation is the enumerationMember. If no enumerationMember (or\n    combination of enumerationMembers) is available, the enumMemberValue may used.\n\nStrengthen wording throughout that the numeric value should only be used if there is no string equivalent, both in payloads and in urls.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55612/odata-json-format-v4.0-wd08-2015-05-07.docx\n\nImported from [ODATA-754](https://issues.oasis-open.org/browse/ODATA-754)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Minor typo in references to bound function calls",
    "body": "The second bullet in section 4.5.2 of [URL] references the following rules in [ABNF]:\nboundComplexFunctionCall, boundComplexColFunctionCall, boundEntityFunctionCall, boundEntityColFunctionCall, boundPrimitiveFunctionCall and boundPrimitiveColFunctionCall \n\nHowever, the actual rules in [ABNF] abbreviate \"Function\" as \"Func\":\nboundComplexFuncCall, boundComplexColFuncCall, boundEntityFuncCall, boundEntityColFunctionCall, boundPrimitiveFuncCall and boundPrimitiveColFuncCall \n\nNote that other functions in [ABNF] spell out \"Function\", as in:\ncomplexFunctionImportCall, complexColFunctionImportCall, entityFunctionImportCall, entityColFunctionImportCall, primitiveFunctionImportCall, and primitiveColFunctionImportCall \n\nSo we could change the [ABNF] to consistently spell out \"Function\" or [URL] to use the abbreviations already in [ABNF].\n\n### Proposal\n\nConsistently spell out \"Function\" in [ABNF].\n\nImported from [ODATA-753](https://issues.oasis-open.org/browse/ODATA-753)",
    "labels": [
      "ABNF",
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Bug in example 47",
    "body": "In example 47 the duration value format is wrong:\n<Annotation Term=\"org.example.task.duration\">\n  <Duration>P11D23H59M59.999999999999S</Duration>\n</Annotation>\nWe missed the 'T'.\n\n### Proposal\n\nCorrect example 47 to\n<Annotation Term=\"org.example.task.duration\">\n  <Duration>P11DT23H59M59.999999999999S</Duration>\n</Annotation>\n\nImported from [ODATA-752](https://issues.oasis-open.org/browse/ODATA-752)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarification of Edm.NavigationPropertyPath and Edm.PropertyPath",
    "body": "In https://issues.oasis-open.org/browse/[ODATA-517](https://issues.oasis-open.org/browse/ODATA-517) we allowed NavigationPropertyPath and PropertyPath expressions to end in annotations of appropriate type. But the current spec text needs a minor clarification. See proposal.\n\n### Proposal\n\nChange in 14.5.13 the sentence \"In contrast to the edm:Path expression, the value of the edm:PropertyPath expression is the path itself, not the value of the property identified by the path.\" to \"In contrast to the edm:Path expression, the value of the edm:PropertyPath expression is the path itself, not the value of the property or the value of the term cast identified by the path.\"\nChange in 14.5.11 \"In contrast to the edm:Path expression, the value of the edm:NavigationPropertyPath expression is the path itself, not the target instance(s) of the navigation property identified by the path.\" to \"In contrast to the edm:Path expression, the value of the edm:NavigationPropertyPath expression is the path itself, not the instance(s) identified by the path.\"\n\nImported from [ODATA-751](https://issues.oasis-open.org/browse/ODATA-751)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Explicitly mention the @ sign in instance annotations",
    "body": "Chapters 18 and 20 don't explicitly mention the @ sign in annotations.\n\n### Proposal\n\nChapter 18, second paragraph: change\n    Annotations are name/value pairs that have a dot (.) as part of the name\nto\n    Annotations are name/value pairs that have an at (@) and a dot (.) as part of the name\n\nChapter 20, first sentence: change\n    Implementations can add custom annotations of the form namespace.termname or property@namespace.termname \nto\n    Implementations can add custom annotations of the form @namespace.termname or property@namespace.termname \n\nImported from [ODATA-750](https://issues.oasis-open.org/browse/ODATA-750)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "What should service return when attempting to related two entities that are already related?",
    "body": "OData v4 protocol discusses how to add to the reference collection in a navigation property here:\n\n11.4.6.1 Add a Reference to a Collection-Valued Navigation Property\n\n“A successful POST request to a navigation property's references collection adds a relationship to an existing entity. The request body MUST contain a single entity reference that identifies the entity to be added. See the appropriate format document for details.\nOn successful completion, the response MUST be 204 No Content and contain an empty body.”\n\nIt does not discuss what should happen if that reference already exists.  Should this succeed as a no-op or should the service throw an error saying the record already exists?  \n\n\n### Proposal\n\nSince the end result is the desired state, I would propose the service return 204 No Content.\n\nImported from [ODATA-749](https://issues.oasis-open.org/browse/ODATA-749)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 4.5.4: odata.count needs to be allowed for all collections",
    "body": "Section 4.5.4 restricts the odata.count annotation to collections of entities or entity references.\n\nPart 2: URL Conventions allows the system query option $count for arbitrary collections.\n\n### Proposal\n\nRemove the restriction to collections of entities and entity references as it contradicts the Core specification.\n\nImported from [ODATA-748](https://issues.oasis-open.org/browse/ODATA-748)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow IEEE 754 constants [-]INF and NaN also for Edm.Decimal",
    "body": "Just as for IEEE 754 floating-point numbers, calculations of Edm.Decimal values also can lead to results that can only be represented by constants for \"Not a Number\" or \"(negative) Infinity\".\n\n### Proposal\n\nModify the related ABNF construction rules to allow nanInfinity also for decimalValue:\n\ndecimalValue = [SIGN] 1*DIGIT [\".\" 1*DIGIT] / nanInfinity\n\ndoubleValue = decimalValue [ \"e\" [SIGN] 1*DIGIT ] ; IEEE 754 binary64 floating-point number (15-17 decimal digits)\nsingleValue = doubleValue                         ; IEEE 754 binary32 floating-point number (6-9 decimal digits)\nnanInfinity = 'NaN' / '-INF' / 'INF'\n\n\n\n\nImported from [ODATA-747](https://issues.oasis-open.org/browse/ODATA-747)",
    "labels": [
      "ABNF",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.01_WD01",
      "duplicate"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "12.2.3: IsComposable - clarify what is allowed even if set to false",
    "body": "Section 12.2.3 states that\n\n\"A composable function can be invoked with additional path segments or system query options appended to the path that identifies the composable function as appropriate for the type returned by the composable function.\"\n\nUnfortunately it doesn't state which path segments and system query options can be used even if the function is not composable.\n\nThe rules for the path segments /$value and /$count in Part 2, sections 4.7 and 4.8, and for system query options in Part 2, section 5.1, only take the response type into account, so these should also apply to non-composable functions.\n\n### Proposal\n\nClarify wording that IsComposable restricts further query refinement through segments, key lookup, or query string options.\n\nImported from [ODATA-746](https://issues.oasis-open.org/browse/ODATA-746)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Sections 4.5.5, 7.3, and 7.4: is odata.nextLink allowed for all collections?",
    "body": "Section 4.5.5 restricts the odata.nextLink to collections of entities and entity references.\nSections 7.3 and 7.4 show examples of collections of primitive and complex values together with a nextLink.\nPart 1: Protocol, section 11.2.5.7 Server-Driven Paging does not state any restrictions and allows the next link for all partial sets of items.\n\n### Proposal\n\nRemove the restriction to collections of entities and entity references in sectio n 4.5.5 as it contradicts other parts of the specification.\n\nImported from [ODATA-745](https://issues.oasis-open.org/browse/ODATA-745)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.2.3: representation of null for single-valued primitive properties",
    "body": "Section 11.2.3 states that \n\n\"If the property is single-valued and has the null value, the service responds with 204 No Content.\"\n\nThis is understandable for complex properties, but somewhat odd for primitive properties as the obvious representation for a null value would be\n\n{\n  \"@odata.context\":\"$metadata#SomeThings(1)/SomeProperty\",\n  \"value\":null\n}\n\nThe benefit of this representation is that it may contain instance annotations for the property.\n\n### Proposal\n\nRestrict 204 No Content to complex properties where we don't have a canonical representation for the null instance.\n\nImported from [ODATA-744](https://issues.oasis-open.org/browse/ODATA-744)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA03",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Restructure Part 3: CSDL into CSDL Core, CSDL XML, and CSDL JSON",
    "body": "Split the CSDL document in a \"Conceptual Model\" part and an \"XML representation for CSDL\" part, keeping \"Protocol, URL, and Conceptual Model\" as Core specs and having all payload format specs (XML/Atom Data, XML CSDL, JSON Data, JSON CSDL) separately\n\n### Proposal\n\nFor CSD01:\nUpdate [OData-CSDL] normative reference to be to CSDL-XML.\n\nFor CSD02:\nFormat-independent draft: https://www.oasis-open.org/committees/download.php/59121/odata-v4.01-wd01-part3-csdl-2016-10-12.docx\n\nPure format spec draft (chapters 1 to 11): https://www.oasis-open.org/committees/download.php/59177/odata-csdl-xml-v4.01-wd01-min.docx\n\nImported from [ODATA-743](https://issues.oasis-open.org/browse/ODATA-743)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.01_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Usage of domain contoso.com and term name contoso in examples",
    "body": "The domain contoso.com is owned by Microsoft. Should we keep the references? \n\nIn Part 1 Protocol we use it in example 41\nhttp://contoso.com/HR/Employees?$expand=Model.Manager/DirectReports($levels=4) \nThis is a left over, because in most other places we changed to a neutral URL. Here it should be \nhttp://host/service/Employees?$expand=Model.Manager/DirectReports($levels=4) \n\nIn Part 1 Protocol we use it in example 14\nhttp://host/service/Contoso\nhttp://host/service/$metadata#Contoso\nHere we could change it to \nhttp://host/service/Me\nhttp://host/service/$metadata#Me\n\netc..\n\n\n### Proposal\n\nRemove leftover references to contoso.com.\n\nImported from [ODATA-742](https://issues.oasis-open.org/browse/ODATA-742)",
    "labels": [
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Mismatch between explanatory text and URL in example 96",
    "body": "Example 96 reads: all employees with their manager, manager's manager, and manager's manager's manager\n\nhttp://host/service/Employees?$expand=Model.Manager/DirectReports($levels=3)\n\nIn Part 1 Protocol we use essentialy the same Request with the correct explanation. \nExample 41: return each employee from the Employees entity set and, for each employee that is a manager, return all direct reports, recursively to four levels\n\nhttp://contoso.com/HR/Employees?$expand=Model.Manager/DirectReports($levels=4)\n\nWe can either change the text of example 96 to:\nReturn each employee from the Employees entity set and, for each employee that is a manager, return all direct reports, recursively to three levels\n\nOR \nChange the URL of example 96 to\nhttp://host/service/Employees?$expand=ReportsTo($levels=3)\n\n### Proposal\n\nChange the URL of example 96 to\nhttp://host/service/Employees?$expand=ReportsTo($levels=3)\n\n\nImported from [ODATA-741](https://issues.oasis-open.org/browse/ODATA-741)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Let's update the GeoJSON reference (again)",
    "body": "The GeoJSON internet draft is a \"living\" document and now available as draft-04\n\n### Proposal\n\nReplace the existing reference to GeoJSON with the content:\n\n[GeoJSON] Howard Butler, Martin Daly, Alan Doyle, Sean Gillies, Tim Schaub and Stefan Drees, \"The GeoJSON Format\" draft-butler-geojson-04, 05 August 2014\nURL=http://tools.ietf.org/html/draft-butler-geojson-04\n\nImported from [ODATA-740](https://issues.oasis-open.org/browse/ODATA-740)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow default values for function and action parameters",
    "body": "In SQL, function and stored procedure parameters can have default values (used when no value is specified for the parameter).  We should consider allowing action and function parameters to have default values as well.\n\nImported from [ODATA-739](https://issues.oasis-open.org/browse/ODATA-739)",
    "labels": [
      "CSDL JSON",
      "CSDL XML",
      "V4.02",
      "duplicate"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Repair broken bookmark for [ODATA-ABNF]",
    "body": "A broken bookmark for the normative reference [OData-ABNF] leads to garbage text at three occurrences of hyperlinks to this reference\n\nImported from [ODATA-738](https://issues.oasis-open.org/browse/ODATA-738)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Repair broken bookmark for Boolean",
    "body": "A broken bookmark for section Boolean leads to garbage text being inserted at 20+ occurrences of the word Boolean as a hyperlink to that section.\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-737](https://issues.oasis-open.org/browse/ODATA-737)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example 79: double quote missing in value of \"Partner\"",
    "body": "All values of \"Partner\" are missing a double quote after Name\n\n\"Partner\":{ \"Name:\"Product\" }\n\nshould be\n\n\"Partner\":{ \"Name\":\"Product\" }\n\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-736](https://issues.oasis-open.org/browse/ODATA-736)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Enhance the CSDL for instance annotations",
    "body": "There are two parts to this issue:\n\n1) The AppliesTo attribute of edm:Term can only be used to refer to metadata-based annotations.  It would be desirable to enhance this so that it can also be used for instance annotations.  I discussed this with Ralf, and he suggested one approach would be to update AppliesTo to also allow terms like:\n\nTypeInstance, CollectionInstance, EntityTypeInstance, ReferenceInstance, etc. or even just Instance\n\n2) There is currently no way to include in the metadata document what instance annotations can be expected for particular types.  We should also allow this information in the metadata document.\n\n### Proposal\n\nConsensus in 2016-7-21 was to close with no action (see comments), but we wanted to follow up with Matt, who was not on the call, to make sure he didn't have a particular use case that required this additional information.\n\nImported from [ODATA-735](https://issues.oasis-open.org/browse/ODATA-735)",
    "labels": [
      "CSDL XML",
      "V4.01_WD01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Unicode Facet is inadequate",
    "body": "The Unicode facet appears to be inadequate to handle all possible character sets.  The facet is set to true for unicode character sets and false for ASCII.  The problem is that there exists character sets (such as windows-1252) that is neither unicode nor ASCII.\n\nIn addition, we should also clarify the meaning of the facet in terms of what it applies to.  Does it apply to the character set that is used when the string is on the wire, or the character set in the underlying data store?  My understanding is that it is the character set of the underlying data store, but others may have a different understanding.\n\n### Proposal\n\nServices return TRUE if strings support characters outside of the ASCII character set and FALSE if only characters within the ASCII set are supported\n\nServices can return a 500 error if they receive a value that cannot be persisted.\n\nApplied:\nhttps://www.oasis-open.org/committees/download.php/55611/odata-v4.0-wd08-part3-csdl-2015-05-07.docx\n\n\nImported from [ODATA-734](https://issues.oasis-open.org/browse/ODATA-734)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify handling of cycles in Extends for EntityContainers",
    "body": "We do not explicitly forbid cycles in the Extends attribute, i.e. service A extends service B which extends service A.\n\nWhich does not seem to be a problem: Extends processing just has to stop when a container is reached that has already been processed because there's nothing new to add to the initial container. In the A extends B extends A example both services will publish the same entity sets etc.\n\n### Proposal\n\nServices should not introduce cycles in Extends. Clients must be prepared to process cycles in Extends.\n\nImported from [ODATA-733](https://issues.oasis-open.org/browse/ODATA-733)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add enumeration member \"Write\" to \"Permission\" type",
    "body": "We designed the Permission enumeration type in the Core vocabulary in a way that allows us to add a \"Write\" member for write-only properties. Now I have a use case for it: the \"Password\" property of a \"User\" entity type.\n\n### Proposal\n\nEnhance the definition of Permission by adding a Write member\n\n<EnumType Name=\"Permission\" IsFlags=\"true\">\n    <Member Name=\"None\" Value=\"0\"/>\n    <Member Name=\"Read\" Value=\"1\"/>\n    <Member Name=\"Write\" Value=\"2\"/>\n    <Member Name=\"ReadWrite\" Value=\"3\"/>\n</EnumType>\n\nImported from [ODATA-732](https://issues.oasis-open.org/browse/ODATA-732)",
    "labels": [
      "Vocabularies",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Explicitly state that JSON service documents may contain annotations",
    "body": "Any JSON object and name-value pair can be annotated, including the service document.\n\n### Proposal\n\nAny JSON object and name-value pair can be annotated, including the service document. Dynamic properties are not allowed in the service document.\n\nImported from [ODATA-731](https://issues.oasis-open.org/browse/ODATA-731)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Missing AT in rule for annotations in JSON",
    "body": "When applying [ODATA-520](https://issues.oasis-open.org/browse/ODATA-520) the ABNF rule for JSON objects in URLs wasn't adapted. Annotations MUST now start with an AT symbol, either plain or percent-encoded\n\n### Proposal\n\nChange line 619 from\n\nannotationInUri = quotation-mark namespace \".\" termName quotation-mark\n\nto\n\nannotationInUri = quotation-mark AT namespace \".\" termName quotation-mark\n\n\nImported from [ODATA-729](https://issues.oasis-open.org/browse/ODATA-729)",
    "labels": [
      "ABNF",
      "V4.0_ERRATA02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "A recursive hierarchy annotation may also contain a navigation property to the parent node",
    "body": "Consider a client processing entities according to their hierarchical structure imposed by the given hierarchy annotation. If the client wants to filter this entity set on some other property not related to the hierarchy, s/he wants to get all tree segments from the matching entities upwards to the root node. If the recursive hierarchy would also include a \"parent\" navigation property, this could be accomplished with a single request:\nGET Set?$filter=dataProp eq someValue&$select=nodeId,parentNodeId&$expand=parent($levels='max')\nIn order to let clients detect the availability of such navigations, the existing RecursiveHierarchy term needs to be extended.\n\n\n### Proposal\n\nExtend the RecursiveHierarchy term by a property ParentNavigationProperty of type Edm.NavigationPropertyPath. Added element surrounded by *:\n      <Term Name=\"RecursiveHierarchy\" Type=\"Aggregation.RecursiveHierarchyType\" AppliesTo=\"EntityType ComplexType\">\n        <Annotation Term=\"Core.Description\" String=\"Defines a recursive hierarchy.\" />\n      </Term>\n\n      <ComplexType Name=\"RecursiveHierarchyType\">\n        <Property Name=\"NodeProperty\" Type=\"Edm.PropertyPath\" Nullable=\"false\">\n          <Annotation Term=\"Core.Description\" String=\"Property holding the hierarchy node value\" />\n        </Property>\n        <Property Name=\"ParentNodeProperty\" Type=\"Edm.PropertyPath\" Nullable=\"false\">\n          <Annotation Term=\"Core.Description\" String=\"Property holding the value of the parent node\" />\n        </Property>\n        <Property Name=\"HierarchyLevelProperty\" Type=\"Edm.PropertyPath\" Nullable=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"Property holding the hierarchy level of the node\" />\n        </Property>\n        *<Property Name=\"ParentNavigationProperty\" Type=\"Edm.NavigationPropertyPath\" Nullable=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"Property for navigating to the parent node\" />\n        </Property>*\n        <Property Name=\"IsLeafProperty\" Type=\"Edm.PropertyPath\" Nullable=\"true\">\n          <Annotation Term=\"Core.RequiresType\" String=\"Edm.Boolean\" />\n          <Annotation Term=\"Core.Description\" String=\"Property indicating whether the node is a leaf of the hierarchy\" />\n        </Property>\n      </ComplexType>\n\nAmmendments: \n-Remove the term property \"ParentNodeProperty\"\n-Make the ParentNavigationProperty required by changing the Nullable property to false.\n\nApplied: https://www.oasis-open.org/committees/document.php?document_id=56041&wg_abbrev=odata\n\nImported from [ODATA-728](https://issues.oasis-open.org/browse/ODATA-728)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify the meaning of annotation values used for hierarchy terms",
    "body": "The definition of the properties of term RecursiveHierarchy in section 6.3.2 should include statements for important edge cases.\n\nAlso \"hierarchy level\" has different meanings for different analytical engines, so the name DistanceFromRootProperty is better than HierarchyLevelProperty\n\n### Proposal\n\nAdd statements surrounded by *:\n- The ParentNodeProperty contains the path to the identifier of the parent node. *For the root node of the hierarchy, the parent node identifier is null.*\n\n- The optional *DistanceFromRootProperty contains the path to a property that contains the number of edges between the node and the root node.*\n\nRemove:\nHierarchyLevelProperty contains the path to a property *with an integer data type* that contains the level of the node in the hierarchy.\n\nReplace: \n\"HierarchyLevelProperty\" by \"DistanceFromRootProperty\"\n\n\nApplied: https://www.oasis-open.org/committees/document.php?document_id=56041&wg_abbrev=odata\n\nImported from [ODATA-727](https://issues.oasis-open.org/browse/ODATA-727)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Describe the data model used for example 75",
    "body": "Example 75 uses a model that has not been introduced.\n\n\n### Proposal\n\nReplace example description with \n\nExample 75: assuming the data model includes a sales order entity set with related sets for order items and customers, the base set as well as the related items can be filtered before aggregation\n\nApplied: https://www.oasis-open.org/committees/document.php?document_id=56041&wg_abbrev=odata\n\nImported from [ODATA-726](https://issues.oasis-open.org/browse/ODATA-726)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Missing navigation properties in diagram in section 2.2",
    "body": "The diagram does not include all navigation properties used in sample OData requests throughout the document.\n\n\n### Proposal\n\nAdd the missing navigation properties to the diagram:\nNavigation property “Sales” in “Product” pointing to “Sales”\nNavigation property “Sales” in “Customer” pointing to “Sales”\nNavigation property “Products” in “Category” pointing to “Product”\n\n\nApplied: https://www.oasis-open.org/committees/document.php?document_id=56041&wg_abbrev=odata\n\nImported from [ODATA-725](https://issues.oasis-open.org/browse/ODATA-725)",
    "labels": [
      "Data Aggregation",
      "V4.0_CSD03"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example 39: missing comma before \"innererror\"",
    "body": "\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-724](https://issues.oasis-open.org/browse/ODATA-724)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow bound functions after stream properties in expressions",
    "body": "We allow arbitrary property resource paths to be followed by bound actions and functions, but forgot to allow bound function segments in query expressions in the ABNF.\n\n### Proposal\n\nChange last line of rule propertyPathExpr to match case for primitiveProperty\n\npropertyPathExpr = ( entityColNavigationProperty [ collectionNavigationExpr ] \n                   / entityNavigationProperty    [ singleNavigationExpr ] \n                   / complexColProperty          [ collectionPathExpr ]\n                   / complexProperty             [ complexPathExpr ] \n                   / primitiveColProperty        [ collectionPathExpr ]\n                   / primitiveProperty           [ singlePathExpr ]\n+                  / streamProperty              [ singlePathExpr ]\n-                  / streamProperty\n                   )\n\n\nImported from [ODATA-723](https://issues.oasis-open.org/browse/ODATA-723)",
    "labels": [
      "ABNF",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 7.1.5: rephrase last sentence",
    "body": "\n\n### Proposal\n\nLast sentence: replace \"navigation property\" with \"entity\" from\n\n    This may lead to problems for clients if the contained navigation property can also be reached via a non-containment navigation path.\n\nto\n\n    This may lead to problems for clients if the contained entity can also be reached via a non-containment navigation path.\n\nImported from [ODATA-722](https://issues.oasis-open.org/browse/ODATA-722)",
    "labels": [
      "CSDL XML",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Specify DELETE for a complex property",
    "body": "Section 11.4.9 specifies requests to property URLs but omits DELETE for complex values\n\n### Proposal\n\n1) Section 11.4.9.2 Set a Value to Null\nChange 1st sentence, 11th word from \"primitive\" to \"structural\":\n\n    A successful DELETE request to the edit URL for a primitive property, \n    or to the edit URL of the raw value of a primitive property,\n    sets the property to null.\n\nto\n\n    A successful DELETE request to the edit URL for a structural property,\n    or to the edit URL of the raw value of a primitive property,\n    sets the property to null.\n\n\n2) Change last sentence from\n\n    Updating a Primitive Property with a null value also sets the property to null.\n\nto\n\n    Updating a primitive property or a complex property with a null value also sets the property to null.\n\n(\"complex property\" hyperlinks to section 11.4.9.3)\n\n\n3) Change title of section 11.4.9.3, last word from \n\n    11.4.9.3 Update a Complex Type\n\nto\n\n    11.4.9.3 Update a Complex Property\n\n\nImported from [ODATA-721](https://issues.oasis-open.org/browse/ODATA-721)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Fix rule for hasExpr",
    "body": "The current ABNF rule for hasExpr reads as follows:\n    hasExpr = RWS 'has' RWS commonExpr\nThis is a bit liberal, as we only allow enum values to follow the \"has\" operator. \n\n\n\n\n### Proposal\n\nchange the hasExpr in the ABNF to:\n  hasExpr = RWS 'has' RWS enum\n\nImported from [ODATA-720](https://issues.oasis-open.org/browse/ODATA-720)",
    "labels": [
      "ABNF",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "5.1.2: Add example for $expand=Items/$count",
    "body": "We allow \"expanding\" only the count of related entities but do not give an example\n\n### Proposal\n\nAdd example after Example 91:\n\nExample 92: all categories and for each category the number of all related products\n\nhttp://host/service/Categories?$expand=Products/$count\n\n\nImported from [ODATA-718](https://issues.oasis-open.org/browse/ODATA-718)",
    "labels": [
      "URL Conventions",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify PATCH/PUT/DELETE Property/$value",
    "body": "Currently only GET Property/$value is specified, but not PATCH, PUT or DELETE to these \"raw value\" URLs.\n\n### Proposal\n\nDefine PUT, DELETE to /$value, semantics is identical as for the property URL \nPATCH remains undefined on single properties with or without /$value\n\nImported from [ODATA-717](https://issues.oasis-open.org/browse/ODATA-717)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Upsert does not work with OptimisticConcurrency",
    "body": "Upsert allows constructing a resource path and providing a desired after-image. If the request is executed successfully, the identified entity will exist and look somewhat similar to the desired after-image.\n\nUnfortunately this does not combine with optimistic concurrency.\n\nIf an operation on an entity requires an ETag, then services MUST refuse requests without an If-Match header.\n\nIf the client doesn't know (or care) whether the entity already exists, it cannot produce a valid If-Match header, because even the wildcard * does not work: HTTP defines that if the field-value is \"*\", the condition is false if the origin server does not have a current representation for the target resource, i.e. it is false if the entity does not yet exist.\n\nI don't see a way to make upsert work in combination with ETags. \n\n### Proposal\n\nCall out that If-Match only makes sense for operations on existing entities (update, delete). Doing a PUT/PATCH with no If-Match fails if the entity requires an ETag and already exists. Doing a PUT/PATCH with no If-Match can still be processed as an insert if the entity does not exist.\n\nImported from [ODATA-716](https://issues.oasis-open.org/browse/ODATA-716)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "2.3.3: incomplete sentence for odata.continue-on-error",
    "body": "\n\n### Proposal\n\n2nd bullet: replace period with comma\n3rd bullet: complete sentence for odata.continue-on-error\nLast bullet: replace \", and\" with a period\n\nImported from [ODATA-715](https://issues.oasis-open.org/browse/ODATA-715)",
    "labels": [
      "New in OData",
      "CN02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "11.7.3 and 11.7.4: replace \"query operation\" with \"operation\"",
    "body": "This is a leftover from times where batch requests could contain only query operations and change sets. Now we also allow modification operations outside of change sets.\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-713](https://issues.oasis-open.org/browse/ODATA-713)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "In chapter 10 we missed to spell out various Context URL templates.",
    "body": "For each sub-chapter of chapter 10 the following list contains ALL context URL templates. The new and currently missing ones are marked with \"is missing\":\n\n10.2 Collection of Entities\nContext URL template:\n{context-url}#{entity-set}\n{context-url}#Collection({type-name})                       is missing\n\n10.3 Entity\nContext URL template:\n{context-url}#{entity-set}/$entity\n{context-url}#{type-name}                                   is missing\n\n10.7 Collection of Projected Entities\nContext URL templates:\n{context-url}#{entity-set}{/type-name}{select-list}\n{context-url}#Collection({type-name}){select-list}           is missing\n\n10.8 Projected Entity\nContext URL templates:\n{context-url}#{entity-set}{/type-name}{select-list}/$entity\n{context-url}#{singleton}{select-list}\n{context-url}#{type-name}{select-list}                       is missing\n\n10.9 Collection of Projected Expanded Entities\nContext URL template:\n{context-url}#{entity-set}{/type-name}{select-list}\n{context-url}#Collection({type-name}){select-list}           is missing\n\n10.10 Projected Expanded Entity\nContext URL template:\n{context-url}#{entity-set}{/type-name}{select-list}/$entity\n{context-url}#{singleton}{select-list}\n{context-url}#{type-name}{select-list}                       is missing\n\n10.13 Property Value\nContext URL template:\n{context-url}#{entity}/{property-path}\nis sufficient if we call out that this is for canonical URLs and 10.14 and 10.15 cover the non-canonical case\n\n10.16 Operation Result\nContext URL templates:\n{context-url}#{entity-set}{/type-name}{select-list}\n{context-url}#Collection({type-name}){select-list}            is missing\n{context-url}#{entity-set}{/type-name}{select-list}/$entity\n{context-url}#{type-name}{select-list}                        is missing\n{context-url}#{entity}/{property-path}\n{context-url}#{type-name}/{property-path}                     is missing\n{context-url}#Collection({type-name})\n{context-url}#{type-name}\n\n\n### Proposal\n\nInclude the missing Context URL Templates as shown in the description.\nExtend examples.\nAdapt ABNF.\n\nImported from [ODATA-712](https://issues.oasis-open.org/browse/ODATA-712)",
    "labels": [
      "ABNF",
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Misleading description of {type-name} in chapter 10",
    "body": "in chapter 10 we stated that\n\"{type-name} is the qualified name of a complex type or entity type\".\nBut {type-name} can be any type as defined in the ABNF and as used in 10.14 and 10.15\n\n### Proposal\n\nExtend description.\n\nImported from [ODATA-711](https://issues.oasis-open.org/browse/ODATA-711)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Unclear description in chapter 10.14 an 10.15",
    "body": "Describe in which cases this types of context URL is needed and adapt examples.\n\nImported from [ODATA-710](https://issues.oasis-open.org/browse/ODATA-710)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "FunctionImport in example 25, 26, 27: parentheses missing",
    "body": "\n\n### Proposal\n\nAdd parentheses.\n\nImported from [ODATA-709](https://issues.oasis-open.org/browse/ODATA-709)",
    "labels": [
      "Protocol",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify inclusion of @odata.id if key fields are not selected",
    "body": "In minimal metadata the service omits metadata that can be derived by the client from the payload based on convention, which implies that metadata must be included if it cannot be derived from the payload based on convention. However, in the rules for including @odata.id we don't explicitly mention that the id, which can only be computed if key properties are included in the payload, is thus returned if any key properties are omitted from the response.\n\nThis is bad, because if services don't realize they need to include the key fields in this case it will cause clients to be unable to track entities (for example, in doing a merge). Even worse, in delta responses the payload for an updated entity is only required to include changed properties, so if the keys haven't changed (which, by definition, they can't) and the service omits them, the client has no way to correlate the change with the original entity. \n\nAlso, the existing rules omit the case for odata.metadata=none.\n\n### Proposal\n\nChange:\n\"The odata.id annotation MUST appear in responses if odata.metadata=full is requested or if the entity-id is not identical to the canonical URL of the entity...\"\nto:\n\"The odata.id annotation MUST appear in responses if odata.metadata=full is requested, or if odata.metadata=minimal is requested and any of the entity's key fields are omitted from the response or the entity-id is not identical to the canonical URL of the entity...\"\n\nImported from [ODATA-708](https://issues.oasis-open.org/browse/ODATA-708)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "4.5.3: Type inference for numeric values doesn't work with JSON.parse()",
    "body": "Section 4.5.3 says \n\nNumeric values have a first-class representation in JSON and do not need any additional annotations. If the value of a property is represented as a number without a dot (.), e or E embedded, the type should be interpreted as an integer value, otherwise as a decimal, double, or single value.\n\nUnfortunately this type inference does not work for clients using generic JSON parsers, e.g. JSON.parse() in JavaScript. The lines\n\nvar payload = '{ \"x\" : 1.2e4 }';\nvar parsed = JSON.parse(payload);\nconsole.log(parsed.x);\n\nwill result in 12000.\n\n\n\n### Proposal\n\nChange text to\n\n• Numeric values have a first-class representation in JSON but are not further distinguished, so they include an odata.type annotation unless their type is Double. \n\nImported from [ODATA-707](https://issues.oasis-open.org/browse/ODATA-707)",
    "labels": [
      "JSON Format",
      "V4.0_ERRATA01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  }
]