[
  {
    "title": "Overview wording suggestion",
    "body": "The opening sentence now reads: \"The OData Protocol is an application-level protocol for interacting with data via RESTful web services.\"\n\nAs a new comer that strikes me as odd because OData describes OData services with which I interact.\n\nMaking me think\"\n\nThe OData Protocol is an application-level protocol for interacting with data services via RESTful interfaces.\n\nis closer to the mark. \n\n### Proposal\n\nChange: \"The OData Protocol is an application-level protocol for interacting with data via RESTful web services.\" to:\n\nThe OData Protocol is an application-level protocol for interacting with data via RESTful interfaces.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49325/odata-meeting-38_on-20130523-minutes.html#odata-385\n\nImported from [ODATA-385](https://issues.oasis-open.org/browse/ODATA-385)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Normative text needs to be typographically distinct from examples",
    "body": "In parts 1 and 2 of CSDL, the typography for examples is used for normative text. For example, under 8.2.6.3 of part 1, it is used to report the syntax of odata.include-annotations. \n\nIn part 2, under 5.1.1.4.1 (and elsewhere), it is used to report the signatures of functions, followed by examples using the same typography. \n\nWhich confuses the issue of which is the example and which is the signature.\n\n### Proposal\n\nSyntax, grammar, signatures, etc., all of which are normative text, must have a distinct typography from examples. \n\nKey words within paragraphs use character style \"Datatype\" with courier type in the same font size as the surrounding text.\n\nExamples use paragraph style \"Code\" with 9-point courier type, grey background, and black lines above the first and below the last line.\n\nNormative \"source\" text uses paragraph style \"Source Code\" with 10-point courier type and white background. Using the same font size and background color as normative prose text should be sufficient to express that it is part of the normative specification.\n\nAdd a section \"Typographical Conventions\" as the last section of chapter 1 of each document with the text\n\n<section-content>\nKeywords defined by this specification this `monospaced` font.\n{Normative source code uses this paragraph style.}\nSome sections of this specification are illustrated with non-normative example OData requests and responses. \n(Example 1: text describing an example uses this paragraph style.)\n[Non-normative examples use this paragraph style.]\nAll examples in this document are non-normative.\nAll other text is normative unless otherwise labeled.\n</section-content>\n\nThe word in back-ticks uses the \"Datatype\" character style, the paragraph in curly braces uses \"Source Code\", the paragraph in parentheses uses \"Caption\", and the paragraph in square brackets uses \"Code\", so they look as their real counterparts in the following specification text.\n\nImported from [ODATA-384](https://issues.oasis-open.org/browse/ODATA-384)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Number all examples in all documents",
    "body": "section 1 of odata-v4.0-csprd01-part1-protocol (the first sentence) provides:\n\n****\nAll text is normative unless otherwise labeled.\n****\n\nBut, section 3 says:\n\n****\nSome sections of this specification are illustrated with non-normative example OData request and response payloads. However, the text of this specification provides the definition of conformance.\n\nAll code examples in this document are non-normative.\n****\n\nSo when I read under 8.2.6.3\n\n****\nThe following Prefer header requests that the annotation with the term name subject within the display namespace be returned if applied:\n \n    Prefer: odata.include-annotations=\"display.subject\"\n\nIn the case that the client has specified the odata.include-annotations preference in the request, the service MAY include a Preference-Applied response header containing the odata.include-annotations preference to specify the annotations that MAY have been included in the response. This value MAY differ from the annotations requested in the Prefer header of the request. \n****\n\nIs the code block \"Prefer: odata.include-annotations=\"display.subject\"\" non-normative followed by a normative interpretation of the example? \n\nThat seems risky at best if examples are truly non-normative and divorced from the normative portions of the text. \n\nOne strategy would be to label the code blocks as \"Example\" and simply have it follow normative text. And the normative text doesn't say anything about the example, they just appear as appropriate in the text. What a reader makes of them is on their watch. \n\nA partial example from 8.2.6.3:\n\nAccepting the normative text above: \"For example, the following Prefer header requests\" for the moment, it would then be followed by a typographically distinct region:\n\nExample:\n\nEx.1 Prefer header requests all annotations within a metadata document to be returned:\n    \n    Prefer: odata.include-annotations=\"*\" \n\nEx.2 Prefer header requests that no annotations are returned:\n    \n    Prefer: odata.include-annotations=\"-*\" \n\nand so on.\n\nI have inserted numbers to avoid the ambiguity of following/previous, which I will list as a separate issue.\n\n### Proposal\n\nNumber the examples, with changes in prose as necessary.\n\nUse paragraph style \"Caption\" and a new sequence number \"Example\". This automatically allows referencing the examples.\n\n\n\nImported from [ODATA-383](https://issues.oasis-open.org/browse/ODATA-383)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Conformance clauses need to refer to sections defining aspects of conformance and do so uniformly",
    "body": "Some conformance clauses in ODATA CSDL have hyperlinks to other parts of CSDL and others do not. Hyperlinks are useful but explicit references to the sections in question + hyperlinks would be better. And either way, they need to be uniform for all conformance clauses.\n\nAs an editorial nit, I would number all the sub-clauses for conformance. \n\nAnother editorial nit, I would not mix must, must not and should clauses. \n\nNeed to review for consistency, see: return 501 Not Implemented for any unsupported functionality (with a hyperlink under minimal conformance) versus 501 Not Implemented for any unsupported functionality (no hyperlink under intermediate conformance)\n\nFYI, I have not compared the content of the conformance clauses to the sections that define them for this issue. \n\n\n\n### Proposal\n\nInclude section/subsection references for each conformance clause with a hyperlink to the appropriate section/subsection.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49325/odata-meeting-38_on-20130523-minutes.html#odata-382\n\nImported from [ODATA-382](https://issues.oasis-open.org/browse/ODATA-382)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Hanging paragraphs - all current csprd01 documents",
    "body": "The current drafts have what are known as \"hanging paragraphs.\" \n\nAs an example, from odata-v4.0-csprd01-part1-protocol:\n\n****\n8 Header Fields\nOData defines semantics around the following request and response headers. Additional headers MAY be specified, but have no unique semantics defined in OData.\n\n8.1 Common Headers\nThe OData-Version and Content-Type headers are common between OData requests and responses.\n****\n\nIf I say, conform to Section 8, do I mean:\n\nAll of section 8 or do I mean only the paragraph following section 8, but not any of the following subsections?\n\nThis happens with sub-sections as well, see odata-v4.0-csprd01-part2-url-conventions:\n\n****\n5.1.1.5 Lambda Operators\nOData defines two operators that evaluate a Boolean expression on a collection. Both must be prepended with a navigation path that identifies a collection. \n\n5.1.1.5.1 any \nThe any operator applies a Boolean expression to each member of a collection and evaluates to true if and only if the expression is true for any member of the collection. As a special case the Boolean expression may be empty, in which case the any operator evaluates to true if the collection is not empty.  \n****\n\nIf I say conform to 5.1.1.5 Lambda Operators, as in \"prepend[ing]\" a navigation path that identifies a collection, do I also mean conform to all the subparagraphs that follow? Or do I mean just that part? \n\nFormally it is an ambiguous reference to have content following a section division that has sub-divisions. It isn't possible to resolve from the text along, say for a conformance clause, the meaning of the reference. Meaning different readers will assign different meanings to the reference. \n\n### Proposal\n\nBe clear, in conformance section, when we are referring just to section or include subsections\n\nAccepted: https://www.oasis-open.org/committees/download.php/49447/odata-meeting-40_on-20130606-minutes.html#odata-381\n\nImported from [ODATA-381](https://issues.oasis-open.org/browse/ODATA-381)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Insert a section in protocol (and similar in JSON and ATOM) named 'Security Considerations' (before 'Conformance')",
    "body": "We have some spurious overlaps with security considerations but are remarkably silent about it as a whole, when considereing, that we suggest opening up the silos of data. Although we rely on other protocols that handle transport and security, we should follow the role model of IETF in enforcing a security considerations section in each I-D. It should be quite cheap as we can refer to the security considerations of the underlying protocols (HTTP has some elaboratesubsections on this)\nThis started from discussions and comments on [ODATA-301](https://issues.oasis-open.org/browse/ODATA-301) but to the reporter also seems like a very natural, reasonable and \"expected\" thing to be provided by the TC and inside the work products.\n\n### Proposal\n\nInsert a section in protocol (and similar in JSON and ATOM) named \"Security Considerations\" before the conformance section. With content like: \n\"\"\"\nThe specifications that this work product consists of do raise no security issues. \n\nThis section is provided as a service to the application developers, information providers, and users of Open Data version 4.0 giving some references to starting points for securing the Open Data services as specified. Open Data is a REST-full multi-format service that depends on other services and thus inherits both sides of the coin, security enhancements and concerns alike from the latter.\n\nFor HTTP  relevant security implications please cf. the relevant sections of [[RFC2616]] (15 Security Considerations) and for the HTTP PATCH method [[RFC5789]] (5. Security Considerations) as starting points.\n\"\"\"\n\nThe last paragraph for ATOM Format work product:\n\n\"\"\"\nFor ATOM relevant security implications please cf. the relevant sections of [[RFC4287]] (8. Security Considerations), [[RFC5023]] (15. Security Considerations) and for the deleted-entry element: [[RFC6721]] (7.  Security Considerations) as starting points.\n\"\"\"\n\nWhereas the last paragraph in that section for JSON Format should read:\n\n\"\"\"\nFor JSON relevant security implications please cf. at least the relevant subsections of [[RFC4627]] (hidden inside 6. IANA Considerations) as starting point.\n\"\"\"\n\nAccepted:https://www.oasis-open.org/committees/download.php/49212/odata-meeting-37_on-20130516-minutes.html#odata-380\n\nImported from [ODATA-380](https://issues.oasis-open.org/browse/ODATA-380)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Ensure consistency and clear description in specification of $count for 'Delta Responses' (public comment c201305e00000)",
    "body": "The public comment [c201305e00000](https://lists.oasis-open.org/archives/odata-comment/201305/msg00000.html) with title \"Specification of $count for 'Delta Responses'\" challenges the consistency and clarity of the description for $count in the context of delta responses.\n\n### Proposal\n\nCount new entities, changed entities, deleted entities, related entities that were included via $expand in the original request, new links, and deleted links equally, i.e. just count the number of entries in the \"value\" array.\n\nAccepted:https://www.oasis-open.org/committees/download.php/49212/odata-meeting-37_on-20130516-minutes.html#odata-379\n\nImported from [ODATA-379](https://issues.oasis-open.org/browse/ODATA-379)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Support relative IRIs for ids in JSON",
    "body": "The id of an entity is defined to be an opaque IRI. \n\nhttp://tools.ietf.org/html/rfc3987 defines IRI-references to be relative or absolute, but ATOM (http://tools.ietf.org/html/rfc4287#page-19) explicitly disallows the relative form.\n\nIn JSON, we should support relative IRIs. \n\n### Proposal\n\nIn JSON, state that:\nServices MAY return ids relative to the metadata URL. Ids that are not relative to the metadata URL MUST be represented as an absolute-IRI as defined in http://tools.ietf.org/html/rfc3987 (in particular, they must have a scheme: prefix).\n\nIn JSON state that the metadata URL MAY be a relative URL, and that it is relative to the Content-Location header if present, and otherwise the request header.\n\nIn Atom state that xml:base MAY be a relative URL, and that it is relative to the Content-Location header if present, and otherwise the request header.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-378\n\nImported from [ODATA-378](https://issues.oasis-open.org/browse/ODATA-378)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Fix broken links in CSD01 documents ",
    "body": "See comments from TC administration: https://lists.oasis-open.org/archives/odata/201305/msg00152.html. Please verify if the fixes work by generating the PDF version (which will trigger reference resolution).\n\n### Proposal\n\nFix all broken links in all affected componenets/documents and verify by generating PDF.\n\nImported from [ODATA-377](https://issues.oasis-open.org/browse/ODATA-377)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Navigation link representation for navigation properties of complex type instances",
    "body": "Currently the JSON spec requires that the navigation link for a navigation property is only represented if the client requests odata.metadata=full or if the client explicitly selects the navigation property in $select.\n\nIt would be more accurate to state that it also gets represented if it cannot be \"computed\"\n\nWhile \"computing\" works for navigation properties of an entity type (http://host/service/Set(key)/NavProp), and even for navigation properties of single-valued complex properties ((http://host/service/Set(key)/ComplexProp/NavProp), it breaks down for navigation properties of complex-valued properties.\n\n### Proposal\n\nChange second paragraph of section 8.1 Navigation Link to\n\nThe navigation link for a navigation property is only represented if the client requests odata.metadata=full, the client explicitly selects the navigation property in $select, or the navigation link cannot be computed, e.g. if it is within a collection of complex type instances.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-376\n\nImported from [ODATA-376](https://issues.oasis-open.org/browse/ODATA-376)",
    "labels": [
      "JSON Format",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow querying collections of complex type instances similar to querying collections of entities",
    "body": "We've add navigation properties to complex types with [ODATA-244](https://issues.oasis-open.org/browse/ODATA-244) and made them into kind of \"keyless entities\", but still restrict most system query options to resource paths identifying entitites or collections of entities. \n\nWhy not treat them similarly with respect to $expand, $select, $filter, $count, $orderby, $skip and $top?\n\nThis would also simplify application of [ODATA-165](https://issues.oasis-open.org/browse/ODATA-165) as it obviates the need of introducing \"keyless entities\" as the result type of queries targeting the entity containers. Complex type instances would be more natural there.\n\n### Proposal\n\nChange second and third paragraph of 5.1 System Query Options to:\n\nResource paths identifying a single entity or complex type instance or a collection of entities or complex type instances allow $expand and $select. \n\nResource paths identifying a collection of entities or complex type instances allow $filter, $count, $orderby, $skip, and $top.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-375\n\nImported from [ODATA-375](https://issues.oasis-open.org/browse/ODATA-375)",
    "labels": [
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Returning heterogeneous types for a function call",
    "body": "It is not clear if OData enables a service to return a collection of heterogenous entity/complex types as a response to a function call. \n\nI want to return a collection of types in response to a function call but each of the items in the collection could belong to different entity types.\n\nExample:\n\n/OData.svc/GetCreatedEntities?before=xxxx-xx-xx&after=xxxx-xx-xx\n\nhere GetCreatedEntities is a function call on my product that return a collection of entities that are Created in a given time period. Return Type is a Collection Type that could contain a Customer type, Order type etc.\n\nIs it supported in OData? \n\n### Proposal\n\nI believe that, as described by Ralf, the Edm.EntityType and Edm.ComplexType types we added in V4 address this requirement and we can close with no action.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49325/odata-meeting-38_on-20130523-minutes.html#odata-374\n\nImported from [ODATA-374](https://issues.oasis-open.org/browse/ODATA-374)",
    "labels": [
      "CSDL XML",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add boolean expressions that can be used in <edm:If>",
    "body": "<edm:If> takes a boolean expression as its first argument, but the choice here is pretty limited. For example I'm unable to compare the values of two strings, or the result of two path expressions, or test the result of an expression for \"null\"\n\n### Proposal\n\nAdd expressions \n- edm:Eq\n- edm:Ne\n- edm:Ge\n- edm:Gt\n- edm:Le\n- edm:Lt\n- edm:And\n- edm:Or\n- edm:Not\n\nedm:Not requires one child element of Boolean type\nedm:And and edm:Or require two child elements of Boolean type\nThe other expressions require two child elements of comparable type.\n\nAllow edm:If to have only two child elements if and only if it is a direct child of edm:Collection. This is needed to conditionally add elements to a collection, and using edm:Null as the third child does not convey this meaning.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-373\n\nImported from [ODATA-373](https://issues.oasis-open.org/browse/ODATA-373)",
    "labels": [
      "CSDL XML",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": " Addressing Derived Types",
    "body": "I would like to seek clarification on below scenario....\n\n Suppose, I have 3 entity types 1) VirtualSystem 2) HyperVSystem and 3) VMWareSystem. Here, VirtualSystem is the base EntityType for both HyperVSystem and VMWareSystem. Now, if I define EntityContainer having only EnitySet for VirtualSystem. Are the following URLs  correct?\n \n 1) http://host/service/VirtualSystems\n    Returns only instances of EntityType VirtualSystem\n \n 2) http://host/service/VirtualSystems/HyperVSystem\n    Returns only instances of EntityType HyperVSystem\n \n 3) http://host/service/VirtualSystems/VMWareSystem\n    Returns only instances of EntityType VMWareSystem\n \n How to get all instances of  VirtualSystem, HyperVSystem and VMWareSystem in a single query?\n \n\nImported from [ODATA-372](https://issues.oasis-open.org/browse/ODATA-372)",
    "labels": [
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clearly describe behavior of PUT for structural and navigation properties",
    "body": "Would it be fair to assume that because the section 8.5.4 uses the word \"MAY\", that if a client does not provide any bindings for navigation properties when using \"PUT\", the relationship(s) should remain unaffected?\n\nThe JSON spec section 8.5.4 states:\n\n  \"For update operations a bind operation on a collection navigation property adds additional relationships, it does not replace existing relationships.\"\n\nThe protocol spec section 11.4.3 \"Update an Entity\" states:\n\n  \"Services that support PUT MUST replace all property values with those specified in the request body. Missing properties MUST be set to their default values.\"\n\nIs that only meant to apply to structural properties (if so, perhaps we should state it explicitly)? Because otherwise, it seems to conflict with the JSON section 8.5.4.\n\n### Proposal\n\n1. Structural properties MUST be specified by the client (except for those where we want the service to use default values). \n2. Navigation properties (using \"binding\" syntax, not \"inline\" content) MAY be specified by the client. For entity (single-valued) navigation properties, this replaces the relationship. For collection-values, this adds to the relationship.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-371\n\nImported from [ODATA-371](https://issues.oasis-open.org/browse/ODATA-371)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Disallow Nullable facet for collection-valued properties",
    "body": "We already disallow the Nullable attribute for collection-valued navigation properties because we don't want to distinguish between an empty collection and a \"null\" collection.\n\nLet's do the same for properties. It's a philosophic distinction anyway. If I collect stamps and give away all of them: do I still have an empty collection, or no collection?\n\n### Proposal\n\nChange section 6.2.1 Property/@Nullable along the lines of 7.1.3 NavigationProperty/@Nullable.\n\nChange section 14.5.12 Expression edm:Record, third sentence to: For each non-nullable single-valued property of the record construct's type an edm:PropertyValue child element MUST be provided.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-370\n\nImported from [ODATA-370](https://issues.oasis-open.org/browse/ODATA-370)",
    "labels": [
      "CSDL XML",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "POST to navigation link with binding information leading to a different \"parent\" is invalid",
    "body": "In 11.5.2 we allow POSTing new entities to a navigation path.\nIn 11.5.2.1 we allow binding to existing entities.\n\nThis theoretically allows to provide contradictory information: create new product by posting to ~/Categories(1)/Products and provide binding information for ~/Categories(2).\n\n### Proposal\n\nIf binding information provided in a POST body contradicts the implicit binding information provided in the request URL, the request MUST be rejected with 400 Bad Request.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-3\n\nImported from [ODATA-369](https://issues.oasis-open.org/browse/ODATA-369)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Deep insert: if server responds with 201 Created it MUST respond with at least the expansion depth of the insert operation",
    "body": "I want to create an order with nested items and prefer to receive content.\n\nThen I also want to receive the nested items, especially if they may have been altered by the service (adapted prices, bonus items, ...)\n\n### Proposal\n\nIf the server applies the preference return=representation when responding to a deep-insert request, it MUST expand the response to at least the level that was present in the deep-insert request.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-368\n\nImported from [ODATA-368](https://issues.oasis-open.org/browse/ODATA-368)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Explicitly state that server MAY expand results beyond what's requested with $expand",
    "body": "We stated several times in discussions that servers are allowed to send \"more than requested\", and we state that explicitly for $select, but not for $expand.\n\n\n### Proposal\n\nAdd to first paragraph of 11.3.5.1 System Query Option $expand:\n\n[...] The service MUST return the specified content, and MAY choose to return additional information.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-367\n\nImported from [ODATA-367](https://issues.oasis-open.org/browse/ODATA-367)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify whether server-generated properties can be omitted in POST, even if they are not nullable",
    "body": "It is conventional to define primary key properties (and other properties such as \"creationTime\") as non-nullable.\n\nHowever if properties (such as primary keys) are server-generated, the client cannot provide an appropriate initial value in POST.\n\nThe spec appears to be silent on this issue.\n\nWhat should be done?\n\n(1) Define the properties as nullable, and require the client to pass null values on POST.\n\n(2) Define the properties as nullable, and allow the client to omit them from the payload (even for a \"complete\" entity) on POST.\n\n(3) Define the properties as non-nullable, and require the client to pass junk values on POST.\n\n(4) Define the properties as non-nullable, and allow the client to omit them from the payload (even for a \"complete\" entity) on POST.\n\nIt might help to understand what variations are supported (or \"intended\" to be supported) by OData V1-V3 in this respect, before we proceed to make a poposal for V4.\n\n\n### Proposal\n\nProtocol section \"11.5.2.2 Create Related Entities When Creating an Entity\" states\n\n\"Properties computed by the service, along with properties of related entities that are tied to key properties of the principal entity by a referential constraint, MAY be omitted from the request. If the inline representation contains a value for a computed or dependent property, the service MUST ignore that value when creating the related entity.\"\n\nSplit that statement and move the \"computed\" part to the enclosing section \"11.5.2 Create an Entity\" because it is true in general.\n\nSimplify the term StoreGeneratedPattern  in the Core vocabulary and split it into two tagging terms with more intuitive names:\n\n<Term Name=\"Computed\" Type=\"Core.Tag\" DefaultValue=\"true\" AppliesTo=\"Property\" />\n<Term Name=\"Immutable\" Type=\"Core.Tag\" DefaultValue=\"true\" AppliesTo=\"Property\" />\n\nRefer to these terms in Protocol as a means for clients to find out which properties are computed by the service.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-366\n\nImported from [ODATA-366](https://issues.oasis-open.org/browse/ODATA-366)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Rename edm:AssertType to edm:Cast and clarify behavior of edm:Cast and cast()",
    "body": "In most programming languages, an assertion is a predicate (a true-false statement) placed in a program to indicate that the developer *thinks* that the predicate is always true at that place. If the assertion is false, an assertion failure results, which typically causes execution to abort.\n\nIn contrast the dynamic expression edm:AssertType behaves different: It casts the value of the child expression to the specified type. So the name edm:Cast would express this behaviour better. We must define the behaviour if the cast fails: I propose to return the NULL value as result of dynamic expression.\n\nThe third proposal is to provide a more informative example in the specification, e.g.\n<Annotation Term=\"org.example.display.Threshold\">\n <Cast Type=\"Edm.Decimal\">\n  <Path>Average</Path>\n </Cast>\n</Annotation>\nassume Average is of type edm:String an the Term is of type edm:PrimitiveType\n\n### Proposal\n\nRename edm:AssertType to edm:Cast\n\nDefine cast rules:\n- cast primitive to string by using the literal representation used in payloads, and WKT for Geo types, fail if MaxLength is not sufficient\n- cast numeric primitives to each other with appropriate rounding, fail if integer part doesn't fit into target type\n- cast datetimeoffset, duration, or timeofday values to same type independent of precision\n- cast entities and complex type instances to derived type, fail if derived type adds non-nullable properties without default value\n- cast entities and complex type instances into arbitrary entity type or complex type by assigning values of identically named properties and casting them recursively, fail if non-nullable properties without default value remain without value\n- cast collections entry by entry\n\nIf the cast fails, the result of the cast expression is null.\n\nMake edm:Cast optional for primitive values (first three rules).\n\nProvide a more informative example, see description\n\nThe same rules apply to the cast() function in URL expressions.\n\nTo increase consistency the edm:IsType expression could be renamed to edm:IsOf as it resembles the isof() function in URL expressions.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-365\n\nImported from [ODATA-365](https://issues.oasis-open.org/browse/ODATA-365)",
    "labels": [
      "CSDL XML",
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Explicitly state that the restriction that a property MUST NOT have the same name as its containing type only applies to directly declared properties",
    "body": "Chapters 8 and 9 state that \n- Properties MUST NOT have the same name as the declaring entity type.\n- Properties MUST NOT have the same name as the declaring complex type.\n\nThis sometimes prevents using natural names for properties, e.g. \n- EntityType Employee\n- EntityType Manager inherits from Employee\n- EntityType Employee has NavigationProperty that leads to the manager\n\nThe natural name for the navigation property is Manager, but prevented by the above rule. So the navigation property has to be named \"TheManager\" or \"manager\" (using different case)\n\n\n### Proposal\n\nExplicitly state that the restriction that a property MUST NOT have the same name as its containing type only applies to directly declared properties and does not include inherited properties, and does not include the names of direct or indirect base types.\n\nAlso explain that this is a restriction \"inherited\" from C# and some C++ implementations.\n\n\n\nAccepted:https://www.oasis-open.org/committees/download.php/49212/odata-meeting-37_on-20130516-minutes.html#odata-364\n\nImported from [ODATA-364](https://issues.oasis-open.org/browse/ODATA-364)",
    "labels": [
      "CSDL XML",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "specifiying selected properties in metadataurl is broken",
    "body": "The current metadataurl pattern for specifying a subset of properties is broken for selects on expanded navigation props.\n\nWe need to know the projected properties in order to know, for example, whether missing navigation properties are omitted because they matched a convention (in which case they can be constructed on the client) or because they weren't selected (in which case they should not be constructed on the client because they may not match convention)..\nAlso, we don't want to have to have the client parse select (and nested expands, etc.)\n\n\n### Proposal\n\nDefine a new syntax for specifying selected properties; the entityset (or cast segment) may contain a parenthetical comma-separated list of selected properties. For expanded navigation properties, the expanded property has a parenthetical list of selected properties and the propertyname has a \"+\" at the end of it if $levels is specified.\n\nImported from [ODATA-363](https://issues.oasis-open.org/browse/ODATA-363)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Accept the application of 61 of the 64 issues applied in the latest work product revisions in one grouping motion",
    "body": "As we accepted the current revisions of the work products per [ODATA-356](https://issues.oasis-open.org/browse/ODATA-356) in meeting#34 on 2013-04-25 as resolved we should also \ndocument the application of the individual 61 issues that are inside these revisions.\n\nFrom 2013-03-13 to 2013-04-24 the uploaded document revisions of Atom Format, JSON Format, Protocol, URL Conentions and CSDL documented the application of the following issues in their subitter messages (ordering chronologically and grouped by the upload batches):\n\n\nAtom Format\n\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-258](https://issues.oasis-open.org/browse/ODATA-258)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-276](https://issues.oasis-open.org/browse/ODATA-276)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-68](https://issues.oasis-open.org/browse/ODATA-68)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-276](https://issues.oasis-open.org/browse/ODATA-276)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-322](https://issues.oasis-open.org/browse/ODATA-322)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-319](https://issues.oasis-open.org/browse/ODATA-319)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-315](https://issues.oasis-open.org/browse/ODATA-315)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-325](https://issues.oasis-open.org/browse/ODATA-325)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-324](https://issues.oasis-open.org/browse/ODATA-324)\n\n\nJSON Format\n\nSubmitter's message\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-102](https://issues.oasis-open.org/browse/ODATA-102)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-276](https://issues.oasis-open.org/browse/ODATA-276)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-68](https://issues.oasis-open.org/browse/ODATA-68)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-300](https://issues.oasis-open.org/browse/ODATA-300)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-307](https://issues.oasis-open.org/browse/ODATA-307)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-308](https://issues.oasis-open.org/browse/ODATA-308)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-324](https://issues.oasis-open.org/browse/ODATA-324)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-319](https://issues.oasis-open.org/browse/ODATA-319)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-315](https://issues.oasis-open.org/browse/ODATA-315)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-322](https://issues.oasis-open.org/browse/ODATA-322)\n\nCSDL\n\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-204](https://issues.oasis-open.org/browse/ODATA-204)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-244](https://issues.oasis-open.org/browse/ODATA-244)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-267](https://issues.oasis-open.org/browse/ODATA-267)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-284](https://issues.oasis-open.org/browse/ODATA-284)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-68](https://issues.oasis-open.org/browse/ODATA-68)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-124](https://issues.oasis-open.org/browse/ODATA-124)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-270](https://issues.oasis-open.org/browse/ODATA-270)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-275](https://issues.oasis-open.org/browse/ODATA-275)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-277](https://issues.oasis-open.org/browse/ODATA-277)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-288](https://issues.oasis-open.org/browse/ODATA-288)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-279](https://issues.oasis-open.org/browse/ODATA-279)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-318](https://issues.oasis-open.org/browse/ODATA-318)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-312](https://issues.oasis-open.org/browse/ODATA-312)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-305](https://issues.oasis-open.org/browse/ODATA-305)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-304](https://issues.oasis-open.org/browse/ODATA-304)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-303](https://issues.oasis-open.org/browse/ODATA-303)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-302](https://issues.oasis-open.org/browse/ODATA-302)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-271](https://issues.oasis-open.org/browse/ODATA-271)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-266](https://issues.oasis-open.org/browse/ODATA-266)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-348](https://issues.oasis-open.org/browse/ODATA-348)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-313](https://issues.oasis-open.org/browse/ODATA-313)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-320](https://issues.oasis-open.org/browse/ODATA-320) \nApplied https://tools.oasis-open.org/issues/browse/[ODATA-313](https://issues.oasis-open.org/browse/ODATA-313)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-320](https://issues.oasis-open.org/browse/ODATA-320)\n\nProtocol\n\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-139](https://issues.oasis-open.org/browse/ODATA-139)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-243](https://issues.oasis-open.org/browse/ODATA-243) (NOTE: CLOSED ok in meeting#30)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-260](https://issues.oasis-open.org/browse/ODATA-260)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-274](https://issues.oasis-open.org/browse/ODATA-274)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-276](https://issues.oasis-open.org/browse/ODATA-276)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-37](https://issues.oasis-open.org/browse/ODATA-37)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-42](https://issues.oasis-open.org/browse/ODATA-42)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-68](https://issues.oasis-open.org/browse/ODATA-68)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-139](https://issues.oasis-open.org/browse/ODATA-139)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-230](https://issues.oasis-open.org/browse/ODATA-230)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-234](https://issues.oasis-open.org/browse/ODATA-234)  (NOTE: CLOSED ok in meeting#29)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-246](https://issues.oasis-open.org/browse/ODATA-246)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-248](https://issues.oasis-open.org/browse/ODATA-248)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-279](https://issues.oasis-open.org/browse/ODATA-279)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-281](https://issues.oasis-open.org/browse/ODATA-281)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-292](https://issues.oasis-open.org/browse/ODATA-292)\n\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-31](https://issues.oasis-open.org/browse/ODATA-31)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-306](https://issues.oasis-open.org/browse/ODATA-306)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-283](https://issues.oasis-open.org/browse/ODATA-283)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-321](https://issues.oasis-open.org/browse/ODATA-321)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-311](https://issues.oasis-open.org/browse/ODATA-311) (NOTE: CLOSED ok (as noted in the ticket) on 2013-03-24 without meeting)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-328](https://issues.oasis-open.org/browse/ODATA-328)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-248](https://issues.oasis-open.org/browse/ODATA-248)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-297](https://issues.oasis-open.org/browse/ODATA-297)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-327](https://issues.oasis-open.org/browse/ODATA-327)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-319](https://issues.oasis-open.org/browse/ODATA-319)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-338](https://issues.oasis-open.org/browse/ODATA-338)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-350](https://issues.oasis-open.org/browse/ODATA-350)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-313](https://issues.oasis-open.org/browse/ODATA-313)\n\nURLC\n\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-139](https://issues.oasis-open.org/browse/ODATA-139)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-159](https://issues.oasis-open.org/browse/ODATA-159)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-222](https://issues.oasis-open.org/browse/ODATA-222)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-228](https://issues.oasis-open.org/browse/ODATA-228)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-264](https://issues.oasis-open.org/browse/ODATA-264)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-276](https://issues.oasis-open.org/browse/ODATA-276)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-280](https://issues.oasis-open.org/browse/ODATA-280)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-281](https://issues.oasis-open.org/browse/ODATA-281)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-111](https://issues.oasis-open.org/browse/ODATA-111)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-139](https://issues.oasis-open.org/browse/ODATA-139)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-232](https://issues.oasis-open.org/browse/ODATA-232)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-285](https://issues.oasis-open.org/browse/ODATA-285)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-350](https://issues.oasis-open.org/browse/ODATA-350)\nApplied https://tools.oasis-open.org/issues/browse/[ODATA-263](https://issues.oasis-open.org/browse/ODATA-263)\n\nPlease note, that in the case ot three issues (which are noted above to document their application as found in the submitter messages) the Closed state has already been reached and they are thus excluded from the proposal:\n\n- [ODATA-234](https://issues.oasis-open.org/browse/ODATA-234) is CLOSED ok in meeting#29\n- [ODATA-243](https://issues.oasis-open.org/browse/ODATA-243) is CLOSED ok in meeting#30\n- [ODATA-311](https://issues.oasis-open.org/browse/ODATA-311) is CLOSED ok (as noted in the ticket) on 2013-03-24 without meeting\n\n\nAlso please take into consideration, that 4 issues of the remaining 61 issues targeted by this task are in a state of Open or New. In detail:\n\n- [ODATA-102](https://issues.oasis-open.org/browse/ODATA-102) is OPEN as of 2013-04-25\n- [ODATA-248](https://issues.oasis-open.org/browse/ODATA-248) is OPEN as of 2013-04-25\n- [ODATA-258](https://issues.oasis-open.org/browse/ODATA-258) is OPEN as of 2013-04-25\n- [ODATA-338](https://issues.oasis-open.org/browse/ODATA-338) is NEW \n\nIt is thus proposed in the latter four cases, to directly close also these as applied.\n\n\n\n### Proposal\n\nLet us accept the application of the 61 issues [ODATA-31](https://issues.oasis-open.org/browse/ODATA-31), [ODATA-37](https://issues.oasis-open.org/browse/ODATA-37), [ODATA-42](https://issues.oasis-open.org/browse/ODATA-42), [ODATA-68](https://issues.oasis-open.org/browse/ODATA-68), [ODATA-102](https://issues.oasis-open.org/browse/ODATA-102), [ODATA-111](https://issues.oasis-open.org/browse/ODATA-111), [ODATA-124](https://issues.oasis-open.org/browse/ODATA-124), [ODATA-139](https://issues.oasis-open.org/browse/ODATA-139), [ODATA-159](https://issues.oasis-open.org/browse/ODATA-159), [ODATA-204](https://issues.oasis-open.org/browse/ODATA-204), [ODATA-222](https://issues.oasis-open.org/browse/ODATA-222), [ODATA-228](https://issues.oasis-open.org/browse/ODATA-228), [ODATA-230](https://issues.oasis-open.org/browse/ODATA-230), [ODATA-232](https://issues.oasis-open.org/browse/ODATA-232), [ODATA-244](https://issues.oasis-open.org/browse/ODATA-244), [ODATA-246](https://issues.oasis-open.org/browse/ODATA-246), [ODATA-248](https://issues.oasis-open.org/browse/ODATA-248), [ODATA-258](https://issues.oasis-open.org/browse/ODATA-258), [ODATA-260](https://issues.oasis-open.org/browse/ODATA-260), [ODATA-263](https://issues.oasis-open.org/browse/ODATA-263), [ODATA-264](https://issues.oasis-open.org/browse/ODATA-264), [ODATA-266](https://issues.oasis-open.org/browse/ODATA-266), [ODATA-267](https://issues.oasis-open.org/browse/ODATA-267), [ODATA-270](https://issues.oasis-open.org/browse/ODATA-270), [ODATA-271](https://issues.oasis-open.org/browse/ODATA-271), [ODATA-274](https://issues.oasis-open.org/browse/ODATA-274), [ODATA-275](https://issues.oasis-open.org/browse/ODATA-275), [ODATA-276](https://issues.oasis-open.org/browse/ODATA-276), [ODATA-277](https://issues.oasis-open.org/browse/ODATA-277), [ODATA-279](https://issues.oasis-open.org/browse/ODATA-279), [ODATA-280](https://issues.oasis-open.org/browse/ODATA-280), [ODATA-281](https://issues.oasis-open.org/browse/ODATA-281), [ODATA-283](https://issues.oasis-open.org/browse/ODATA-283), [ODATA-284](https://issues.oasis-open.org/browse/ODATA-284), [ODATA-285](https://issues.oasis-open.org/browse/ODATA-285), [ODATA-288](https://issues.oasis-open.org/browse/ODATA-288), [ODATA-292](https://issues.oasis-open.org/browse/ODATA-292), [ODATA-297](https://issues.oasis-open.org/browse/ODATA-297), [ODATA-300](https://issues.oasis-open.org/browse/ODATA-300), [ODATA-302](https://issues.oasis-open.org/browse/ODATA-302), [ODATA-303](https://issues.oasis-open.org/browse/ODATA-303), [ODATA-304](https://issues.oasis-open.org/browse/ODATA-304), [ODATA-305](https://issues.oasis-open.org/browse/ODATA-305), [ODATA-306](https://issues.oasis-open.org/browse/ODATA-306), [ODATA-307](https://issues.oasis-open.org/browse/ODATA-307), [ODATA-308](https://issues.oasis-open.org/browse/ODATA-308), [ODATA-312](https://issues.oasis-open.org/browse/ODATA-312), [ODATA-313](https://issues.oasis-open.org/browse/ODATA-313), [ODATA-315](https://issues.oasis-open.org/browse/ODATA-315), [ODATA-318](https://issues.oasis-open.org/browse/ODATA-318), [ODATA-319](https://issues.oasis-open.org/browse/ODATA-319), [ODATA-320](https://issues.oasis-open.org/browse/ODATA-320), [ODATA-321](https://issues.oasis-open.org/browse/ODATA-321), [ODATA-322](https://issues.oasis-open.org/browse/ODATA-322), [ODATA-324](https://issues.oasis-open.org/browse/ODATA-324), [ODATA-325](https://issues.oasis-open.org/browse/ODATA-325), [ODATA-327](https://issues.oasis-open.org/browse/ODATA-327), [ODATA-328](https://issues.oasis-open.org/browse/ODATA-328), [ODATA-338](https://issues.oasis-open.org/browse/ODATA-338), [ODATA-348](https://issues.oasis-open.org/browse/ODATA-348), and [ODATA-350](https://issues.oasis-open.org/browse/ODATA-350) in one grouping motion. \nThe minutes of the meeting where this motion takes place will as usual document each issues' state transition from applied to closed in a dedicated section per issue. \n\nImported from [ODATA-362](https://issues.oasis-open.org/browse/ODATA-362)",
    "labels": [
      "ABNF",
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove requirement that annotations come after all defined properties in CSDL",
    "body": "\n\n### Proposal\n\nsee title.\n\nImported from [ODATA-361](https://issues.oasis-open.org/browse/ODATA-361)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove edm:documentation element from [CSDL]",
    "body": "OData V1 introduced a <Documentation> element in order to annotate a model element with a description.\n\nThis is an ideal application of annotations, we just didn't have one defined at the time.\n\nWe should not get rid of the <documentation> element and instead define a documentation annotation in the core vocabulary. \n\n### Proposal\n\nRemove the <documentation> element from CSDL and define a documentation term in the core vocabulary. See also [ODATA-361](https://issues.oasis-open.org/browse/ODATA-361)\n\n      <Term Name=\"Description\" Type=\"Edm.String\">\n        <Annotation Term=\"Core.Description\" String=\"A brief description of a model element\" />\n        <Annotation Term=\"Core.IsLanguageDependent\" />\n      </Term>\n      \n      <Term Name=\"LongDescription\" Type=\"Edm.String\">\n        <Annotation Term=\"Core.Description\" String=\"A lengthy description of a model element\" />\n        <Annotation Term=\"Core.IsLanguageDependent\" />\n      </Term>\n\nImported from [ODATA-360](https://issues.oasis-open.org/browse/ODATA-360)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow only true and false as boolean values, remove values 1 and 0, make values case-sensitive, all-lowercase",
    "body": "\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-359](https://issues.oasis-open.org/browse/ODATA-359)",
    "labels": [
      "ABNF",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Second parameter of the canonical search function should not allow search expressions",
    "body": "We should not allow the second parameter of the canonical search function to allow search expressions and instead just take advantage of the \"and\", \"or\", and \"not\" $filter operators.\n\nFor example, instead of allowing both:\n\n\"...?$filter=search( companyName, 'food AND quality' )\n\"...?$filter=search( companyName, 'food' ) and search( companyName, 'qualify' )\"\n\nonly allow the latter.\n\n### Proposal\n\nRemove the canonical search function introduced in [ODATA-222](https://issues.oasis-open.org/browse/ODATA-222).\n\nImported from [ODATA-358](https://issues.oasis-open.org/browse/ODATA-358)",
    "labels": [
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Use GeoJSON in JSON and GML in Atom to represent geo types",
    "body": "Right now we use a common literal format based on \"Well Known Text\" for literals within URLs, serializing in ATOM, and serializing in JSON.\n\nWell-known-text defines a convenient format for URLs, yowever, both Atom and JSON have \"native\" representations of geo types. The most natural representation in ATOM is the xml representation GML. GeoJSON appears to be the most broadly accepted way to encode geo types in JSON. It works very well in JSON.\n\nIt would be unfortunate to force consumers in XML or JSON to have to understand formats that are not common in each environment, and unfortunate to have extra brackets or curly braces in URLs\n\n### Proposal\n\nRetain well-known-text as a convenient representation for geo types in URLs and support \"natural\" geo-encodings for each format:\n-GeoJSON for JSON\n-GML for Atom\n\nImported from [ODATA-357](https://issues.oasis-open.org/browse/ODATA-357)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Review the changes in the latest version of Working Drafts",
    "body": "Review the changes in the latest version of the Working Drafts [timestamp: April 24 10am PT]. The links are below:\n\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48909/odata-core-v4.0-wd01-part1-2013-04-23.docx\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48900/odata-core-v4.0-wd01-part2-url-conventions-2013-04-23.doc\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48907/odata-core-v4.0-wd01-part3-csdl-2013-04-24.doc\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48905/odata-atom-format-v4.0-wd01-2013-4-23.docx\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48904/odata-json-format-v4.0-wd01-2013-4-23.docx\n\nApproving the changes will create a baseline document that we can use to further apply future issues resolutions.\n\n### Proposal\n\nReview and approve the changes (along with an identification of all issues in Applied state whose application is included in the latest drafts).\n\n\nImported from [ODATA-356](https://issues.oasis-open.org/browse/ODATA-356)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "Vocabularies",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define how property paths are represented in key part of URL",
    "body": "The key of an entity is part of the URl path, so we can't use forward slashes for complex key parts:\n\nProblem(Header/ID=42) cannot be used as this defines two path segments Problem(Header and ID=42\n\nAlternatives:\n- Problem(Header%2fID=42) - Encode / as %2f\n- Problem(Header-ID=42) - Use a dash instead of /\n- Problem(Header.ID=42) - Use a dot instead of /\n- Problem/Header/ID=42 - Use forward slashes as key delimiters instead of parentheses\n- Reject [ODATA-60](https://issues.oasis-open.org/browse/ODATA-60) and disallow parts of complex properties as key values\n- Problem(42) - do not state property names in key expressions, instead require key values to appear in the order of the key definition\n\n### Proposal\n\nAdd an \"alias\" attribute to the <edm:propertyref> element within a <edm:key>. name must be unique across properties/nav props. if defined, you must use the alias in a key lookup and  you are only allowed to use the alias in a key lookup.\nName of alias is \"Alias\" (upper case A) and MUST be a simple identifier\n\nImported from [ODATA-355](https://issues.oasis-open.org/browse/ODATA-355)",
    "labels": [
      "ABNF",
      "CSDL XML",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Make Edm. prefix required when referring to built-in types",
    "body": "Currently the Edm. prefix is optional for built-in primitive types. \n\nReferring to all types with qualified names is more consistent.\n\n### Proposal\n\nRequire Edm. in URL and CSDL, prohibit in Atom and JSON\n\nImported from [ODATA-354](https://issues.oasis-open.org/browse/ODATA-354)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove <CollectionType> and <TypeRef> elements",
    "body": "We don't have use cases for these constructs. It was a bug in the initial contribution.\n\n### Proposal\n\nSee summary\n\nImported from [ODATA-353](https://issues.oasis-open.org/browse/ODATA-353)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Part II: Review results for OData JSON Format Version 4.0 ",
    "body": "In our review today we came up with the following action items and resolution proposals (copied from the chat): \n\nReview document can be found at https://www.oasis-open.org/committees/download.php/48589/odata-json-format-v4.0-wd01-2013-03-19.doc \nSDx, HHx and so on are references to comments in this document \n\nDiscussion (continued from meeting #32 mark at section 4.4.2):\nSD24: defer to Pre-F2F\nMJP25: defer to Monday\nMJP26: rephrase rules to include exponential and NanInfinity representation\nMJP27: use Int64 representation (currently JSON String)\nSD28: MUST NOT in upper-case, \"dereferenc...\" on Monday\nSD37: no action\nSD39: remove paragraph, is redundant\nHH40/MJP41: describe difference between navigation link and reference\n4.9.2: more explanation, or switch to uncorrelated property, not foreign-key\nRH46: define in F2F what relative URLs are relative to (request or service)\nHH49: remove OrderID from nested Details and refer to Protocol\n4.14: Open Ticket to make Edm. prefix required for primitive types\nMJP60&61: use \"when\" in JSON\nMJP60/61: Mike to talk to James Snell making \"when\" optional in AtomTombstone also\nRH65: discuss in F2F\nMJP70: accepted\n\nDocument with comments: https://www.oasis-open.org/committees/download.php/48876/odata-json-format-v4.0-wd01-2013-03-19-with-comments.doc\n\n### Proposal\n\nSee description. \n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-352\n\nImported from [ODATA-352](https://issues.oasis-open.org/browse/ODATA-352)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define ID, ReadLink and EditLink in Part 1: Protocol, define representation in Atom and JSON",
    "body": "In certain situations, especially Data Aggregation, we need the concept of \"transient\" entities and feeds in addition to the already defined \"addressable\" entities and feeds.\n\nProtocol should define the concepts ID, ReadLink and EditLink.\n\nRestrictions due to Atom and AtomPub\n- ID required, MUST be IRI\n- Feed: MAY have Self-Link to re-retrieve THIS feed \n- Entry\n-- Links are optional\n-- <link rel=\"self\"> identifies resource equivalent to current resource\n-- AtomPub: <link rel=\"edit\"> can be used to retrieve, update, and delete the Resource represented by that Entry\n\n\n### Proposal\n\nJSON Services: \n-MUST write the odata.id annotation for the object if it does not follow convention OR full metadata is specified \n-MUST write odata.id=null for \"transient\" entities (that cannot be refetched or updated) (in minimal or full metadata) \n-MUST write the odata.editlink annotation if entity is updatable and (editlink is different from the id OR full metadata) \n-MUST write the odata.readlink annotation if entity is read-only and (readlink is different from id OR full metadata) or (entity is updatable but readlink is different from editlink) \n-MAY write the odata.readlink annotation to signal that an entity is read-only but other entities in the set may be updatable \n-MAY write odata.readlink annotation to feed, in which case it MUST represent the original query \n-MUST NOT write odata.editlink or odata.id for feeds as the meaning of these annotations has not been defined \n\nJSON Clients: \n-MAY assume an entity with odata.id=null cannot be compared to other entities, refetched, or updated \n-MAY generate the id for an entity by convention if it is not present in the entity \n-MAY use the id for an entity as an editlink if it is not transient and no editlink or readlink is present \n-SHOULD NOT attempt to update an entity with a readlink and no editlink, (i.e., should not \"fabricate\" an editlink if a readlink is present) or if the entity is annotated with the odata.readonly annotation set to false \n-MAY use the editlink for an entity as a readlink if no readlink is present \n-MAY use the id for an entity as a readlink if it is not transient and no readlink or editlink is present \n\nATOM, services \n-MUST write an <id> for the entry (this is required by ATOM) \n-SHOULD follow the naming pattern <id>odata:transient:{some-generated-unique-identifier-to-not-break-atom-parsers}</id> for transient ids \n-MUST write an edit link if, and only if the entry is updatable \n-MUST write a self link if, and only if, the entry is can be fetched and is read-only or the read link is different from the editlink \n-MUST write write an <id> for the feed that uniquely identifies the collection from which the feed was generated (required by ATOM). \n-MAY write a self link in a feed, in which case it MUST represent the original query \n-MUST write an <id> for a feed (this is required by ATOM) \n-MAY write a self link for a feed, in which case it MUST represent the original query \n-MUST NOT write edit link for a feed \n\nATOM Clients: \n-MAY assume an entity with an id that matches the transient pattern cannot be compared to other entities, refetched, or updated \n-MAY interpret the edit link as a self link if no self link is present \n-SHOULD NOT attempt to update an entity without an editlink \n\nAccepted:https://www.oasis-open.org/committees/download.php/49212/odata-meeting-37_on-20130516-minutes.html#odata-351\n\nImported from [ODATA-351](https://issues.oasis-open.org/browse/ODATA-351)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clearly describe the service documents role, expected usage and responsibility in comparison with $metadata",
    "body": "As came up in the context of enhancing the \"format documents\" ATOM and JSON, the service document has a somewhat unthankful role as bootstrapping component, i.e. somehow crucial, but not mandatory for using a service, since $metadata based and/or ad hoc queries MAY achieve identical results.\n\nTriggered by Evan's comment on [ODATA-315](https://issues.oasis-open.org/browse/ODATA-315) \"Or, preferably, conformance with the addressing conventions should be mandatory, so that clients with the metadata document can be guaranteed that they NEVER need to also access the service document.\" this issue's role is to ensure, that we define, separate and communicate the central concept of a service document in a holistic and economic way.\n\nIs the service document needed or would it be better to simply further amend the top-level $metadata so that clients only have to deal with one concept of meta information about the data being offered by the service which also remains a useful \"channel\" in the follow-up requests?\n\nWould removing the service document be feasible or end in a backwards compatibility  nightmare, as a v3 client starting with a service document request would than never be able to start a communication with a v4 server (besides a HTTP 404 response)?\n\nIf we \"keep\" the service document, it should IMO be clearly stated when and what for it MUST, SHOULD or if really necessary MAY be used and where the separation of concerns w.r.t. the $metadata is to be made.\n\nCurrently this is not really clear to me. What do the others think?\n\n### Proposal\n\nClearly describe the service documents role, expected usage and responsibility in comparison with $metadata\n\nImported from [ODATA-350](https://issues.oasis-open.org/browse/ODATA-350)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "CSDL for Collection types is not clear on nullability of elements",
    "body": "The CSDL spec for edm.CollectionType states:\n\n    \"The collection type can define relevant facets for scalar types.\"\n\nbut does not specify what the relevant facets are. Also, it implies that a collection of collections cannot define facets (e.g. Nullable) for the element collections.\n\nAlso note thet edm.TypeDefinition does not permit the use of the Nullable facet, so an element type defined by a TypeDefinition cannot help resolve the issue.\n\nSo some definite questions:\n\n(1) Does an ordinary Collection type (e.g. \"Collection(T)\" or \"TCollection\" where TCollection is defined by a CollectionType without the use of facets) permit null element values?\n\n(2) Can an edm.CollectionType use the Nullable facet for scalar elements?\n\n(3) Can an edm.CollectionType use the Nullable facet for non-scalar elements? (It seems the answer is no).\n\n\n### Proposal\n\nClose without action as CollectionType element has been removed, see [ODATA-353](https://issues.oasis-open.org/browse/ODATA-353)\n\nImported from [ODATA-349](https://issues.oasis-open.org/browse/ODATA-349)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Require the use of <edmx:Include> to pull in specific namespaces from <edmx:Reference>",
    "body": "<edmx:Reference> allows a service's metadata document to reference external metadata descriptions in a distributed environment. This allows a large, potentially complex schema to be factored into reasonable sized chunks.\n\nIn such an environment, one metadata document may reference multiple external metadata documents, and clients can lazily fetch metadata as required. However, today there is no way for a client to know which of possibly multiple references it needs to follow in order to resolve a particular namespace.\n\nIf we were to require that the service explicitly specify the namespaces to be included from each reference, that would allow a client that is lazily exploring metadata to know which references it needs to follow in order to get additional metadata. This also gives us the ability to include a subset of the namespaces in a referenced document.\n\nThis is also a convenient place to apply an alias to the namespace, which makes more sense than applying it in a <using> statement within the <schema> since the alias, in order to be valid in a url or a response, must be global which is strange for a declaration within a <schema> element.\n\nFor example:\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<edmx:Edmx xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\n           Version=\"4.0\">\n  <edmx:Reference Url=\"http://odata.org/ann/a\">\n    <edmx:Include Namespace=\"org.example.validation\" Alias=\"validation\"/>\n    <edmx:Include Namespace=\"org.example.display\" Alias=\"display\" /> \n  </edmx:Reference>\n  <edmx:DataServices ...>\n</edmx:Edmx>\n\n\n### Proposal\n\n1. Remove the <edm:Using> element\n2. Add <edmx:Include> element to <edmx:Reference> for including specific namespaces from the referenced document. The <edmx:Include> element contains a required \"Namespace\" attribute and an optional \"Alias\" attribute.\n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-348\n\nImported from [ODATA-348](https://issues.oasis-open.org/browse/ODATA-348)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "RFC and W3C citation content and formats in odata-atom-format-v4.0-wd01-2013-03-19-with-comments, odata-json-format-v4.0-wd01-2013-03-19-with-comments and odata-core-v4.0-wd01-part1-protocol-2013-4-5-with-comments",
    "body": "OData Normative References\n\nI have reviewed the normative references in:\n\nodata-atom-format-v4.0-wd01-2013-03-19-with-comments, odata-json-format-v4.0-wd01-2013-03-19-with-comments and odata-core-v4.0-wd01-part1-protocol-2013-4-5-with-comments.\n\nI have compared the RFC citations with the canonical guide to RFC citations at: http://www.rfc-editor.org/in-notes/rfc-ref.txt and proposed changes in the current citations to conform with the IETF guide.\n\nI have also noted the IETF status with regard to each RFC, which may be an issue with its citation as a \"normative\" reference. Drafts for example, being disfavored as normative references. On RFC status, see: http://www.rfc-editor.org/rfcxx00.html for a current listing.\n\nIn checking the citations, I noted where the citations appear in the references only, not in the substantive text.\n\n************************\n\nodata-atom-format-v4.0-wd01-2013-03-19-with-comments \n\n\nNormative references\n\n\nReads: [RFC2119] S. Bradner, \"Key words for use in RFCs to Indicate Requirement Levels\", IETF RFC 2119, March 1997. http://www.ietf.org/rfc/rfc2119.txt. \n\n\nCorrect: [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997. http://www.ietf.org/rfc/rfc2119.txt.\n\nIETF Status: Best Current Practice\n\n*****\n\nReads: [RFC 2616] R. Fielding, J. Gettys, J. Mogul, H. Frystyk, L. Masinter, P. Leach, T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", IETF RFC 2616, June 1999. http://www.ietf.org/rfc/rfc2616.txt.\n\nCorrect: [RFC 2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999. http://www.ietf.org/rfc/rfc2616.txt.\n\nIETF Status: Draft Standard\n\nOnly cited in references. \n\n*****\n\nReads: [RFC3629] F. Yergeau, \"UTF-8, a transformation format of ISO 10646\", IETF RFC 3629, November 2003. http://tools.ietf.org/html/rfc3629. \n\nCorrect: [RFC3629] Yergeau, F., \"UTF-8, a transformation format of ISO 10646\", STD 63, RFC 3629, November 2003. http://tools.ietf.org/html/rfc3629.\n\nIETF Status: Internet Standard\n\nOnly cited in references.\n\n*****\n\nReads: [RFC3987] M. Duerst, M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", IETF RFC 3987, Januar 2005. http://www.ietf.org/rfc/rfc3987.txt.\n\nCorrect: [RFC3987] Duerst, M. and M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", RFC 3987, January 2005. http://www.ietf.org/rfc/rfc3987.txt.\n\nIETF Status: Proposed Standard\n\n*****\n\nReads: [RFC4287] M. Nottingham, Ed., R. Sayre, Ed. \"The Atom Syndication Format\", IETF RFC 4287, December 2005. http://www.ietf.org/rfc/rfc4287.txt.\n\nCorrect: [RFC4287] Nottingham, M., Ed., and R. Sayre, Ed., \"The Atom Syndication Format\", RFC 4287, December 2005. http://www.ietf.org/rfc/rfc4287.txt.\n\nIETF Status: Proposed Standard\n\n*****\n\nReads: [RFC5023] J. Gregorio, Ed., B. de hOra, Ed., \"The Atom Publishing Protocol\", IETF RFC 5023, October 2007. http://www.ietf.org/rfc/rfc5023.txt.\n\nCorrect: [RFC5023] Gregorio, J., Ed., and B. de hOra, Ed., \"The Atom Publishing Protocol\", RFC 5023, October 2007. http://www.ietf.org/rfc/rfc5023.txt.\n\nIETF Status: Proposed Standard\n\n*****\n\nReads: [RFC5646] Phillips, A., \"Tags for Identifying Languages\", BCP 47, IETF RFC 5646, September 2009. http://tools.ietf.org/html/rfc5646. \n\nCorrect: [RFC5446] Phillips, A., Ed., and M. Davis, Ed., \"Tags for Identifying Languages\", BCP 47, RFC 5646, September 2009. http://tools.ietf.org/html/rfc5646.\n\nIETF Status: Best Current Practice\n\n*****\n\nReads: [RFC6721] Snell, J., \"The Atom 'deleted-entry' Element\", IETF RFC 6721, September 2012, http://tools.ietf.org/html/rfc6721. \n\nCorrect: [RFC6721] Snell, J., \"The Atom \"deleted-entry\" Element\", RFC 6721, September 2012. http://tools.ietf.org/html/rfc6721.\n\nIETF Status: Proposed Standard\n\n3 references in text.\n\n*****\n\nW3C biblography server - http://www.w3.org/2002/01/tr-automation/tr-biblio-ui\n\nReads: [XML-Schema-2] Peterson, D. et al., \"W3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes\", W3C Recommendation, 5 April 2012. http://www.w3.org/TR/xmlschema11-2/.\n\nCorrect: XMLSCHEMA11-2\nW3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes , S. Gao Gao, P. V. Biron, A. Malhotra, A. Malhotra, D. Peterson, H. S. Thompson, C. M. Sperberg-McQueen, Editors, W3C Recommendation, 5 April 2012, http://www.w3.org/TR/2012/REC-xmlschema11-2-20120405/ . Latest version available at http://www.w3.org/TR/xmlschema11-2/ .  \n\n*****\n\nBTW, OData-JSON and OData-URL only appear in the references.\n\n\n**************************************\n\nodata-json-format-v4.0-wd01-2013-03-19-with-comments\n\nNormative references\n\n\nReads: [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997. http://www.ietf.org/html/rfc2119.\n\nCorrect: [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997. http://www.ietf.org/rfc/rfc2119.txt.\n\nBest Current Practice\n\n*****\n\nReads: [RFC3986] T. Berners-Lee, R. Fielding, L Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", IETF RFC3986, January 2005. http://www.ietf.org/html/rfc3986. \n\nCorrect: [RFC3986] Berners-Lee, T., Fielding, R., and L. Masinter, \"Uniform Resource Identifier (URI): Generic Syntax\", STD 66, RFC 3986, January 2005. http://www.ietf.org/html/rfc3986.\n\nIETF Status: Internet Standard\n\n*****\n\nReads: [RFC3987] M. Duerst, M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", IETF RFC3987, January 2005. http://www.ietf.org/html/rfc3987. \n\nCorrect: [RFC3987] Duerst, M. and M. Suignard, \"Internationalized Resource Identifiers (IRIs)\", RFC 3987, January 2005. http://www.ietf.org/rfc/rfc3987.txt.\n\nIETF Status: Proposed Standard\n\n*****\n\nReads: [RFC4627] Crockford, D., \"The application/json Media Type for JavaScript Object Notation (JSON)\", RFC 4627, July 2006. http://tools.ietf.org/html/rfc4627. \n\nCorrect: [RFC4627] Crockford, D., \"The application/json Media Type for JavaScript Object Notation (JSON)\", RFC 4627, July 2006. http://tools.ietf.org/html/rfc4627.\n\nIETF Status: Informational\n\n*****\n\nReads: [RFC5646] Phillips, A., \"Tags for Identifying Languages\", BCP 47, RFC 5646, September 2009. http://tools.ietf.org/html/rfc5646. \n\nCorrect: [RFC5646] Phillips, A., Ed., and M. Davis, Ed., \"Tags for Identifying Languages\", BCP 47, RFC 5646, September 2009. http://tools.ietf.org/html/rfc5646.\n\nIETF Status: Best Current Practice\n\nNote: The ATOM part omits RFC3986. Was that intentional?\n\n\n***********************************\n\nodata-core-v4.0-wd01-part1-protocol-2013-4-5-with-comments\n\n\nNormative references\n\n\nReads: [RFC2046] Freed, N., et al, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046, November, 1996. http://www.ietf.org/rfc/rfc2046.txt\n\nCorrect: [RFC2046] Freed, N. and N. Borenstein, \"Multipurpose Internet Mail Extensions (MIME) Part Two: Media Types\", RFC 2046, November 1996. http://www.ietf.org/rfc/rfc2046.txt.\n\nIETF Status: Draft Standard\n\n*****\n\nReads: [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997. http://www.ietf.org/rfc/rfc2119.txt.\n\nCorrect: [RFC2119] Bradner, S., \"Key words for use in RFCs to Indicate Requirement Levels\", BCP 14, RFC 2119, March 1997. http://www.ietf.org/rfc/rfc2119.txt.\n\nIETF Status: Best Current Practice\n\n*****\n\nReads: [RFC2616] Fielding, R., et al, \"Hypertext Transfer Protocol -- HTTP/1.1.\", RFC 2616, June 1999. http://www.ietf.org/rfc/rfc2616.txt.\n\nCorrect: [RFC 2616] Fielding, R., Gettys, J., Mogul, J., Frystyk, H., Masinter, L., Leach, P., and T. Berners-Lee, \"Hypertext Transfer Protocol -- HTTP/1.1\", RFC 2616, June 1999. http://www.ietf.org/rfc/rfc2616.txt.\n\nIETF Status: Draft Standard\n\n*****\n\nReads: [RFC5023] Gregorio, J., et al, \"The Atom Publishing Protocol.\", RFC 5023, October 2007. http://tools.ietf.org/html/rfc5023.\n\n[RFC5023] Gregorio, J., Ed., and B. de hOra, Ed., \"The Atom Publishing Protocol\", RFC 5023, October 2007. http://www.ietf.org/rfc/rfc5023.txt.\n\nIETF Status: Proposed Standard\n\n*****\n\nReads: [RFC5789] Dusseault, L., et al, \"Patch Method for HTTP\", RFC 5789, March 2010. http://tools.ietf.org/html/rfc5789.\n\nCorrect: [RFC5789] Dusseault, L. and J. Snell, \"PATCH Method for HTTP\", RFC 5789, March 2010. http://tools.ietf.org/html/rfc5789.\n\nIETF Status: Proposed Standard\n\n*****\n\nHTTP-Semantic cited only in references.\n\nBTW, the \"replace with RFC when approved\" depends on the status of the RFC. Yes? draft, proposed standard, standard, etc.\n\n\n### Proposal\n\nIncluded in the description.\n\nImported from [ODATA-347](https://issues.oasis-open.org/browse/ODATA-347)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Order of child elements of <edm:Collection> MUST be preserved",
    "body": "Terms often require lists of primitive or complex values in which the order of entries is significant, e.g. when defining a leveled hierarchy for data aggregation.\n\nMaking the order of child elements in a <Collection> element significant avoids the need of always using a complex type with a sequence property to express the order.\n\n### Proposal\n\n\"Client libraries MUST retain the order of objects within an array.\" in JSON, and \"Client libraries MUST preserve elements in document order.\" for ATOM and XML/CSDL. \nWe don't impose any ordering constraints around xml attributes or name/value pairs within JSON objects. \nWe don't imply any *semantics* around the ordering of elements within a collection (i.e., that the order of complex types within a collection is meaningful and MUST be preserved by the service). \n\nAccepted:https://www.oasis-open.org/committees/download.php/49212/odata-meeting-37_on-20130516-minutes.html#odata-346\n\nImported from [ODATA-346](https://issues.oasis-open.org/browse/ODATA-346)",
    "labels": [
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Specify which nested query options can be used when expanding only references, and adapt syntax",
    "body": "$expand allows nesting query options after the name of the navigation properties to be expanded.\n\nWhen expanding only references $select, $expand, and $levels don't make sense as neither structural nor navigation properties are represented in references.\n\n### Proposal\n\nChange syntax to \n\n$epand=NavProp/$ref(<nested options>)\n\nand define a different set following $ref than the one directly following the navigation property:\n\nexpand       = '$expand' EQ expandItem *( COMMA expandItem )\nexpandItem   = [ qualifiedEntityTypeName \"/\" ] navigationProperty \n               [ \"/\" qualifiedEntityTypeName ]\n               [ ref OPEN expandRefOption *( SEMI expandRefOption ) CLOSE \n               / OPEN expandOption *( SEMI expandOption ) CLOSE ]\nexpandRefOption = filter\n                / search\n                / skip \n                / top \n                / inlinecount\nexpandOption = expandRefOption\n             / select \n             / orderby\n             / expand\n             / levels\n\n\nRationale: we now express in the ABNF what is meaningful and thus allowed after /$ref.\n\nAlso this allows parsing from left to right. \n\nAnd putting /$ref before the parens makes it a bit more obvious. Just try reading\n\n$expand=Items($filter=something very complicated and lengthy and I'll only tell you afterwards that I only want)/$ref&andsoon\n\nImported from [ODATA-345](https://issues.oasis-open.org/browse/ODATA-345)",
    "labels": [
      "ABNF",
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Software change mode artifacts 101 - Rewrite of current 6.1.2 The Type Attribute and 6.2 into single subsection",
    "body": "EDIT: This was a change mode artifact of the software used. Which is not reproducable. I have the \"historic\" PDF at hand, but when requesting final view from word on the same file again, it now does not stumble and produces readable 6.1.2 et al. as intended by the editor.\n\nThus this issue is reclassified as trivial bug and closed.\n\nThanks Ralf for working this out!\n\nHISTORIC:\nThe latest revision of [OData Core Part 3: CSDL, Version 4.0](https://www.oasis-open.org/committees/download.php/48835/odata-core-v4.0-wd01-part3-csdl-2013-04-12.doc)  has some presumable mixed up text following 6.1.2 up to but excluding (with current numbering) 6.3 Property Facets.\n\nIt says:\n\"\"\"\n6.1.2 The Type Attribute\nA property MUST specify a value for the Type attribute. The value of this attribute determines the type for the value of the property on instances of the containing type.\n6.2 The value of the type attribute MUST be of the form AnySingleTypeName\nThe QualifiedName of a primitive type, type definition, complex type, enumeration type, or entity type in scope.\nAnyKeylessTypeName. The value of the type attribute MUST resolve to a complex type, enumeration type or primitive type, or a collection of complex, enumeration or primitive types.\n\"\"\"\n\nBy the way, one issue for the reader is, that a grep AnySingleTypeName *.xsd (with edm,edmx and metadata) gives no hit :-) \nas I reach section 19 Attribute Values, I find what looks a bit like the source of a copy, paste edit-later without the last step ;-)\n(namely subsections 19.5 AnySingleTypeName and 19.6 AnyKeylessTypeName)\n\n\nContext is the \"The edm:Property Element\". The example in 6.1 states (relevant part for \"type\"): '[...] Type=\"Collection(Edm.String)\" [...]'.\n\nThe edm.xsd refers for Property element to TProperty, which in turn refers (for attributes) to TCommonPropertyAttributes:\n\n<xs:attributeGroup name=\"TCommonPropertyAttributes\">\n    <xs:attribute name=\"Name\" type=\"edm:TSimpleIdentifier\" use=\"required\" />\n    <xs:attribute name=\"Type\" type=\"edm:TAnyType\" use=\"required\" />\n    <xs:attribute name=\"Nullable\" type=\"xs:boolean\" default=\"true\" use=\"optional\" />\n    <xs:attribute name=\"DefaultValue\" type=\"xs:string\" use=\"optional\" />\n    <xs:attributeGroup ref=\"edm:TFacetAttributes\" />\n    <xs:attributeGroup ref=\"edm:TPropertyFacetAttributes\" />\n  </xs:attributeGroup>\n\nSo, the value of the Type attribute MUST conform to TAnyType which in turn is defined in edm.xsd as:\n\n<xs:simpleType name=\"TAnyType\">\n    <xs:union memberTypes=\"edm:TPrimitiveType edm:TAbstractType edm:TQualifiedName\">\n      <xs:simpleType>\n        <xs:restriction base=\"xs:token\">\n          <!-- The below pattern represents the allowed identifiers in ECMA specification plus the '.' for namespace qualification and the Collection() wrapper  -->\n          <xs:pattern value=\"Collection\\([\\p{L}\\p{Nl}][\\p{L}\\p{Nl}\\p{Nd}\\p{Mn}\\p{Mc}\\p{Pc}\\p{Cf}]{0,}(\\.[\\p{L}\\p{Nl}][\\p{L}\\p{Nl}\\p{Nd}\\p{Mn}\\p{Mc}\\p{Pc}\\p{Cf}]{0,}){0,}\\)\" />\n        </xs:restriction>\n      </xs:simpleType>\n    </xs:union>\n  </xs:simpleType>\n\nso, ok a union of A) edm:TPrimitiveType, B) edm:TAbstractType and C) edm:TQualifiedName with the restriction D) that it matches the pattern 'Collection...' (that accounts for the Collection() wrapper and ECMA allowed identifiers adding the dot for manespace qualification..\n\nI suggest rewriting as in the proposal (plus/minus structural changes planned as of meeting#32 w.r.t. headings describing \"element x [attribute y]\".\n\nIf the deleted words make sense for implementers of servers or clients, I hereby kindly ask to fill them back in,  but please help me as say, a first test candidate to distill some additional understanding from the ammendment and how this matches the schema.\n\nMaybe also someone finds a more direct presentation of the phrase \"The value of this attribute determines the type for the value of the property on instances of the containing type.\" which states, that the value (in the example 'Collection(Edm.String)' meaning Edm.String!) rules all instances of the element (a complex type thus) containing the property element to be of that type (in the eample Edm.String). Doesn't it?\nAhem anyone for a better wording?\n\nSince Collection() must be part of that facet, why not: The inner part of the value between 'Collection(' and ')' of the attribute 'Type' indicates, that all members of the collection of the type containing the propert element MUST be of the type with name equal to this inner part. Not better, I know ...\n\nOr maybe I miss the real point here?\n\n\nImported from [ODATA-344](https://issues.oasis-open.org/browse/ODATA-344)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Ensure consistent placement and delegation of descritions for presentations of primitive values",
    "body": "As found in the latest revision of [OData Core Part 3: CSDL, Version 4.0](https://www.oasis-open.org/committees/download.php/48835/odata-core-v4.0-wd01-part3-csdl-2013-04-12.doc) in section 3.5 Primitive Types, last paragraph:\n\n\"See [OData-ABNF] for the representation of primitive type values in URLs, and [OData-Atom] and [OData-JSON] for the representation in requests and responses.\"\n\nThese four components (tagged) need to be in sync with our decision what to describe exactly where.\n\nYesterday during the meeting we came to the conclusion, that all representation definitions shared across the formats (the intesection) shall be only described in ABNF, whilst differences among formats (or to conventional usage of the formats for OData) should be depicted in the respective format documents.\n\nWe might adjust this decision in the weeks to come, but in any case should ensure, the four components are clear and consistent along this dimension.\n\n### Proposal\n\nEnsure consistent placement and delegation of descritions for presentations of primitive values\n\nImported from [ODATA-343](https://issues.oasis-open.org/browse/ODATA-343)",
    "labels": [
      "ABNF",
      "ATOM Format",
      "CSDL XML",
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Can we relax the requirement of int64 numbers being represented as strings in the JSON Format for integer numbers that don't lose precision in ECMAScript when represented as numbers?",
    "body": "The current JSON Format specification requires all Int64 numbers to be represented as strings because of the limitation of numbers in JavaScript were these numbers get stored as 64-bit binary format IEEE values and therefore lose precision past 15 digits. However numbers up to that point could still be represented as numbers.\n\n### Proposal\n\nChange the default serialization of number (Int64 and Decimal particularly) as numbers in JSON.\nAdd support for the 'IEEE754Compatible' format parameter to the application/json format and require that the producer MUST serialize Int64 and Decimal numbers as strings if this format parameter has been specified.\n\n\nImported from [ODATA-342](https://issues.oasis-open.org/browse/ODATA-342)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Can we get rid of the optional trailing 'L'/'l' for int64 numbers",
    "body": "According to the ABNF an optional 'L'/'l' character MAY be included. I was asked why this was and failed to give an answer. Dear I ask why we allow this whereas we don't make any distinction that way for the other integer types?We already allow for upscaling to a bigger type, why couldn't any integer number be just specified using its digits full well knowing that if more then 15 digits are required it has to be an int64 number ?\n\n### Proposal\n\nRemove the optional trailing 'l'/'L', 'f'/'F', 'd'/'D' and 'm'/'M' qualifier for int64, single, double and decimal numbers respectively.\n\nImported from [ODATA-341](https://issues.oasis-open.org/browse/ODATA-341)",
    "labels": [
      "ABNF",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "How to retrieve both the entity references as well as the count of a collection referenced by a navigation property?",
    "body": "Currently if we want to retrieve the references to the individual entities instead of inlining the entities themselves the $expand syntax allows us to append /$ref to the navigation property that represents that collection of entities. If we wanted the size of that collection, after optionally applying any filters that might have been specified for such collection, one would need to add the $inlinecount ($count if [ODATA-339](https://issues.oasis-open.org/browse/ODATA-339) gets accepted) to be included as one of the expand options. This leads to the question how one could get both the count as well as the references to the individual entities as well as, come to think about it, how one could specify the order in which these references ought to be returned.\n\nIn [ODATA-339](https://issues.oasis-open.org/browse/ODATA-339) the proposal is to allow /$count to be appended to a property in the select clause if one wanted to retrieve just the count. I was wondering if $ref should be moved to the select clause as well where $ref became just one of those special properties allowed to be used as appended to a navigation property or in a select nested within an expand were $ref would just be this 'special' property that would result in the reference to be injected in the projection and were it might optionally be combined with other properties (if that made sense)???\n\nI.e. these would then all be valid:\n\nhttp://host/service.svr/Customers?$select=Orders/$ref\nhttp://host/service.svr/Customers?$select=Orders/$count \nhttp://host/service.svr/Customers?$select=Orders/($select=$ref)\nhttp://host/service.svr/Customers?$select=Orders/($count,$select=$ref,$filter=Amount gt 100)\nhttp://host/service.svr/Customers?$select=Orders/($select=$ref,$orderby=OrderID)\n\n### Proposal\n\nResolved by [ODATA-345](https://issues.oasis-open.org/browse/ODATA-345)\n\nImported from [ODATA-340](https://issues.oasis-open.org/browse/ODATA-340)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "$inlinecount and $count, do we need both? Could we use $count in select clause as well?",
    "body": "In numerous cases one might want to just know, or also know, the count of the number of entities in a collection identified by a navigation property as opposed to retrieving the whole set. We allow already for $count to be appended to a resource path identifying a set. As of V4 we can now also nest the $inlinecount query option in the $expand to retrieve the count for that set after, also new, optionally applying a filter to that set. I can see cases were you would only want to retrieve the count without actually expanding such a navigation property. So I was wondering if we could allow the use of $count in a select to express the fact that the odata.count annotation for such navigation property ought to be included in the response and at the same time, while expanding, wouldn't want to use $count instead of $inlinecount in the expansion as well, thereby getting rid of the requirement for a special $inlinecount altogether.\n\n### Proposal\n\nsee also [ODATA-323](https://issues.oasis-open.org/browse/ODATA-323)\n\n- allowing /$count to be appended to any property representing a collection (of primitive, complex or entity type) in the $expand clause resulting in the count of the property being returned\n-In Atom, support the metadata:count element as a direct child of a navigation link for getting just the count of related entities\n\nImported from [ODATA-339](https://issues.oasis-open.org/browse/ODATA-339)",
    "labels": [
      "ABNF",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Representation of entity references in odata.metadata annotation",
    "body": "The proposed representation of an entity reference in section 4.4.1 of the JSON Format includes a navigation property in the path. Entity references can also be taken directly from entities in entity sets, and therefore not have a navigation property to be used, but I also believe that the referenced entity, or set thereof, was the result of referring to a navigation property that the result still would simply be an entity reference, or a set thereof, and that therefore the navigation property path is not required (read: has no particular function) in identifying the type of entity reference.\nMy proposal would be to remove the navigation property in this context.\n\n### Proposal\n\nChange the template for the odata.metadata annotation for an entity reference to:\n\n   {metadata-url}#{entity-set}/$ref[/@Element]\n\nand change/correct the example accordingly where a GET against: \n\nhttp://host/service/Customers(1)/Orders(1)/$ref\n\nwould return a response with the following odata.metadata annotation:\n\nhttp://host/servers/$metadata#Orders/$ref/@Element\n\n\nImported from [ODATA-338](https://issues.oasis-open.org/browse/ODATA-338)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Review results for OData JSON Format Version 4.0",
    "body": "In our review today we came up with the following points and resolution proposals (copied from the chat): \n\nReview document can be found at https://www.oasis-open.org/committees/download.php/48589/odata-json-format-v4.0-wd01-2013-03-19.doc\nSDx, HHx and so on are references to comments in this document \n\nJSON 1 introduction\nHH2: accepted\nSD3: accepted - rephrase sentence\nSD4: accepted\n 3 Requesting the JSON Format\nHubert: open ticket to make json constant case-insensitive\nRalf: sync with Protocol spec and clearly state that mime types are allowed in $format\nSD6: no action\nSD7: no action\nSD8: state that odata.metadata=minimal MAY be explicitly requested\nSD11: accepted - make clear that structure is similar, not necessarily the content\nHH13: Ralf to check with Mike whether last bullet point on navigation properties is necessary\nHH14: accepted\nSD15: accepted\nSD16: accepted\nSD18: no action\nHH19: state use cases here\nHH21: correct example URLs and remove $links\nHH21: Hubert will open a ticket regarding the template\nSD20: correct here, no action\nSD22: no action\n\n### Proposal\n\nSee description.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48825/odata-meeting-32_on-20130411-minutes.html#odata-337\n\nImported from [ODATA-337](https://issues.oasis-open.org/browse/ODATA-337)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Be more generous on accepting values for the $format query option",
    "body": "In the latest version of the documents we are currently only allowing the lower case versions of the format shortcuts (json, xml and atom) whereas we used to accept the upper case versions as well.\n\n### Proposal\n\nTreat value specified for the $format query option case insensitive, equal to the Accept header. \n\nImported from [ODATA-336](https://issues.oasis-open.org/browse/ODATA-336)",
    "labels": [
      "ABNF",
      "ATOM Format",
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Review results for OData ATOM Format Version 4.0",
    "body": "In our review today we came up with the following points and resolution proposals (copied from the chat):\n\nReview document can be found at https://www.oasis-open.org/committees/download.php/48588/odata-atom-format-v4.0-wd01-2013-03-19.doc\nSDx and so on are references to comments in this document\n\n\nSD2: follow Stefan's proposal\nJW3: follow\nAtom 3 Primitive Types: use same structure and example as in JSON 4.11\nAnd sync the document structures!!!\nThis covers  SD4 and SD5\nAtom 4 Use of Atom: avoid \"safely ignore\" and instead follow wording of Atom on processing foreign markup\nRefers to SD6\nCommon outline of format documents\nFollow conformance: READ, WRITE, sophisticated\nMirror hypermedia-driven client: service document, collections, entities, properties\nEasier headlines: n.m Element atom:xxx, n.m.1 Attribute yyy\nEmpty elements in examples: no space before \"closing\" slash\nCommon outline refers to SD7\nEmpty elements refers to SD9\nCheck if we can use another monospaced font for code examples other than Courier New\nSD10: accepted\nSD11: accepted - follow/cite part 1 Protocol passage\nIn general: restrict format specs to format-specific stuff and don't repeat the format-independent Core stuff\nAtom 12 Action Parameters\nSD14: accepted - make clear that sentence talks only about <parameters> element, not its children\nSD15: accepted - state difference between explicitly passing null and passing nothing for allowing the default value\nAtom 13 Errors as XML\nSD16: accepted\nSD17: accepted\nSD18: accepted - not format specific, just refer to Core\nMaybe state that OData is in sync with Atom Syndication here\n\n\n### Proposal\n\nSee description.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48825/odata-meeting-32_on-20130411-minutes.html#odata-335\n\nImported from [ODATA-335](https://issues.oasis-open.org/browse/ODATA-335)",
    "labels": [
      "ATOM Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Integrate conformance concept with careful consideration of versioning semantics (into protocol work product)",
    "body": "There is a need for finding and documenting a well-weighted and working interplay of versioning and conformance levels (client and server). These dimensions are neither aligned nor orthogonal. The Service Conformance Level concept [Conformance Levels](https://www.oasis-open.org/committees/download.php/48595/OData%20Service%20Conformance%20Levels.docx)  and the latest [OData Core Part 1: Protocol, Version 4.0](https://www.oasis-open.org/committees/download.php/48604/odata-core-v4.0-wd01-part1-protocol-2013-03-20.doc)  are to be combined into a subsequent protocol work products conformance section in a way, that where applicable allows conformance levels represent fine-grained control abput each party in the communication MAY safely assume from the partner and where to further investigate.\n\nVersions and conformance may appear as major and minor aspects of versioning from some viewpoints. Where this is so, we should clearly state and explain the interworking. Where it is not but unrelated (layered on top) we should equally explain and document this.\n\nI undestand, that currently we plan to define one client related conformance level, namely 'the minimal requirements for an OData Client to be interoperable across OData services.' (everything 'more versatile' is ok, below is well not enough. Right?)\n\nFurther we segragate the server capabilities w.r.t conformance into three levels: 'Publishing', 'Service' and 'Full' (ordered by ascending versatility).\n\nWhen it comes to versioning, the version should be negotiated on a connection (series of request-response-pairs) basis but should not depend upon attributes of the response (as I understood from discussion on the opendata.org mailing list???)\n\nThe server we describe as somehow \"being version 4.0\" and conforming to level \"some-level\" should send the min version his response needs to be interpreted, as all clients are assumed to be equal or better than minimal conformance :-)\n\nIf the client requested a version below the one needed for the response (may that happen?) the server will indicate this as an error somehow.\n\nSo client sends max version she understands, server answers with error xor min version <= max version(of clients request) response.\n\nDoes this crude collection help in seeding ammending the protocol with the content of the conformnace concept document and subsequent clean-up / rewrite of the relevant text?? I hope so.\n\nAlso maybe matrices depicting aspects currently described as per conformance level separate itemized listings in the concept document might be helfull formats (like eg. one line in such a table would be Support for /$count with empty cell in 'Publishing' column, 'S' (for SHOULD) in 'Service' and 'M' (for MUST) in 'Full' column.\n\n\n### Proposal\n\nApprove conformance statements in current documents:\n\nIn Protocol:\n12\tConformance\nOData is designed as a set of conventions that can be layered on top of existing standards to provide common representations for common functionality. Not all services will support all of the conventions defined in the protocol; services choose those conventions defined in OData as the representation to expose that functionality appropriate for their scenarios.\nTo aid in client/server interoperability, this specification defines multiple levels of conformance for an OData Service, as well as the minimal requirements for an OData Client to be interoperable across OData services.\n12.1 OData Service Conformance Levels\nOData defines three levels of conformance for an OData Service.\nThe conformance levels are design to correspond to different service scenarios. For example, a service that publishes data compliant with one or more of the OData defined formats may comply with the OData Minimal Conformance Level without supporting any additional functionality. A service that supports finer grained query functionality may comply with the OData Intermediate Conformance Level. Services that conform to the OData Advanced Conformance Level can expect to interoperate with the most functionality against the broadest range of generic clients.\nServices are encouraged to support as much additional functionality beyond their level of conformance as is appropriate for their intended scenario.\n12.1.1 OData Minimal Conformance Level\nIn order to conform to the OData Minimal conformance level, a service:\n•\tMUST publish a service document at the service root\n•\tMUST return data according to at least one of the OData defined formats\n•\tMUST support server-driven paging when returning partial results\n•\tMUST return the appropriate OData-Version header\n•\tMUST honor the semantics the following headers, or fail the request\no\tAccept\no\tOData-MaxVersion\n•\tMUST follow OData guidelines for extensibility\n•\tMUST successfully parse the request according to [OData-ABNF] for any supported system query string options and either follow the specification or return 501 Not Implemented for any unsupported functionality \n•\tMUST expose only data types defined in this specification\n•\tMUST NOT require clients to understand any metadata or instance annotations, custom headers, or custom content in the payload in order to correctly consume the service\n•\tMUST NOT violate any OData update semantics\n•\tSHOULD support $expand specifically to enable clients to define the extent of the graph to retrieve\n•\tMUST NOT violate any other OData defined semantics\n\nIn addition, to be considered an Updatable OData Service, the service:\n•\tMUST include edit links (explicitly or implicitly) for all updatable or deletable resources\n•\tMUST support POST of new entities to insertable entity sets\n•\tMUST support POST of new related entities to updatable navigation properties\n•\tMUST support POST to $ref to add an existing entity to an updatable related collection\n•\tMUST support PUT to $ref to set an existing single updatable related entity\n•\tMUST support PATCH to all edit links for updatable resources\n•\tMUST support DELETE to all edit links for deleteable resources\n•\tMUST support DELETE to $ref to remove an entity from an updatable navigation property\n•\tMUST support if-match header in update/delete of any resources returned with an ETag\n•\tMUST return a Location header from POST with the edit-link or self-link of the created resource\n•\tMUST include the OData-EntityId header in response to any POST/PATCH that returns 204 No Content\n•\tMUST support Upserts \n•\tSHOULD support PUT and PATCH to an individual primitive or complex property (respectively)\n•\tSHOULD support DELETE to set an individual property to null\n•\tSHOULD support deep inserts \n12.1.2 OData Intermediate Conformance Level\nIn order to conform to the OData Intermediate Conformance level, a service:\n•\tMUST conform to the OData Minimal level\n•\tSHOULD publish metadata at /$metadata according to [OData-CSDL]\n•\tSHOULD support the OData JSON format\n•\tMUST successfully parse the [OData ABNF] and either follow the specification or return 501 Not Implemented for any unsupported functionality\n•\tMUST support $select\n•\tMUST support casting to a derived type if present in the model\n•\tMUST support $top\n•\tMUST support /$value on media entities and individual properties\n•\tMUST support $filter\no\tMUST support eq, ne filter operations on filterable properties\no\tMUST support aliases in $filter expressions\no\tSHOULD support additional filter operations and MUST fail on any unsupported filter operations\no\tSHOULD support the canonical functions and MUST fail on any unsupported canonical functions\n•\tSHOULD support $search\n•\tSHOULD support $skip\n•\tSHOULD support /$count\n•\tSHOULD support $expand for expandable navigation properties\no\tSHOULD support $filter on expanded properties\n•\tSHOULD support the canonical functions any and all on navigation and collection-valued properties \n•\tSHOULD support /$count on navigation, collection properties within a $filter expression\n•\tSHOULD support $orderby asc and desc on individual properties\n12.1.3 OData Advanced Conformance Level\nIn order to conform to the OData Advanced Conformance level, a service:\n•\tMUST conform to at least the OData Intermediate Conformance Level\n•\tMUST publish metadata at /$metadata according to [OData-CSDL] \n•\tMUST support the OData JSON format\n•\tMUST support /$count on navigation and collection properties within a $filter expression\n•\tMUST support the canonical functions any and all on navigation and collection-valued properties\n•\tMUST support $skip\n•\tMUST support /$count on collection valued resource paths\n•\tMUST support $inlinecount\n•\tMUST support $orderby asc and desc on individual properties\n•\tMUST support $expand for expandable navigation properties\no\tMUST support returning references for expanded properties\no\tMUST support $filter on filterable properties of expanded entities\no\tMUST support cast segment in expand with derived types\no\tSHOULD support $orderby asc and desc on individual properties \no\tSHOULD support $inlinecount of expanded properties\no\tSHOULD support $top and $skip on expanded properties\no\tSHOULD support $search on expanded properties\no\tSHOULD support $levels for recursive expand\n•\tMUST support $search\n•\tMUST support $batch \n•\tMUST support the resource path conventions defined in [OData-URL]\n•\tSHOULD support Asynchronous operations\n•\tSHOULD support Delta change tracking\n•\tSHOULD support queries rooted at the entity container\n•\tSHOULD support a conforming OData service interface over metadata\n12.2 Interoperable OData Clients\nTo be generally interoperable, OData Clients:\n•\tMUST specify the Odata-MaxVersion header in request\n•\tMUST specify OData-Version and Content-Type in any request with a payload\n•\tMUST be a conforming consumer of OData as defined in [OData-JSON]\n•\tMUST follow redirects\n•\tMUST be correctly handle next links\n•\tMUST be a conformant client of metadata as defined in [OData-CSDL]\n•\tMUST support instances returning properties and navigation properties not specified in metadata\n•\tMUST support entity instances with external metadata\n•\tMUST support properties with externally defined data types\n•\tMAY request entity references in place of entities previously returned in the response\n•\tMAY support deleted entries, link entries, deleted link entries in a delta response\n•\tMAY support asynchronous responses\n•\tMAY support odata.metadata=minimal in a JSON response\n•\tMAY support odata.streaming\nTo support updates, OData Clients:\n•\tMUST generate PATCH requests for updates\n\nIn CSDL:\n\nThe contributions of the OASIS OData Technical Committee members, enumerated in [OData-Protocol], are gratefully acknowledged.\n\nAtom:\nConforming clients MUST be prepared to consume a service that uses any or all of the constructs defined in this specification, including custom annotations defined by the service, and MUST ignore any constructs not defined in this version of the specification.\nA conforming OData service MUST comply with one of the conformance levels defined in [OData-Protocol].\nIn order to conform to the OData Atom format, a service:\n•\tMUST support the application/atom+xml, application/xml and application/atomsvc+xml media types in the Accept header\n•\tSHOULD support the $format system query option\n•\tMUST include the next link in feeds containing partial results\n•\tMUST return service documents as Atom service documents\n•\tMUST return XML responses in well formed XML according to this specification\n•\tMUST return well-formed Atom payloads with the following exceptions:\no\tThe next link MAY be returned at the end of the payload\no\tThe delta link MAY be returned at the end of the payload\n•\tMUST NOT violate any other aspects of this OData Atom specification\nIn order to be a conforming consumer of the OData Atom format, a client or service:\n•\tMUST be prepared to receive all data types \no\tdefined in this specification defined in [OData-CSDL] (client)\no\texposed by the service (service)\n•\tMUST be prepared to receive custom annotations\n\nJSON:\n\nA conforming OData service MUST comply with one of the conformance levels defined in [OData-Protocol].\nIn order to conform to the OData JSON format, a service:\n•\tMUST support the application/json media type in the Accept header\n•\tSHOULD support the $format system query option\n•\tMAY support the odata.streaming=true parameter in the Accept header\n•\tMUST return well-formed JSON payloads\n•\tMUST support odata.metadata=full\n•\tMAY return full metadata regardless of odata.metadata\n•\tMUST include the odata.nextLink annotation in the feed for partial results\n•\tMUST NOT violate any other aspects of this OData JSON specification\nIn order to be a conforming consumer of the OData JSON format, a client or service:\n•\tMUST understand odata.metadata=minimal OR explicitly specify no odata.metadata=none or odata.metadata=full in request\n•\tMUST be prepared to consume a response with full metadata\n•\tMUST NOT require odata.streaming=true in the Content-Type header\n•\tMUST be prepared to receive all data types\no\tdefined in this specification (client)\no\texposed by the service (service)\n•\tMUST support entities returned as entity references\n•\tMUST interpret all odata annotations defined according to the version of the response\n•\tMUST be prepared to receive any annotations, including odata annotations, not defined in the OData version of the response\n•\tMUST be prepared to receive custom annotations\n\nCSDL:\nConforming services MUST follow all rules of this specification for the types, sets, operations, containers and annotations they expose. \nConforming clients MUST be prepared to consume a model that uses any or all of the constructs defined in this specification, including custom annotations defined by the service, and MUST ignore any elements or attributes not defined in this version of the specification.\n\nPlus Comments:\nProtocol: Call out that  you interoperate with any service that complies at least to OData Minimal and implements JSON.\nAtom: don't need to understand deltas to be interoperable\n\n\n\n\nImported from [ODATA-334](https://issues.oasis-open.org/browse/ODATA-334)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Visualize high level EDM overview through means of small diagrams to aid the reader on understanding base terms",
    "body": "This is based on my review of the latest revision [OData Core Part 1: Protocol, Version 4.0](https://www.oasis-open.org/committees/download.php/48762/odata-core-v4.0-wd01-part1-protocol-current-2013-4-5MP.docx).\nThe section on entity data model must be hard to read, as it tries to describe a survival guide for a generic model, where it comes to the nitty-gritty. \nThat's ok. I am fine with that. First we really need the nitty-gritty details and second we are not writing children books. \nBut maybe we can do better.\n\nA) One problem for the astute reader seems to lie in the details of adjectives/attributes to the main terms.\nB) Another are related terms we introduce.\nC) Third the topological complexity, that cries for a parallel depict through a picture or some pictures.\n\nTo A)\nDifferentiating between an Entity and a Named Entity is one example\n\nTo B)\nThe wrapper in specific where to segragate from the Entity Container ...\n\nTo C)\nI may volunteer to paint some :-) maybe during the prep phase of the face to face in Walldorf as to receive early feedback and converge fast.\nAssume one for entity -> entities\nAnother for relationships external and derived\nYet another for containers and their objects (entities, actions, functions) showing also wrappers maybe as top-level hull for other \"things\"?\n\n\n### Proposal\n\nClose without further action as the Metadata Service chapter now contains small diagrams that explain the relationship of CSDL elements.\n\nImported from [ODATA-333](https://issues.oasis-open.org/browse/ODATA-333)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Ensure comparability and emphasize differences in directly grokable way for all formats (currently only ATOM and JSON)",
    "body": "The current revisions of [OData ATOM Format Version 4.0](https://www.oasis-open.org/committees/download.php/48588/odata-atom-format-v4.0-wd01-2013-03-19.doc) and [OData JSON Format Version 4.0](https://www.oasis-open.org/committees/download.php/48589/odata-json-format-v4.0-wd01-2013-03-19.doc) might be easily enhanced for the reader in performing structural transformations and/or add examples to ensure comparability and emphasize differences in directly grokable way for the form that open data uses in message instances (request and repsonse the like).\n\n1. I think structuring the documents in a directly similar open data oriented way should be a good first step.\n2. Highlight the (possible) gotchas when changing from one format to another could be described in all places, where information might get lost or needs complicated transformations on part of the client and/or server.\n3. Share the same open data example content in 'format#xyz' form, so that the reader has a spot on for the format and not has to blend out the content when comparing the formats.\n4. Show - besides noting conventional suppression policies per format - how to explicitly set default values, so that it is clear for any case.\n5. Indicate, where a user or implementer using ATOM, JSON for years should be aware of unconventional usage of the format in OData context\n\n\n\n### Proposal\n\nEnsure comparability and emphasize differences in directly grokable way for all formats (currently only ATOM and JSON)\n\nImported from [ODATA-332](https://issues.oasis-open.org/browse/ODATA-332)",
    "labels": [
      "ATOM Format",
      "Extension for JSON Data",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Ensure that high level grouping expressions like eg. 'create operations' are easily mapped to real actions (HTTP methods, OData expectations)",
    "body": "In several places we do and might further use grouping expressions like eg. 'create operations' to subsequently state some rule applicable for this class of 'operations'. \nWe should ensure, that the reader always finds a place, where she can lookup (at least typical) members of this classification and which are operationable i.e. real HTTP methods and such.\n\nFirst Proposal was like:\nExplain the higg level classifications like 'create operations' in terms of real HTTP methods and OData expectations somewhere in a good referenceable place.\n\n### Proposal\n\nLink the high level classifications like 'create operations' to the section in the document where they are explained if the terms are not identical (like eg. Create Entry)..\n\nImported from [ODATA-331](https://issues.oasis-open.org/browse/ODATA-331)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define whether null values come first or last with $orderby asc",
    "body": "See summary\n\n### Proposal\n\nNull values come before non-null values in ascending order and consequently after non-null values in descending order.\n\nImported from [ODATA-330](https://issues.oasis-open.org/browse/ODATA-330)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Approve Editoral Changes",
    "body": "The following version of the protocol document contains significant non-technical editorial changes:\nhttps://www.oasis-open.org/apps/org/workgroup/odata/download.php/48762/odata-core-v4.0-wd01-part1-protocol-current-2013-4-5MP.docx\n\nThese changes were made to improve consistency and readability, remove redundancy, and address other editorial issues in the document, and include (but are not limited to)\n-ordering http headers alphabetically\n-adding missing http headers\n-reworded data model section\n-added missing error codes (501, 304,...)\n-rearranged sections ($select, $expand, $format shouldn't be nested under querying collections)\n-moved information on declaring and advertising actions/functions to a common section.\n\nThese changes should all be editorial in nature.\n\n\n\n\n### Proposal\n\nApproved applied edits\n\nApproved: https://tools.oasis-open.org/issues/browse/[ODATA-337](https://issues.oasis-open.org/browse/ODATA-337)\n\nImported from [ODATA-329](https://issues.oasis-open.org/browse/ODATA-329)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Remove MinDataServiceVersion (OData-MinVersion)",
    "body": "We added MinDataServiceVersion as part of an update to our version negotiation primarily because (at the time) we returned results in the lowest format supported by the service, forcing clients to have to support old variants of the format even against new services. We changed the specification to say that the service must return the max version supported that is less than or equal to any max version specified in the client request, addressing this scenario.\n\nThe only place that mindataserviceversion is still useful is if a client is speaking to a downlevel service and wants to say \"don't bother responding if you don't support at least version x\".  \n \nWe also return the version of the service in the metadata document, so (other than version negotiation for the metadata document) the client has a way to find out the version of the service and decide if it is willing to handle responses.\n\nWe can simplify the versioning story, and doc, by removing this extraneous versioning header.\n\n### Proposal\n\nRemove OData-MinVersion.\n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-328\n\nImported from [ODATA-328](https://issues.oasis-open.org/browse/ODATA-328)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Service MUST only return async if return-async is specified",
    "body": "Today we are a little inconsistent in the spec. We imply that the client must specify return-async in order for the service to return async, but in other cases we imply the service may return async if the client specifies either return-async OR wait.\n\nI had a quick chat with James Snell, and he agreed that we should only return async if the client specifically specifies return-async. If the client specifies wait, and not return-async, we should not return asynchronously.\n\nOur options are to:\n1) Ignore the wait\n2) use wait as a suggestion for how long to wait before timing out the synchronous request\n3) leave it undefined (but still say that the service can't use it to return asynchronously if return-async is not specified).\n\nI kinda like 2), using wait without return-async as a hint from the client how long they want to wait before timing out the request.\n\n### Proposal\n\nRemove any suggestion that the service can return asynchronously if the client specifies wait but does not specify return-async and explicitly specify that the wait preference without return-async preference is a hint from the client as to how long they want to wait before timing out the synchronous request.\n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-327\n\nImported from [ODATA-327](https://issues.oasis-open.org/browse/ODATA-327)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "include-annotations should allow inclusion (or exclusion) of specific terms",
    "body": "The odata.include-annotations preference allows the client to specify which annotations are included in the response payload.\n\nWe include annotations by specifying the namespace of the annotation, but there may be cases where only one (or a few number) of the annotations within a (potentially large) namespace are desired.\n\nWe should support specifying individual annotations using namespace.termname.\n\nNote that we currently say that, if you just specify a namespace, you include only the terms located directly in that namespace, while if you specify namespace.* you include all annotations within that namespace and nested namespaces. We may introduce an ambiguity if we allow namespace.termname where the service needs to know the difference between a namespace name and a term name in order to differentiate. If this is an issue we can:\n1) just use namespace.* for everything within a namespace (recursively) and not differentiate between direct and nested, or\n2) disambiguate by the case where I want everything directly contained by a namespace (i.e., myroot/mynamespace/.)\n3) disambiguate the case where I want a term (i.e., namespace@termname)\n\n\n### Proposal\n\n1. use namespace.* for all terms from a given namespace, recursively\n2. use namespace.termname for a single term from a namespace\n\n\n\nImported from [ODATA-326](https://issues.oasis-open.org/browse/ODATA-326)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify what aliases can be used in instance annotations",
    "body": "We define aliases in $metadata that allow us to alias namespaces when referencing types and annotations in CSDL.\n\nWe also reference types and annotations in data, but don't specify whether or not aliases are allowed in the data payload. \n\nWe should allow aliases defined in $metadata to be used in payloads.\n\n### Proposal\n\nClarify that aliases defined in $metadata can be used in namespace qualified names within the payload described by that $metadata.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-325\n\nImported from [ODATA-325](https://issues.oasis-open.org/browse/ODATA-325)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Support external metadata references in payload",
    "body": "OData services may link to other external services. Where the target of that link is an entity or collection of entities we use navigation links.\n\nFor cases where the type of the related entity is not known in metadata (either because it is a dynamic navigation property or the type is defined as Edm.EntityType or Collection(Edm.EntityType) in order to avoid referencing other type definitions from $metadata) clients consuming the feed need some way of discovering the type of a particular entity.\n\nWe have two ways of conveying type information; we use odata.metadata to convey the metadata that describes the result, and odata.type to describe the type of a property within the result.\nToday we have only one odata.metadata annotation, at the top level, and we expect all odata.type annotations to be referenced from within that odata.metadata. This doesn't allow individual instances to link to entities in other services without referencing the metadata in their own service document.\n\nWe have a similar requirement where an instance in a feed is a derived type of the base type but that derived type is not defined or referenced by the $metadata of the response.\n\nWe have two (compatible) choices:\n1) Allow odata.type to contain a full url to a metadata description of the related type, or\n2) Allow the navigation property (whether present in the payload or not) to be annotated with the odata.metadata annotation.\n\nFor derived types I prefer #1 as we already use odata.type for derived types. \n\nFor navigation properties I prefer #2 as it is more expressive and allows \"rebasing\" the root metadata for nested expanded content.\n\n### Proposal\n\n1. Allow odata.type to contain a full url to a metadata description of a derived type that is not referenced by the base metadata document\n2. Allow a navigation property to be annotated with the odata.metadata annotation to define the type of the target. This becomes the new base metadata for content nested within that expanded nav prop. For open navigation properties defined within the same metadata document, the odata.metadata annotation may be relative to the base odata.metadata document.\n3. In ATOM, define an optional metadata:metadata attribute, used within a <link>, to specify the metadata that describes the related entities. The format for this is the same as the odata.metadata annotation in JSON.\n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-324\n\nImported from [ODATA-324](https://issues.oasis-open.org/browse/ODATA-324)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "InlineCount should just be boolean",
    "body": "Today a client specifies that they want a count of entities returned inline by specifying the query option $inlinecount=allpages.\n\nthe value \"allpages\" is meaningless and implies there is some other \"singlepage\" or \"mostpages\" or \"everyotherpage\" option.\n\n\n\n### Proposal\n\nsupport $count as a replacement for $inlinecount as a query parameter and expand options. i.e.;\n  - /customers?$count=true returns customers with inline count\n  - /customers?$count=1 returns customers with inline count\n  - /customers?$expand=orders($count=true) returns customers and their orders with inline count\n  - /customers?$expand=orders($count=1) returns customers and their orders with inline count\n\nchange the ABNF for $inlinecount to:\ninlinecount = '$count\n\n\nImported from [ODATA-323](https://issues.oasis-open.org/browse/ODATA-323)",
    "labels": [
      "ABNF",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Define how nested service documents are supported",
    "body": "Service documents allow a hypermedia-driven client to dynamically explore services. Such clients should be able to navigate across services that may not share the same root metadata or service document.\n\nSupporting nested service documents (service documents referencing other service documents) allows a federated experience including data from multiple loosely-coupled services.\n\nIn ATOM service documents clients today model this by exposing a collection whose type is application/atomsvc+xml. We should call out that usage explicitly, and support a similar \"ServiceDocument\" entry in JSON service documents.\n\n### Proposal\n\n1. In [JSON], add \"ServiceDocument\" as a new \"Kind\" to represent a link to a related service document.\n2. In [ATOM], add \"metadata:service-document\" element with a required \"href\" attribute and required <atom:title> child element \n3. In [ATOM], define a metadata:metadata attribute that can be present on a <workspace> element to specify the location of the $metadata that describes the service.\n4. Describe nested service documents in the appropriate section of [CORE]\n\nApproved: https://www.oasis-open.org/committees/download.php/48871/odata-meeting-33_on-20130418-minutes.html#odata-322\n\nImported from [ODATA-322](https://issues.oasis-open.org/browse/ODATA-322)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Use consistent naming for headers",
    "body": "Where we add odata-specific names within an open http extensibility point (for example, preferences) we generally prefixed the names we define with \"OData-\".\n\nFor headers we even reserve headers beginning with \"OData\".  However, the headers in the original contribution did not follow this proposed naming pattern.\n\nWe should prefix all of the headers we define with \"OData-\".\n\n### Proposal\n\nRename the following headers:\n DataServiceVersion => OData-Version\n MaxDataServiceVersion => OData-MaxVersion\n MinDataServiceVersion => OData-MinVersion\n DataServiceId => OData-EntityId\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-321\n\nImported from [ODATA-321](https://issues.oasis-open.org/browse/ODATA-321)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Should use /@<annotation-name> to reference applied annotations",
    "body": "We recently added the ability to reference the annotation applied to model element by specifying the element followed by \"@\" and the fully qualified name of the annotation.\n\nAs described in reviewing the application of the change, we chose \"@\" in applying the change primarily because it allowed the client to more easily differentiate whether the applied cast was to a type or an annotation term.\n\nHowever, by using \"@\" instead of \"/\", as originally proposed, we lost the ability to identify the different segments of the expression by splitting on \"/\". Referencing the applied annotation really is properly a different segment and should be separated by \"@\".\n\nSO the proposal is to restore the \"/\" to rightly indicate a separate path segment, but to keep the \"@\" as a prefix to the annotation in order to more easily differentiate it as an annotation term.\n\n### Proposal\n\nRestore the \"/\" separator when referencing the applied annotation and retain the \"@\" prefix in the referenced term.\n\nImported from [ODATA-320](https://issues.oasis-open.org/browse/ODATA-320)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow services to include metadata links and metadata ETags into responses",
    "body": "As we defined a list of compatible changes to the data model of a service, it would be useful to notify clients that the metadata has changed, so they can re-read $metadata.\n\nAs the new JSON format in two of its flavors already includes the metadata link, we could just add a metadata etag that clients can compare to the etag of the cached version of $metadata.\n\nWhile we are at it, we can add a metadata link to Atom responses.\n\n### Proposal\n\nAllow services to annotate the odata.metadata annotation with the odata.etag annotation to transport the current ETag of $metadata to clients:\n\n{\n  \"odata.metadata\": \"http://host/service/$metadata\",\n  \"odata.metadata@odata.etag\": \"A1FF3E230954908F\",\n  ...\n}\n\nAllow services to return etag in metadata request and add a metadata link that MAY contain a metadata:etag attribute to Atom responses:\n\n  <link rel=\"http://docs.oasis-open.org/odata/ns/metadata\" metadata:etag=\"A1FF3E230954908F\" href=\"http://host/service/$metadata\" />\n\nmetadata is same as odata.metadata annotation in json.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-319\n\nImported from [ODATA-319](https://issues.oasis-open.org/browse/ODATA-319)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Explicitly state which calendar Date and DateTimeOffset use",
    "body": "See summary\n\n### Proposal\n\nFollow XML Schema 1.1 - http://www.w3.org/TR/xmlschema11-2/#dateTime - and use the proleptic Gregorian calendar, allowing the year zero and negative years.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-318\n\nImported from [ODATA-318](https://issues.oasis-open.org/browse/ODATA-318)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Allow multiple reads in the same transaction",
    "body": "Allow change sets of only read operations.  The idea being you can get a snap shot of potentially unrelated entities at an instance in time.  It would also be useful for deltas where you want to get all the changes (even for unrelated entities) within a single change set request at a certain point of time.\n\n### Proposal\n\nDefine request header\n\n   Expect: odata.isolation=snapshot\n\nOn a batch request this means that all requests in the batch are executed with isolation-level snapshot.\n\nFor requests returning a collection (whether within a batch or not) this means that next-links return consistent data with the same snapshot. \n\nTrying to follow a next-link referring to a snapshot that is no longer available returns 410 Gone or 404 Not Found.\n\nThe odata.isolation preference has no effect on links other than the next-link: navigation links, self-links and edit-links are referring to the \"current\" version, not to the snapshot.\n\nImported from [ODATA-317](https://issues.oasis-open.org/browse/ODATA-317)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Services select a default set of properties in absence of $select",
    "body": "Properties not present in a request payload are already interpreted as having the default value (if defined in $metadata) or the null value (if nullable and without default value).\n\nWhy not allow the same for responses.\n\n### Proposal\n\nClients can explicitly select a set of properties through $select, and can specify $select=* for all structural properties.\nServices must return all selected properties and can return other non-selected properties.\nIn the absence of a select, the service returns a default set of properties that must include all key properties.\nAny time the service returns less than the full set of properties (either because the client specified a select or because the service returned a subset of properties in the absence of a select) the metadata url must reflect the set of selected properties.\nIf a select is present in a metadata url, it must include all expanded navigation properties.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49447/odata-meeting-40_on-20130606-minutes.html#odata-316\n\nImported from [ODATA-316](https://issues.oasis-open.org/browse/ODATA-316)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Entities that may be queryable can be omitted from service document, but then their \"url\" cannot be specified.",
    "body": "CSDL spec (2013-03-19) states in section 12.2.3 \"The IncludeInServiceDocument Attribute\":\n\n  Entity sets that cannot be queried without specifying e.g. a $filter query option SHOULD specify the value false for this attribute.\n\nSo that implies that some entity sets could be client-queryable (e.g. using a $filter) even though they are not mentioned in the service document.\n\nAlso note that the protocol spec (2013-03-19) section 4 \"Service Model\" describeds a typical OData interaction with text that does not mention the client fetching the service document.\n\nNow herein lies the problem: A service document specifies a \"url\" for each exposed resource, in addition to a \"name\", with the implied assumption that the client must use the \"url\", not the \"name\", when formulating requests (otherwise the \"url\" would appear to be meaningless\"). JSON format examples for service documents show \"url\" values that look just like unqualified entity set names.\n\nWe therefore need to clarify:\n\n(1) Is the \"url\" in the elements of a JSON service document meaningless, i.e. can the client ignore this and just use the qualified (SchemaNamespace.EntityContainer.EntitySet) entity set name or unqualified name (for an entity set in the servic'es default entity container) when formulating a base URL for CRUD operations?\n\n(2) Does a client with access to the metadata document have ANY reason to need to fetch the content of the service document?\n\n### Proposal\n\nSpecify clearly in the URL conventions specification how a client with the information in the metadata document, but without accessing any information from the service document, can correctly formulate a URL to designate any entity set (or entity, function, or action) with a suitable qualified name (SchemaNamespace.EntityContainer.SomeThing, whether or not it lies in the default entity container) or unqualified name (SomeThing, for items within the service's default entity container).\n\nAlso clarify the purpose of \"url\" in the JSON format service document (or eliminate it entirely), and specify the conditions under which an unqualified \"name\" can appear in the service document (i.e. only for \"things\" in the service's default entity container).\n\nProposal from meeting:\n1. JSON: add \"title\" name-value pair, optional, may contain \"atom:title\" if different from entity set name\n2. ATOM: add optional metadata:name attribute for correlation with $metadata to app:collection, metadata:function-import, metadata:entity. may be omitted if same as href, which it typically is if href is a relative url and the service uses the default naming conventions.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-315\n\nImported from [ODATA-315](https://issues.oasis-open.org/browse/ODATA-315)",
    "labels": [
      "ATOM Format",
      "JSON Format",
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Please clarify the meaning of filter functions applied to DateTimeOffset values",
    "body": "The accepted resolution for [ODATA-122](https://issues.oasis-open.org/browse/ODATA-122) seems to be at odds with protocol spec (2013-03-19) section 10.4.1.2 \"Handling of DateTimeOffset Values\", which now states:\n\n  Services SHOULD preserve the offset of Edm.DateTimeOffset values, if at all possible. However, where the underlying storage does not support offset services MAY be forced to normalize the value to some common time zone (i.e. UTC) in which case the result would be returned with that time zone offset.\n\nSuppose I have a property \"myTime\" of type DateTimeOffset.\n\nIf I send a filter to the server (excuse the pseudo-filter syntax):\n\n    day(myTime) eq day(datetimeoffset'2013-03-21T16:59:44+13')\n\nNow according to protocol spec 10.4.1.2, the server may adjust the RHS literal value to UTC (e.g. due to \"storage\" of the query expression fragments in memory, or in a database if the server so chooses). If the \"day\" function is then applied to the adjusted literal value, it won't give the same results as it would have if applied to the value without conversion to UTC.\n\nIf servers are allowed to adjust the offset in DateTimeOffset values to UTC (or another zone), then a client currently has no guarantee about the meaning of filter functions applied to the values.\n\n--- \n\nOriginal issue text follows:\n---\n\nConsider for example the 'day' function applied to a DateTimeOffset.\n\nIs this supposed to return the 'day' of the value when it is considered as UTC, or the 'day' component as it appears in the original literal value, which implies that the zone offset must be preserved when DateTimeOffset values are propagated?\n\nIf DateTimeOffset values are permitted to be 'normalized' by agents, but are not required to be, then the 'day' function applied to DateTimeOffset value would appear to be meaningless, unless it returns the UTC 'day'.\n\n\n### Proposal\n\nServices MUST take offset into account when evaluating the datetime functions year, month, day, hour, and time (I.e., must evaluate in terms of the offset).\nServices that cannot preserve offsets MUST fail evaluation of datetime functions for values that are not normalized.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49447/odata-meeting-40_on-20130606-minutes.html#odata-314\n\nImported from [ODATA-314](https://issues.oasis-open.org/browse/ODATA-314)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Problem with \"Function Overload Resolution\" due to null values having ambiguous type",
    "body": "CSDL spec (2013-03-12) states in section 10.5.3.4 \"Function overload resolution\"\n\n  Functions overloads are supported in OData, meaning a service MAY expose multiple functions with the same name that take a different set of parameters.\n\n  When a function is invoked (using any of the three parameter syntaxes) the parameter names and parameter values are specified in the URL, and the parameter types can be deduced from each parameter value. The combination of the Function name and the unordered list of parameter types and names is always sufficient to identify a particular function overload.\n\nHowever, if one or more parameter values are null, there might be multiple functions (with same-named parameters but differing types corresponding to the null-valued parameter(s)). A null value can resolve to any primitive/complex/entity type. Thus overload resolution would be ambiguous.\n\n\n### Proposal\n\nExplicitly state that clients MAY use qualified null values of the form null'<PrimitiveType>' (e.g. null'Date') to disambiguate their requests, and that servers MUST respond with 400 Bad Request and ideally an explicitly specified code value in the standard error response.\n\nAdditionally; prohibit overloads that differ only by types within a \"type family\" (integer type family, float type family)\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-313\n\nImported from [ODATA-313](https://issues.oasis-open.org/browse/ODATA-313)",
    "labels": [
      "Protocol",
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "ATOM and JSON formats for Service Document appear to omit information for action imports",
    "body": "In ATOM and JSON format specs (2013-03-19), the service documents can mention function imports but not mention action imports.\n\nIs this an accidental omission, or intentional?\n\n\n### Proposal\n\nExplicitly state in CSDL that action imports are never advertised in service documents.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-312\n\nImported from [ODATA-312](https://issues.oasis-open.org/browse/ODATA-312)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Example JSON in CSDL \"10.5.3.2 Advertising Currently Available Functions within a Payload\" is out of date",
    "body": "In CSDL spec (2013-03-19) section 10.5.3.2 \"Advertising Currently Available Functions within a Payload\", the JSON example is out of date:\n\n- uses \"__metadata\"\n- uses \"tick\" format for Date\n\n\nImported from [ODATA-311](https://issues.oasis-open.org/browse/ODATA-311)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Second CSDL example fails to set IsDefaultEntityContainer=\"true\" in accordance with section 12.1.2",
    "body": "In the CSDL spec (2012-03-19), section 12.1.2 \"The IsDefaultEntityContainer Attribute\" states:\n\nEach metadata document that is used to describe an OData service MUST mark exactly one entity container with this attribute to denote that it is the default.\n\nBut the second CSDL example in section 17.2 has:\n\n      <EntityContainer Name=\"Model1Container\" >\n        <EntitySet Name=\"CustomerSet\" EntityType=\"Model1.Customer\" />\n        <EntitySet Name=\"OrderSet\" EntityType=\"Model1.Order\" />\n      </EntityContainer>\n\nNote that  IsDefaultEntityContainer=\"true\" is missing, which is not in accordance with section 12.1.2.\n\n\nImported from [ODATA-310](https://issues.oasis-open.org/browse/ODATA-310)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "CSDL section \"The edm:Schema\" element should mention edm:Action.",
    "body": "In CSDL spec (2013-03-19), section 5.1 \"The edm:Schema Element\" mentions \"edm:Function\" but fails to mention \"edm:Action\".\n\n\nImported from [ODATA-309](https://issues.oasis-open.org/browse/ODATA-309)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify whether format parameters odata.metadata and odata.streaming may be ignored by services",
    "body": "Are format parameters in the Accept header preferences that may be ignored, or must they result in 406 if they cannot be satisfied?\n\n### Proposal\n\nTreat format parameters in Accept header as preferences and allow services to ignore them.\n\nFrom meeting:\n-format parameters are required to be satisfied. service returns 406 if not satisfied. Note that services may always return more metadata than specified, not less.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-308\n\nImported from [ODATA-308](https://issues.oasis-open.org/browse/ODATA-308)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Return odata.etag in collections also for odata=minimalmetadata",
    "body": "For single entity responses the ETag is contained in the ETag response header.\n\nFor multi-entity responses the header is not sufficient, instead clients need to receive the ETag in the entity metadata, i.e. the odata.etag annotation.\n\nWe do have a Core annotation that tells clients which entity properties influence the ETag, but we currently have no way of telling the client which algorithm the server uses to calculate the ETag.\n\n### Proposal\n\nInclude the odata.etag annotation in responses containing collections of entities also in the odata.metadata=minimal case as the client cannot compute it.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-307\n\nImported from [ODATA-307](https://issues.oasis-open.org/browse/ODATA-307)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Batch Request processing: Define server behavior, if one or more request(s) didn't succeed",
    "body": "The order of Change Sets and non-Change-Set operations in a Batch request is significant as a service MUST process the N components of the Batch in the order received. \nCurrently only the behavior is described, if the last operation in sequence fails.\nHow should the server react, if the first ChangeSet processing fails or if the first non-Change-Set operation fails? Should he terminated the processing or should he continue the processing? How is the Batch Respond Format defined, if the processing is terminated?\n\nThe requests must be processed in sequence, so it would make sense to stop after the first failed request or change sets as a default behaviour.\n\n### Proposal\n\nThe server  MUST process the N components of the Batch in the order received. \nIt continues processing until \n    the first request fails or the first change set fails. \nIf the processing is terminated after the  component M (M<N) the response contains only the first M components; the N-M not processed components are not part of the response.\nThis is the standard processing behavior.\n\nThe client can request by a prefer header odata.continue-on-failure that the server should process all requests and change-sets not stopping if any failure occurs.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48752/odata-meeting-31_on-20130404-minutes.html#odata-306\n\nImported from [ODATA-306](https://issues.oasis-open.org/browse/ODATA-306)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Annotations: introduce path segment to address the count of a collection",
    "body": "Annotations: introduce path segment to address the count of a collection: We could use /$count or @odata.count. \nThe first is consistent with URL rules, the second with odata.mediaContentType etc. that we introduced recently in [ODATA-227](https://issues.oasis-open.org/browse/ODATA-227).\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<edmx:Edmx Version=\"4.0\" xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\">\n  <edmx:Reference Url=\"http://services.odata.org/V3/OData/OData.svc/$metadata\" />\n  <edmx:DataServices>\n    <Schema xmlns=\"http://docs.oasis-open.org/odata/ns/edm\" Namespace=\"CountSample\" Alias=\"CS\">\n\n      <Term Name=\"MostImportantDataFields\" Type=\"Collection(CS.DataFieldType)\" />\n      <ComplexType Name=\"DataFieldType\">\n        <Property Name=\"Label\" Type=\"String\" Nullable=\"true\" />\n        <Property Name=\"Value\" Type=\"Edm.PrimitiveType\" Nullable=\"false\" />\n        <Property Name=\"NavigationPath\" Type=\"Edm.NavigationPropertyPath\" Nullable=\"true\" />\n      </ComplexType>\n\n      <Annotations Target=\"ODataDemo.Category\">\n        <Annotation Term=\"CS.MostImportantDataFields\">\n          <Collection>\n            <Record>\n              <PropertyValue Property=\"Label\" String=\"Category Name\" />\n              <PropertyValue Property=\"Value\" Path=\"Name\" />\n            </Record>\n            <Record>\n              <PropertyValue Property=\"Label\" String=\"Numbers of Products related to this Category\" />\n              <!-- Alternative 1 -->\n              <PropertyValue Property=\"Value\" Path=\"Products/$count\" /> <!-- see $orderby and $filter -->\n              <!-- Alternative 2 -->\n              <PropertyValue Property=\"Value\" Path=\"Products/@odata.count\" /><!-- see CSDL 16.2.10 The edm:Path Expression -->\n              <PropertyValue Property=\"NavigationPath\" NavigationPropertyPath=\"Products\" />\n            </Record>\n          </Collection>\n        </Annotation>\n      </Annotations>\n    </Schema>\n  </edmx:DataServices>\n</edmx:Edmx>\n\n\n### Proposal\n\nDefine a symbolic path segment $count and allow to use this symbolic path segement at the end of the path attribute of the annotation element (see CSDL 16.2.10). See also in the description  --> alternative 1\n\nAccepted: https://www.oasis-open.org/committees/download.php/48622/odata-meeting-30_on-20130321-minutes.html#odata-305\n\nImported from [ODATA-305](https://issues.oasis-open.org/browse/ODATA-305)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Add TargetKey attribute to <PropertyRef> within a <ReferentialConstraint>",
    "body": "Today we require that a <ReferentialConstraint> element contain the same number of <PropertyRef> elements, in the same order, as the <PropertyRef> elements of the <Key> of the related entity.\n\nThis is the only place where we rely on the ordering of the properties of the key.\n\nWe should instead add a TargetKey attribute to explicitly specify the key property of the related entity to which a <PropertyRef> within a <ReferentialConstraint> applies.\n\n### Proposal\n\nMake the ReferentialConstraint a direct child of the NavigationProperty element, with attributes \"Property\" and \"ReferencedProperty\".\n\nAccepted: https://www.oasis-open.org/committees/download.php/48622/odata-meeting-30_on-20130321-minutes.html#odata-304\n\nImported from [ODATA-304](https://issues.oasis-open.org/browse/ODATA-304)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Support abstract entity types without key properties",
    "body": "Today EntityTypes require key properties, and all entity types within a type hierarchy must have the same key.\n\nThere are cases where it would be very useful to define abstract entity types without a key field, but define that they key fields must be specified before the entity type can be used in an entity set, following the exact same rules as we have defined for the new abstract base Edm.EntityType.\n\nIn particular, this would allow an organization like schema.org to define an ontology in terms of abstract entities and relationships. A service would then have the choice of directly deriving from those types, specifying the keys used by that particular service (and potentially introducing additional properties), or using those types as terms and applying the terms to their model.\n\nI think this will be critical for organizations like schema.org to adopt odata vocabularies.\n\n### Proposal\n\n1) Clarify that abstract entities can only derive from other abstract entities\n2) Specify that an entity with abstract=true does not need to define, or derive from a base type that has defined, a key property\n3) Specify that an entity that does not specify abstract=true must define a key, or derive from a base type that has a key defined (directly or indirectly)\n4) Specify that an EntityType with a base type that has a key defined, or is defined with abstract=true, does not need to define any properties\n\nNote: the key must only be defined once. If a base type defines a key the derived type must not define the key\n\nAccepted: https://www.oasis-open.org/committees/download.php/48622/odata-meeting-30_on-20130321-minutes.html#odata-303\n\nImported from [ODATA-303](https://issues.oasis-open.org/browse/ODATA-303)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify scope uniqueness for EntityContainer name",
    "body": "CSDL spec (2013-03-12) says:\n\n12.1.1 The Name Attribute\n\nThe entity container MUST provide a unique SimpleIdentifier value for the Name attribute.\n\n---\n\nIt isn't clear whether this uniquess is within the scope of the Schema, or the entire metadata document. For example, consider:\n\n<edmx:Edmx xmlns:edmx=\"http://docs.oasis-open.org/odata/ns/edmx\"\n           Version=\"4.0\">\n  <edmx:DataServices DataServiceVersion=\"4.0\" >\n    <Schema xmlns=\"http://docs.oasis-open.org/odata/ns/edm\" Namespace=\"ODataDemo1\">\n      <EntityContainer Name=\"DemoService\" IsDefaultEntityContainer=\"false\">\n      </EntityContainer>\n    </Schema>\n    <Schema xmlns=\"http://docs.oasis-open.org/odata/ns/edm\" Namespace=\"ODataDemo2\">\n      <EntityContainer Name=\"DemoService\" IsDefaultEntityContainer=\"false\">\n      </EntityContainer>\n    </Schema>\n  </edmx:DataServices>\n</edmx:Edmx>\n\nNote how there are two DemoService containers, each is unique within the scope of its parent Schema. However DemoService is not unique within the metadata document.\n\n\n### Proposal\n\nClarify that EntityContainer name must be unique within the schema, not within the entire metadata document\n\n\nImported from [ODATA-302](https://issues.oasis-open.org/browse/ODATA-302)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Guidance around data authorization model and secure authenticated access to an OData Service",
    "body": "For interoperability it is highly desirable to define common minimum set of authentication methods, e.g. if a service requires authentication, it MUST accept basic authentication over HTTPS in addition to whatever else it chooses.\n\nFor data authorization we give guidance whether the data model may depend on the authenticated user, only the data content. It puts a higher burden on clients if properties or entity sets appear in or disappear from the model depending on the authenticated user, requiring to always first interpret $metadata, or if only the data content depends on it, i.e. entities show up or not, nullable properties appear to be null or contain confidential information.\n\n### Proposal\n\nPublishers of services requiring authentication SHOULD consider supporting basic authentication over HTTPS and MAY support other authentication methods (highlight this fact  in *intermediate* conformance level). Interoperable clients SHOULD be prepared to handle basic authentication.\n\nServices SHOULD NOT change their data model depending on the authenticated user. If the data model is user (group) dependent, all changes MUST be safe changes as defined in 5.2 Endpoint Versioning when comparing the actual model to the model visible to users with minimal authorizations.\n\nAccepted: https://www.oasis-open.org/committees/download.php/49125/odata-meeting-36_on-20130509-minutes.html#odata-301\n\nDiscussed and accepted: https://www.oasis-open.org/apps/org/workgroup/odata/download.php/49132/odata-meeting-36_on-20130509-minutes.html\n\n\n\nImported from [ODATA-301](https://issues.oasis-open.org/browse/ODATA-301)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Valid Syntax in JSON samples",
    "body": "The current revision of [OData JSON Format Version 4.0](https://www.oasis-open.org/committees/download.php/48525/odata-json-format-v4.0-wd01-2013-03-12-RH.doc) has some syntax errors in sample JSON shown.\nI think we should correct this before going into CSD01.\n\nOne place:is section 4.5 where the JSON has entries in the array of \"values\" that are missing a comma (all three key maps after the value of the key \"kind\".\n\nAnother place is 4.9.2 where I think that a trailing comma is an error (after the last map entry here \"Employees (6)\" \n\nSame in 4.11 (but there maybe an elipsis on an extra line below the last entry line with trailing comma might be more adequate as primitive value representations are the topic of the sample there.\n\nIn 4.17 \"CompanyName@com.contoso.display\" : { \"title\" : true, \"order\" : 1 } should get a comma, whilst \"Orders@com.contoso.purchaseorder.priority\" : 1, at the end should lose it.\n\n \n\n\n### Proposal\n\nCorrect JSON samples where applicable\n\nImported from [ODATA-300](https://issues.oasis-open.org/browse/ODATA-300)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Should Duration be renamed DayTimeDuration in anticipation that we may wish to add YearMonthDuration at a later point?",
    "body": "XML schema defines both dayTimeDuration and yearMonthDuration.\n\nIf we anticipate that we may wish to add CSDL support for YearMonthDuration later, then perhaps Duration should be renamed to DayTimeDuation now.\n\n(Note for comparison how we renamed Point to GeographyPoint, since there is also GeometryPoint)\n\n\n### Proposal\n\nClose with no action.\n\nThe general consensus in naming this \"Duration\" was that the likelihood of adding yearMonthDuration in the future was low enough that we should optimize for simplicity in the more common dayTimeDuration by calling it simply Duration.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48622/odata-meeting-30_on-20130321-minutes.html#odata-299\n\nImported from [ODATA-299](https://issues.oasis-open.org/browse/ODATA-299)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify Requesting Changes to entity sets that include Stream properties",
    "body": "This relates to the procotol spec (2013-03-12) section 10.3 Requesting Changes.\n\nIf a client requests an entity set with change tracking enabled, then Stream contents will never be included inline (Streams have to be separately fetched).\n\nBut it would be good to clarify that if the contents of some Stream properties have changed, then the client (via a delta link) asks for changes to an entity set, they will receive changed entities for any entities whose stream properties have had their content changed.\n\n\n\n\n### Proposal\n\nClarify that change tracking takes into account structural properties of the entity (that is, excludes stream properties). \n\nImported from [ODATA-298](https://issues.oasis-open.org/browse/ODATA-298)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "State explicitly if Content-Length is required, and if so, for which request types it is required",
    "body": "The procotol spec (2013-03-12) shows some examples in section 9.6.210.6.2 Batch Request Body, which include Content-Length.\n\nBut no examples or requirements are provided for the use of Content-Length elsewhere.\n\nWe should state explicitly when Content-Length must be specified (if at all).\n\nNote: Content-Length is particularly valuable for clients accessing large Stream values, as it allows the client applications to provide progress meters in the UI.\n\nIt is less useful for clients accessing entity sets, as the server may (via the use of nextLink) break up a response into multiple pages. If clients could indicate via a preference that they wish to receive an entire entity set (or delta link contents) in a single HTTP response, then Content-Length would be quite useful for entity sets and delta links.\n\n\n### Proposal\n\nDo not add any requirements over HTTP for writing content-length\n\nImported from [ODATA-297](https://issues.oasis-open.org/browse/ODATA-297)",
    "labels": [
      "Protocol",
      "V4.0_WD01",
      "wontDo"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "not_planned"
  },
  {
    "title": "Change tracking may require server-side state, but client cannot advise server to stop tracking in order to allow server to release resources",
    "body": "The protocol spec (2013-03-12) states in section 10.3 Requesting Changes:\n\n  \"The delta link MUST conceptually encode the following information...\"\n\nOne common implementation of change tracking (where filters are used in the original request) is for the server to persist some state (for each client that it is tracking changes for), e.g. a list of primary keys. Otherwise it can be difficult or expensive to calculate an appropriate delta set when the client wants to receive updates, especially if filtered (non-key) properties have been changed in the interim.\n\n(In particular, if the server does not persist some state for each client, the size of a delta link may be excessive if the set of tracked entities is large).\n\nThe problem here is that the OData protocol doesn't appear to define a mechanism for a client to notify the server:\n\n(1) That it no longer wishes the server to track changes for it, or\n\n(2) That it wishes to modify its filter criteria.\n\nSo for issue (1)  the server doesn't have the opportunity to delete any server resources (e.g. persistent state) that it has retained on behalf of the client.\n\nAnd for issue (2) if the client uses a brand new filter with change tracking enabled, the server doesn't have the opportunity to optimize the returned results so as to avoid resending data that happens to exist in both old and new result sets.\n\nWe may decide that the second issue should be deferred to post V4.\n\nBut the first one could easily be addressed if we allowed a DELETE request to be sent to a delta link. If the server doesn't use persistent state for delta links, the DELETE for delta links can be trivially implemented! And if the server does use persistent state, then it would be able to free up resources (assuming co-operative clients).\n\n\n\n\n### Proposal\n\nClients may send a DELETE request to a delta link to indicate that they are no longer interested in change tracking.\n\nImported from [ODATA-296](https://issues.oasis-open.org/browse/ODATA-296)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Services should be able to \"advertise\" what form of change tracking they support",
    "body": "Protocol spec (2013-03-12) states in section 10.3 Requesting Changes.\n\n  Services MAY support requesting changes for arbitrary queries against the entityset or MAY require that any filters be applied solely to immutable (i.e., key) fields.\n\nNow suppose that a client is interested in change tracking for a particular entity set, using a filter.\n\nThe client must first try the query with the filter (and with odata.track-changes preference), and will get a result, but it may finally prove to have no delta link (the client has no way to know in advance if the server will provide a delta link).\n\nThen the client (if the server doesn't provide a delta link) may need to try the query again without a filter, and then somehow apply the filter \"locally\" (on the client-side). Again the client may discover that the server doesn't support change tracking (even for the case without a filter).\n\nIt would be much preferred by client application and framework designers for OData services somehow to be able to \"advertise\" their support (or not) for change tracking (and any limits that are placed upon it, such as what kind of filters can be used), rather than the clients having to discover by a process of trial and error.\n\n\n### Proposal\n\nAdd Core annotation\n\n<Term Name=\"ChangeTracking\" Type=\"Capabilities.ChangeTrackingType\" AppliesTo=\"EntitySet\">\n  <Annotation Term=\"Core.Description\" String=\"Change tracking capabilities of this entity set\" /> \n</Term>\n<ComplexType Name=\"ChangeTrackingType\">\n  <Property Name=\"Supported\" Type=\"Edm.Boiolean\" DefaultValue=\"true\">\n    <Annotation Term=\"Core.Description\" String=\"This entity set supports the odata.track-changes preferenc\" /> \n  </Property>\n  <Property Name=\"FilterableProperties\" Type=\"Collection(Edm.PropertyPath)\" Nullable=\"true\">\n    <Annotation Term=\"Core.Description\" String=\"Change tracking supports filters on these properties\" /> \n  </Property>\n  <Property Name=\"ExpandableProperties\" Type=\"Collection(Edm.NavigationPropertyPath)\" Nullable=\"true\"> \n    <Annotation Term=\"Core.Description\" String=\"Change tracking supports these properties expanded\"/> \n  </Property> \n</ComplexType>\n\nAccepted: https://www.oasis-open.org/committees/download.php/49325/odata-meeting-38_on-20130523-minutes.html#odata-295\n\nImported from [ODATA-295](https://issues.oasis-open.org/browse/ODATA-295)",
    "labels": [
      "Protocol",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarifications needed for Filter System Query Option: Operators and Functions",
    "body": "Some questions which may be nicely addressed by additional clarifications in the URL Conventions spec...\n\nLogical Operators:\n\nQ1. Apart from EQ and NE (where comparison with null can be easily understood to always return TRUE or FALSE), what is the result of using GT, GE, LT, LE with one (or both arguments) being NULL?\n\n    Possible answers: (a) undefined by the spec; (b) result is NULL; (c) result is FALSE; (d) a NULL value is considered less-than non-NULL values.\n\n    If the answer is (b) NULL, then we should define that a filter that evaluates to NULL is considered FALSE, for the purposes of determining a filter match. Since NULLs may propagate up the filter expresion tree rather quickly.\n\nArithmetic Operators:\n\nQ2. What is the result of an arithmetic operator applied to one (or both) NULL operands?\n\n    Possible answers: (a) undefined by the spec; (b) NULL.\n\nQ3. What is the ordering of numeric types for promotion when mixed types are used (e.g. if ADD is applied to Single and Decimal, what type is the result)?\n\n    Suggested answer: SByte, Int16, Int32, Int64, Decimal, Single, Double. Decimal is considered \"less\" than Single because Single can in nearly all implementations have a larger exponent than Decimal (so we prefer \"range\" over \"precision\" for promotion).\n\nQ4. What is the result of a canonical function applied to one (or more) NULL parameters?\n\n    Possible answers: (a) undefined by the spec; (b) NULL; (c) depends on the function (e.g. boolean-valued functions might return FALSE).\n\nOrderBy:\n\nQ5. Where does NULL occur in ascending sort, and where in descending sort?\n\nSpaces in URLs\n\nQ6. Examples in the spec show spaces in filters. Shouldn't these be %-encoded (e.g. \"%20\") so they are valid in URLs?\n\nFilter Related\n\nQ7. Which primitive types support the use of LT, LE, GT, GE? (when answering, consider in particular the binary, boolean and geo types)?\n\nQ8. Which geo types permit the use of EQ and NE? When comparing points (e.g. latitude/longitude for GeographyPoint) is the comparison of coordinates assumed to use Decimal or Double comparison (consider that Single/Double are not usually recommended as suitable for use in database indexes due to the possibility of rounding errors affecting comparisons).\n\nQ9. Are the LHS and RHS operands for a logical operator allowed to have different types (e.g. LHS=Decimal, RHS=Int32)? If so, then can non-string values be compared with string values?\n\nQ10. What is the result of division/modulo arithmetic operators where the divisor is zero? Is it undefined by the spec, null, or +/- infinity? (noting that infinity is only applicable to Single/Double).\n\nQ11. What are the rules for the calculation of the result of modulo where one or both operands are negative?\n\nQ12. What are the rules for scale of the results of arithmetic operators where the operands are decimal?\n\nQ13. Which style of rounding is used by the round function (e.g. round-half-even)?\n\nQ14. Does the 'length' function calculate length according to UTF-8 bytes, UTF-16 characters, or something else? (noting that the CSDL spec defines String as a fixed-length or variable-length sequence of UTF-8 characters, we should just ensure that we have consistent rules for filters).\n\n\n### Proposal\n\nQ1. Apart from EQ and NE (where comparison with null can be easily understood to always return TRUE or FALSE), what is the result of using GT, GE, LT, LE with one (or both arguments) being NULL? \n\nAnswered in [ODATA-166](https://issues.oasis-open.org/browse/ODATA-166)\n\n\nQ2. What is the result of an arithmetic operator applied to one (or both) NULL operands? \n\nAnswered in [ODATA-166](https://issues.oasis-open.org/browse/ODATA-166)\n\n\nQ3. What is the ordering of numeric types for promotion when mixed types are used (e.g. if ADD is applied to Single and Decimal, what type is the result)? \n\nOrder: SByte, Int16, Int32, Int64, Decimal, Single, Double. \n\nDecimal is considered \"less\" than Single because Single can in nearly all implementations have a larger exponent than Decimal (so we prefer \"range\" over \"precision\" for promotion). \n\n\nQ4. What is the result of a canonical function applied to one (or more) NULL parameters? \n\nDefine per function\n\n\nQ5. Where does NULL occur in ascending sort, and where in descending sort? \n\nnull sorts first asc and last desc\n\n\nQ6. Examples in the spec show spaces in filters. Shouldn't these be %-encoded (e.g. \"%20\") so they are valid in URLs? \n\nNot an issue; we url encode, and explicitly mention that the examples are simplified for readability\n\n\nQ7. Which primitive types support the use of LT, LE, GT, GE?\n\nAll except binary, geo, stream, and of course no collection of any primitive type \ntrue is greater than false\n\n\nQ8. Which geo types permit the use of EQ and NE? \n\nGeo types do not permit any comparison operator, and they MUST NOT be used as primary keys, not even Geo.Point. \nReason is that geographies can be \"spatially equal\" without being \"literally\" equal.\n\n\nQ9. Are the LHS and RHS operands for a logical operator allowed to have different types (e.g. LHS=Decimal, RHS=Int32)? If so, then can non-string values be compared with string values? \n\nWe define promotions\n\n\nQ10. What is the result of division/modulo arithmetic operators where the divisor is zero? \n\npositive / zero = INF\nnegative / zero = -INF\nzero / zero = NaN\n\nNaN is not equal to any number, including NaN\nINF is equal to INF and unequal to any other number and -INF\n-INF is equal to -INF and unequal to any other number and INF\n\n\nQ11. What are the rules for the calculation of the result of modulo where one or both operands are negative? \n\nDividend owns the sign. Many programming languages either use this rule or offer special operator that uses this rule, including C++ and SQL\n\n\nQ12. What are the rules for scale of the results of arithmetic operators where the operands are decimal? \nMore general: how do we handle overflows?\n\nDefine per operator in URL 5.1.1.2\n\n\nQ13. Which style of rounding is used by the round function (e.g. round-half-even)? \n\nRound (half) away from zero. This is the default in C++, possible in C# , and possible in Java (rounding-mode HALF_UP).\n\nExamples:\n-1.1 -> -1\n-0.5 -> -1\n0.5 -> 1\n1.1 -> 1\n\n\t\nQ14. Does the 'length' function calculate length according to UTF-8 bytes, UTF-16 characters, or something else? \n\nCharacters, already in URL conventions\n\nImported from [ODATA-294](https://issues.oasis-open.org/browse/ODATA-294)",
    "labels": [
      "URL Conventions",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Clarify protocol or JSON spec: are servers REQUIRED to support JSON format?",
    "body": "Must a server support the JSON format, or could a server be built (and be conformant) if it only support ATOM format?\n\nState clearly (in Protocol spec) that servers MUST support both ATOM and JSON formats.\n\n\n### Proposal\n\nClose with no action: duplicate of [ODATA-248](https://issues.oasis-open.org/browse/ODATA-248)\n\nAccepted: https://www.oasis-open.org/committees/download.php/48549/odata-meeting-29_on-20130314-minutes.html#odata-293\n\nImported from [ODATA-293](https://issues.oasis-open.org/browse/ODATA-293)",
    "labels": [
      "JSON Format",
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Questions on POST, PATCH and merge/replace semantics with related entities in composite relationships",
    "body": "Some additional wording in protocol spec (2013-03-12) sections 10.4.2.2 and 10.4.2.3 might help to answer the following questions.\n\nSome backend systems support creation of composite objects (e.g. a \"purchase order\") as a composite operation requiring parent (e.g. order header) and children (e.g. order lines) to be provided together. And also, they require additions, alterations, and deletions of children to be issued as composite operations against the parent (with either merge or replace semantics, we have seen both).\n\nIn other words, the POST request to create the parent would REQUIRE the related child entities to be included inline. And PATCH requests would need to support inline additions/updates/deletions of children.\n\nQ1. Are such \"composite\" relationships expressible with CSDL (without the use of complex types for the children, but using entities for both parent and children)? If so, then how would that affect the wording of sections 10.4.2.2 and 10.4.2.3.. (One might stipulate that the use of OnDelete=\"Cascade\" is one quite strong indication of a composite relationship).\n\nQ2. Even if \"composite\" relationships are not expressible (except by using complex types for the children), another question may apply to section 10.4.2.3, is that whether a PATCH request is permitted to include inline values for navigation properties? (Can we \"update\" existing children of a parent without replacing all the parent's children, or must each child be separately updated).\n\nQ3. Is there any support in CSDL/protocol for composite relationships (whether children use complex or entity types) that permits \"merge\" (rather than \"replace\") semantics for child objects?\n\nQ4. Assuming that the answers to all the above are \"No\", is the server allowed to REQUIRE the use of a batch request (with a change set) when dealing with \"merge\"-style changes to composite relationships? (Perhaps not currently, but that might be a way forward if we were to consider a future extension).\n\n\n### Proposal\n\nMinimal: Add a clarification to section 10.4.2.3 clarifying that PATCH cannot have inline changes to navigation properties, and that Change Sets (in batches) are the only way to effect atomic composite changes.\n\nAccepted: https://www.oasis-open.org/committees/download.php/48549/odata-meeting-29_on-20130314-minutes.html#odata-292\n\nImported from [ODATA-292](https://issues.oasis-open.org/browse/ODATA-292)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Consider adding a mechanism for idempotence with POST",
    "body": "Many backend systems will generate a key in response to a newly POSTed entity.\n\nIf a client sends a POST request to create an entity, and the OData service does create the entity, but the HTTP response to the client is lost, the client may be unsure as to whether or not the request succeeded. If the client repeats the request, it may result in duplicate information in the backend system.\n\nIdempotence is especially important for clients which want to be able to do store-and-forward (e.g. offline enablement).\n\n\n### Proposal\n\nPublish a committee note with defining a recommended mechanism for repeatable requests.\nA draft proposal for such a committee note can be found here:  https://www.oasis-open.org/committees/document.php?document_id=49430&wg_abbrev=odata .\n\nAccepted in F2F 2013-06-13\n\nImported from [ODATA-291](https://issues.oasis-open.org/browse/ODATA-291)",
    "labels": [
      "Repeatable Requests",
      "CN01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Check the use of SHOULD vs. MUST in Protocol spec",
    "body": "Protocol spec (2013-03-12) states:\n\n  10.4.2.2 Create Related Entities When Creating an Entity\n  A service that supports creating entities SHOULD support creating related entities as part of the same request.\n\nWe might wonder here (and in other sections in the spec, since I just gave this as one example) if instead of \"SHOULD\", we should see \"MUST\", in accordance with RFC 2119.\n\nUse of \"SHOULD\" implies that there are certain scenarios where the server does not need to support creating related entities when creating an entity. If that is the case, then the spec ought to define a way for the server to advertise whether or not it provides this service, so that the client can formulate valid requests that are possible for the server to execute.\n\n\n### Proposal\n\nRemove sentence as SHOULD is covered in conformance section, see [ODATA-409](https://issues.oasis-open.org/browse/ODATA-409).\n\n\nImported from [ODATA-290](https://issues.oasis-open.org/browse/ODATA-290)",
    "labels": [
      "Protocol",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Callback for notification after async invocation of Create, Update, Delete and Service Operations",
    "body": "URL convention for Create and Update implicitly assumes that clients make synchronous invocation. However, some data sources may take longer time to fulfill the request and hence suggest clients to make asynchronous invocation of these operations and response will be available at specific URL.\n\nSimilar mechanism for service operations as well\n\n### Proposal\n\nIntroduce a new prefer header named 'odata.callback' which can be used in combination with either the respond-async or odata.track-changes preferences. The following is the text proposed to be added to the protocol document:\n\nThere are two scenarios in which links are being returned which are then later used to retrieve information, following a previous request, from the service. These are:\n•\tThe service has provided a URL to a status monitor resource in the Location header of a 202 accepted response, to a request which specified the respond-async preference in the prefer header.\n•\tThe service has provided a delta-link in a response to a request in which the client expressed his desire to be able to track subsequent changes, by specifying the odata.track-changes preference in the prefer header.\n\nTo prevent having to poll the service for updates, not knowing if the request has finished in the async case or changes have become available in the delta-link case, the client MAY specify the odata.callback preference requesting the service to notify the consumer when the respective event has occurred.\n\nThe odata.callback preference can therefore be used:\n•\twhen requesting asynchronous processing of a request, using the respond-async preference \n•\ton a GET request to a delta-link\n\nIf the service honors the odata.callback preference it MUST include odata.callback in the Preference-Applied response header. If used on an asynchronous request the respond-async preference also MUST be included in the Preference-Applied response header.\n\nFor asynchronous requests the odata.callback preference, when applied, will result in the service invoking the specified service endpoint once the service has finished processing the request. The status monitor resource, returned in the Location Header of the previously returned 202 accepted response, can then be used to retrieve the results of the asynchronously executed request.\n\nAdding the odata.callback preference to a GET request to a delta-link at the time where there are no changes available and which also has the odata.track-changes preference specified, when applied, results in a 202 Accepted response to the GET request with a location header specifying the delta-link to be used to check for future updates. The service will invoke the specified service endpoint once new changes become available.\n\nCombining both the respond-async and odata.callback preference on a GET request to a delta-link, which also has the odata.track-changes preference specified, might influence the response in a couple of ways. If the service decides to process the request synchronously, and no updates are available, then the response is the same as if the respond-async hadn't been specified and results in a response as described above. If the service ends up processing the request asynchronously then it response with a 202 accepted response specifying the URL to the status monitor resources as it would have with any other asynchronous request. Once the service has finished processing the asynchronous request to the delta-link resource, it will invoke the specified service endpoint if updates are available. If however no updates are available it SHOULD hold of notifying the consumer until updates become available. Once notified, the consumer will use the status monitor resource, returned in the previously returned 202 accepted response, to retrieve the results of the asynchronously executed request against the delta-link resource. In case no updates were available after processing the initial request, the result will contain no updates and the consumer will use the delta-link contained in the result to retrieve the updates that have become available since.\n\nThe odata.callback preference MUST specify a URL, using a parameter named 'url', to a service endpoint which the service needs to invoke to notify the consumer. A service supporting callback SHOULD at least support the HTTP protocol. If the URL specifies references an HTTP endpoint, the service executes a HTTP GET request against the specified URL to notify the consumer. If a service support additional, non HTTP, protocols it SHOULD advertise the supported protocols using the capability annotation \"CallbackProtocols\" defined in [].\n\nThe consumer could reuse the same URL as the service end-point for notification. In case the same service endpoint is being used the service MAY collate those requests for notification and therefore effectively ignore the previous request for a notification. The consumer MUST be prepared to deal with situations in which it is being notified up to as many times as it asked to be notified and not presume that the service collates notifications even if it specified the same URL.\n\nThe Capability Annotation for Callback Protocols is specified as follows:\n<Term Name=\"CallbackProtocols\" Type=\"Collection(Capabilities.CallbackProtocolType)\" AppliesTo=\"EntityContainer EntitySet\">\n        <Annotation Term=\"Core.Description\" String=\"Lists all types of supported callback\n                      endpoints for this container or entity set\" />\n      </Term>\n      <ComplexType Name=\"CallbackProtocolType\">\n        <Property Name=\"Id\" Type=\"Edm.String\">\n          <Annotation Term=\"Core.Description\" String=\"Protcol Identifier\" />\n        </Property>\n        <Property Name=\"UrlTemplate\" Type=\"Edm.String\">\n          <Annotation Term=\"Core.Description\" String=\"URL Template including parameters. \n                    Parameters are enclosed in curly braces {} as defined in RFC6570\" />\n        </Property>\n        <Property Name=\"DocumentationUrl\" Type=\"Edm.String\" Nullable=\"true\">\n          <Annotation Term=\"Core.Description\" String=\"Human readable description of the \n                       meaning of the URL Template parameters\" />\n          <Annotation Term=\"Core.IsURL\"></Annotation>\n        </Property>\n      </ComplexType>\n\nApart from requiring the prefer-async preference to be returned in the Preference-Applied response header for the use with notifications we propose that the server MUST always return  the prefer-async preference in Preference-Applied response header if applied to make it consistent across its use in OData.\n\nImported from [ODATA-289](https://issues.oasis-open.org/browse/ODATA-289)",
    "labels": [
      "Protocol",
      "Vocabularies",
      "V4.0_CSD02"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Change default decimal Scale to variable",
    "body": "In order to avoid data modelers having to make excessive use of facets, the Decimal primitive type should allow variable Scale by default, rather than defaulting Scale to zero, which effectively makes unqualified edm.Decimal equivalent to xsd:integer.\n\nWe could thereby also eliminate the VariableScale facet.\n\n(A parallel consideration might be that if Scale=0 is common, then we should add an edm.Integer type).\n\n\n### Proposal\n\nEliminate VariableScale facet\nAdd Scale=\"Variable\" special value for Scale facet\nMake Scale=\"0\" the default\n\nAccepted: https://www.oasis-open.org/committees/download.php/48549/odata-meeting-29_on-20130314-minutes.html#odata-288\n\nImported from [ODATA-288](https://issues.oasis-open.org/browse/ODATA-288)",
    "labels": [
      "CSDL XML",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Need clarity about JSON encoding of Single and Double (and the applicability or not of ABNF rules) particularly for NaN, INF and -INF",
    "body": "According to odata-json-format-v4.0-wd01-2013-03-05-RH.doc (section 4.1.1)\n\n  Values of types Byte, SByte, Int16, Int32, Single, and Double are represented as JSON numbers.\n\nbut that does not account for NaN, Infinity and -Infinity.\n\nNow the ABNF (odata-abnf-construction-rules-v4.0-wd01.html) states that these values can be encoded as: 'NaN', 'INF' and '-INF'.\n\nHowever I understood that the ABNF rules are applicable to values in URLs, not in JSON (unless explicitly stated in the JSON doc, as is the case with geo types).\n\nAlso note that the ABNF allows Double values to end with \"d\", and Single values to end with \"f\".\n\nHere then, we see an apparent contradiction. NaN, INF, -INF, Double values ending with \"d\", and Single values ending with \"f\" are permitted by the ABNF rules, but not permitted in a JSON number.\n\nThe JSON spec (http://www.ietf.org/rfc/rfc4627.txt) section 2.4 quite clearly states:\n\n  Numeric values that cannot be represented as sequences of digits\n   (such as Infinity and NaN) are not permitted.\n\n\n\n### Proposal\n\nAllow that Single and Double can be represented as JSON number, except for \"NaN\", \"INF\" and \"-INF\" which must be encoded as JSON strings.\nAlso clarify use of these string values (from ABNF) in Atom, and include examples in both.\n\nImported from [ODATA-286](https://issues.oasis-open.org/browse/ODATA-286)",
    "labels": [
      "JSON Format",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  },
  {
    "title": "Section 4.7: explicitly mention which property types allow appending /$value",
    "body": "The current text doesn't exclude anything, not even complex properties or navigation properties. \n\n### Proposal\n\nOnly allow primitive types excluding Edm.Stream (which isn't really primitive).\n\nAccepted: https://www.oasis-open.org/committees/download.php/48549/odata-meeting-29_on-20130314-minutes.html#odata-285\n\nImported from [ODATA-285](https://issues.oasis-open.org/browse/ODATA-285)",
    "labels": [
      "URL Conventions",
      "V4.0_WD01"
    ],
    "assignees": [],
    "state": "closed",
    "state_reason": "completed"
  }
]